# Definitional proc to organize widgets for parameters.
proc init_gui { IPINST } {
  ipgui::add_param $IPINST -name "Component_Name"
  #Adding Page
  set Page_0 [ipgui::add_page $IPINST -name "Page 0"]
  ipgui::add_param $IPINST -name "C_ACC_RESET_POLARITY" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_0_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_100_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_101_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_102_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_103_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_104_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_105_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_106_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_107_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_108_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_109_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_10_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_110_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_111_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_112_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_113_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_114_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_115_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_116_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_117_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_118_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_119_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_11_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_120_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_121_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_122_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_123_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_124_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_125_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_126_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_127_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_12_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_13_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_14_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_15_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_16_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_17_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_18_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_19_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_1_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_20_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_21_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_22_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_23_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_24_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_25_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_26_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_27_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_28_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_29_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_2_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_30_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_31_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_32_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_33_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_34_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_35_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_36_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_37_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_38_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_39_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_3_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_40_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_41_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_42_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_43_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_44_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_45_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_46_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_47_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_48_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_49_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_4_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_50_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_51_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_52_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_53_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_54_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_55_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_56_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_57_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_58_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_59_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_5_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_60_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_61_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_62_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_63_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_64_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_65_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_66_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_67_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_68_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_69_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_6_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_70_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_71_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_72_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_73_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_74_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_75_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_76_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_77_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_78_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_79_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_7_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_80_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_81_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_82_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_83_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_84_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_85_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_86_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_87_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_88_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_89_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_8_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_90_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_91_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_92_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_93_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_94_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_95_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_96_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_97_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_98_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_99_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_BRAM_9_IS_INOUT" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_FIFO_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_HAS_RETURN" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_0_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_100_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_101_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_102_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_103_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_104_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_105_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_106_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_107_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_108_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_109_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_10_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_110_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_111_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_112_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_113_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_114_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_115_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_116_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_117_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_118_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_119_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_11_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_120_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_121_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_122_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_123_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_124_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_125_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_126_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_127_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_12_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_13_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_14_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_15_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_16_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_17_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_18_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_19_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_1_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_20_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_21_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_22_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_23_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_24_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_25_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_26_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_27_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_28_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_29_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_2_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_30_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_31_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_32_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_33_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_34_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_35_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_36_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_37_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_38_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_39_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_3_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_40_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_41_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_42_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_43_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_44_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_45_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_46_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_47_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_48_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_49_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_4_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_50_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_51_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_52_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_53_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_54_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_55_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_56_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_57_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_58_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_59_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_5_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_60_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_61_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_62_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_63_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_64_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_65_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_66_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_67_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_68_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_69_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_6_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_70_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_71_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_72_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_73_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_74_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_75_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_76_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_77_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_78_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_79_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_7_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_80_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_81_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_82_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_83_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_84_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_85_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_86_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_87_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_88_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_89_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_8_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_90_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_91_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_92_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_93_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_94_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_95_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_96_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_97_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_98_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_99_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INOUT_BRAM_9_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_BRAM_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_0_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_0_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_100_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_100_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_101_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_101_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_102_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_102_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_103_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_103_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_104_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_104_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_105_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_105_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_106_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_106_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_107_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_107_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_108_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_108_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_109_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_109_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_10_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_10_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_110_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_110_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_111_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_111_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_112_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_112_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_113_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_113_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_114_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_114_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_115_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_115_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_116_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_116_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_117_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_117_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_118_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_118_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_119_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_119_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_11_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_11_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_120_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_120_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_121_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_121_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_122_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_122_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_123_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_123_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_124_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_124_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_125_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_125_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_126_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_126_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_127_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_127_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_12_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_12_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_13_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_13_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_14_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_14_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_15_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_15_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_16_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_16_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_17_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_17_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_18_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_18_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_19_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_19_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_1_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_1_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_20_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_20_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_21_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_21_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_22_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_22_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_23_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_23_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_24_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_24_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_25_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_25_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_26_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_26_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_27_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_27_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_28_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_28_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_29_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_29_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_2_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_2_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_30_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_30_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_31_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_31_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_32_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_32_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_33_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_33_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_34_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_34_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_35_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_35_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_36_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_36_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_37_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_37_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_38_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_38_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_39_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_39_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_3_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_3_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_40_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_40_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_41_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_41_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_42_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_42_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_43_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_43_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_44_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_44_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_45_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_45_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_46_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_46_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_47_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_47_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_48_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_48_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_49_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_49_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_4_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_4_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_50_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_50_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_51_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_51_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_52_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_52_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_53_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_53_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_54_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_54_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_55_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_55_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_56_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_56_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_57_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_57_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_58_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_58_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_59_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_59_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_5_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_5_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_60_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_60_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_61_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_61_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_62_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_62_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_63_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_63_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_64_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_64_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_65_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_65_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_66_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_66_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_67_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_67_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_68_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_68_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_69_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_69_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_6_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_6_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_70_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_70_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_71_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_71_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_72_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_72_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_73_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_73_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_74_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_74_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_75_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_75_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_76_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_76_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_77_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_77_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_78_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_78_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_79_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_79_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_7_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_7_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_80_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_80_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_81_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_81_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_82_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_82_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_83_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_83_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_84_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_84_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_85_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_85_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_86_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_86_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_87_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_87_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_88_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_88_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_89_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_89_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_8_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_8_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_90_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_90_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_91_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_91_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_92_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_92_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_93_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_93_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_94_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_94_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_95_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_95_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_96_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_96_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_97_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_97_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_98_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_98_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_99_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_99_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_9_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_9_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_FIFO_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_INPUT_SCALAR_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_NUM_INPUT_BRAMs" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_NUM_INPUT_FIFOs" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_NUM_OUTPUT_BRAMs" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_NUM_OUTPUT_FIFOs" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_N_INPUT_SCALARS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_N_OUTPUT_SCALARS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_ADDR_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_MB_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_PORTS" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_BRAM_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_0_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_0_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_100_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_100_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_101_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_101_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_102_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_102_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_103_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_103_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_104_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_104_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_105_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_105_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_106_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_106_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_107_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_107_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_108_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_108_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_109_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_109_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_10_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_10_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_110_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_110_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_111_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_111_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_112_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_112_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_113_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_113_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_114_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_114_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_115_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_115_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_116_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_116_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_117_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_117_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_118_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_118_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_119_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_119_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_11_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_11_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_120_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_120_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_121_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_121_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_122_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_122_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_123_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_123_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_124_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_124_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_125_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_125_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_126_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_126_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_127_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_127_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_12_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_12_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_13_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_13_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_14_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_14_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_15_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_15_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_16_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_16_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_17_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_17_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_18_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_18_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_19_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_19_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_1_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_1_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_20_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_20_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_21_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_21_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_22_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_22_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_23_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_23_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_24_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_24_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_25_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_25_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_26_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_26_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_27_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_27_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_28_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_28_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_29_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_29_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_2_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_2_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_30_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_30_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_31_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_31_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_32_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_32_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_33_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_33_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_34_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_34_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_35_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_35_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_36_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_36_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_37_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_37_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_38_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_38_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_39_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_39_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_3_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_3_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_40_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_40_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_41_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_41_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_42_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_42_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_43_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_43_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_44_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_44_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_45_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_45_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_46_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_46_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_47_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_47_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_48_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_48_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_49_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_49_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_4_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_4_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_50_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_50_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_51_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_51_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_52_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_52_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_53_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_53_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_54_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_54_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_55_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_55_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_56_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_56_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_57_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_57_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_58_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_58_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_59_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_59_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_5_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_5_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_60_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_60_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_61_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_61_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_62_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_62_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_63_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_63_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_64_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_64_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_65_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_65_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_66_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_66_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_67_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_67_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_68_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_68_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_69_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_69_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_6_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_6_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_70_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_70_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_71_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_71_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_72_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_72_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_73_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_73_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_74_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_74_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_75_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_75_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_76_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_76_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_77_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_77_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_78_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_78_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_79_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_79_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_7_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_7_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_80_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_80_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_81_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_81_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_82_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_82_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_83_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_83_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_84_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_84_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_85_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_85_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_86_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_86_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_87_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_87_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_88_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_88_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_89_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_89_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_8_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_8_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_90_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_90_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_91_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_91_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_92_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_92_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_93_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_93_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_94_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_94_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_95_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_95_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_96_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_96_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_97_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_97_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_98_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_98_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_99_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_99_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_9_DEPTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_9_DMWIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_FIFO_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_0_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_100_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_101_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_102_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_103_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_104_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_105_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_106_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_107_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_108_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_109_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_10_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_110_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_111_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_112_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_113_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_114_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_115_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_116_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_117_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_118_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_119_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_11_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_120_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_121_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_122_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_123_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_124_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_125_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_126_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_127_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_12_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_13_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_14_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_15_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_16_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_17_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_18_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_19_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_1_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_20_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_21_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_22_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_23_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_24_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_25_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_26_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_27_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_28_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_29_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_2_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_30_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_31_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_32_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_33_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_34_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_35_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_36_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_37_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_38_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_39_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_3_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_40_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_41_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_42_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_43_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_44_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_45_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_46_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_47_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_48_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_49_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_4_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_50_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_51_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_52_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_53_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_54_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_55_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_56_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_57_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_58_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_59_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_5_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_60_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_61_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_62_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_63_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_64_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_65_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_66_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_67_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_68_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_69_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_6_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_70_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_71_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_72_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_73_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_74_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_75_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_76_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_77_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_78_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_79_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_7_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_80_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_81_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_82_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_83_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_84_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_85_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_86_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_87_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_88_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_89_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_8_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_90_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_91_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_92_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_93_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_94_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_95_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_96_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_97_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_98_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_99_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_OUTPUT_SCALAR_9_WIDTH" -parent ${Page_0}
  ipgui::add_param $IPINST -name "C_QUEUE_DEPTH" -parent ${Page_0}


}

proc update_PARAM_VALUE.C_ACC_RESET_POLARITY { PARAM_VALUE.C_ACC_RESET_POLARITY } {
	# Procedure called to update C_ACC_RESET_POLARITY when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_ACC_RESET_POLARITY { PARAM_VALUE.C_ACC_RESET_POLARITY } {
	# Procedure called to validate C_ACC_RESET_POLARITY
	return true
}

proc update_PARAM_VALUE.C_BRAM_0_IS_INOUT { PARAM_VALUE.C_BRAM_0_IS_INOUT } {
	# Procedure called to update C_BRAM_0_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_0_IS_INOUT { PARAM_VALUE.C_BRAM_0_IS_INOUT } {
	# Procedure called to validate C_BRAM_0_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_100_IS_INOUT { PARAM_VALUE.C_BRAM_100_IS_INOUT } {
	# Procedure called to update C_BRAM_100_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_100_IS_INOUT { PARAM_VALUE.C_BRAM_100_IS_INOUT } {
	# Procedure called to validate C_BRAM_100_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_101_IS_INOUT { PARAM_VALUE.C_BRAM_101_IS_INOUT } {
	# Procedure called to update C_BRAM_101_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_101_IS_INOUT { PARAM_VALUE.C_BRAM_101_IS_INOUT } {
	# Procedure called to validate C_BRAM_101_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_102_IS_INOUT { PARAM_VALUE.C_BRAM_102_IS_INOUT } {
	# Procedure called to update C_BRAM_102_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_102_IS_INOUT { PARAM_VALUE.C_BRAM_102_IS_INOUT } {
	# Procedure called to validate C_BRAM_102_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_103_IS_INOUT { PARAM_VALUE.C_BRAM_103_IS_INOUT } {
	# Procedure called to update C_BRAM_103_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_103_IS_INOUT { PARAM_VALUE.C_BRAM_103_IS_INOUT } {
	# Procedure called to validate C_BRAM_103_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_104_IS_INOUT { PARAM_VALUE.C_BRAM_104_IS_INOUT } {
	# Procedure called to update C_BRAM_104_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_104_IS_INOUT { PARAM_VALUE.C_BRAM_104_IS_INOUT } {
	# Procedure called to validate C_BRAM_104_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_105_IS_INOUT { PARAM_VALUE.C_BRAM_105_IS_INOUT } {
	# Procedure called to update C_BRAM_105_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_105_IS_INOUT { PARAM_VALUE.C_BRAM_105_IS_INOUT } {
	# Procedure called to validate C_BRAM_105_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_106_IS_INOUT { PARAM_VALUE.C_BRAM_106_IS_INOUT } {
	# Procedure called to update C_BRAM_106_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_106_IS_INOUT { PARAM_VALUE.C_BRAM_106_IS_INOUT } {
	# Procedure called to validate C_BRAM_106_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_107_IS_INOUT { PARAM_VALUE.C_BRAM_107_IS_INOUT } {
	# Procedure called to update C_BRAM_107_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_107_IS_INOUT { PARAM_VALUE.C_BRAM_107_IS_INOUT } {
	# Procedure called to validate C_BRAM_107_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_108_IS_INOUT { PARAM_VALUE.C_BRAM_108_IS_INOUT } {
	# Procedure called to update C_BRAM_108_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_108_IS_INOUT { PARAM_VALUE.C_BRAM_108_IS_INOUT } {
	# Procedure called to validate C_BRAM_108_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_109_IS_INOUT { PARAM_VALUE.C_BRAM_109_IS_INOUT } {
	# Procedure called to update C_BRAM_109_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_109_IS_INOUT { PARAM_VALUE.C_BRAM_109_IS_INOUT } {
	# Procedure called to validate C_BRAM_109_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_10_IS_INOUT { PARAM_VALUE.C_BRAM_10_IS_INOUT } {
	# Procedure called to update C_BRAM_10_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_10_IS_INOUT { PARAM_VALUE.C_BRAM_10_IS_INOUT } {
	# Procedure called to validate C_BRAM_10_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_110_IS_INOUT { PARAM_VALUE.C_BRAM_110_IS_INOUT } {
	# Procedure called to update C_BRAM_110_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_110_IS_INOUT { PARAM_VALUE.C_BRAM_110_IS_INOUT } {
	# Procedure called to validate C_BRAM_110_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_111_IS_INOUT { PARAM_VALUE.C_BRAM_111_IS_INOUT } {
	# Procedure called to update C_BRAM_111_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_111_IS_INOUT { PARAM_VALUE.C_BRAM_111_IS_INOUT } {
	# Procedure called to validate C_BRAM_111_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_112_IS_INOUT { PARAM_VALUE.C_BRAM_112_IS_INOUT } {
	# Procedure called to update C_BRAM_112_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_112_IS_INOUT { PARAM_VALUE.C_BRAM_112_IS_INOUT } {
	# Procedure called to validate C_BRAM_112_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_113_IS_INOUT { PARAM_VALUE.C_BRAM_113_IS_INOUT } {
	# Procedure called to update C_BRAM_113_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_113_IS_INOUT { PARAM_VALUE.C_BRAM_113_IS_INOUT } {
	# Procedure called to validate C_BRAM_113_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_114_IS_INOUT { PARAM_VALUE.C_BRAM_114_IS_INOUT } {
	# Procedure called to update C_BRAM_114_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_114_IS_INOUT { PARAM_VALUE.C_BRAM_114_IS_INOUT } {
	# Procedure called to validate C_BRAM_114_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_115_IS_INOUT { PARAM_VALUE.C_BRAM_115_IS_INOUT } {
	# Procedure called to update C_BRAM_115_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_115_IS_INOUT { PARAM_VALUE.C_BRAM_115_IS_INOUT } {
	# Procedure called to validate C_BRAM_115_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_116_IS_INOUT { PARAM_VALUE.C_BRAM_116_IS_INOUT } {
	# Procedure called to update C_BRAM_116_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_116_IS_INOUT { PARAM_VALUE.C_BRAM_116_IS_INOUT } {
	# Procedure called to validate C_BRAM_116_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_117_IS_INOUT { PARAM_VALUE.C_BRAM_117_IS_INOUT } {
	# Procedure called to update C_BRAM_117_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_117_IS_INOUT { PARAM_VALUE.C_BRAM_117_IS_INOUT } {
	# Procedure called to validate C_BRAM_117_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_118_IS_INOUT { PARAM_VALUE.C_BRAM_118_IS_INOUT } {
	# Procedure called to update C_BRAM_118_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_118_IS_INOUT { PARAM_VALUE.C_BRAM_118_IS_INOUT } {
	# Procedure called to validate C_BRAM_118_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_119_IS_INOUT { PARAM_VALUE.C_BRAM_119_IS_INOUT } {
	# Procedure called to update C_BRAM_119_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_119_IS_INOUT { PARAM_VALUE.C_BRAM_119_IS_INOUT } {
	# Procedure called to validate C_BRAM_119_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_11_IS_INOUT { PARAM_VALUE.C_BRAM_11_IS_INOUT } {
	# Procedure called to update C_BRAM_11_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_11_IS_INOUT { PARAM_VALUE.C_BRAM_11_IS_INOUT } {
	# Procedure called to validate C_BRAM_11_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_120_IS_INOUT { PARAM_VALUE.C_BRAM_120_IS_INOUT } {
	# Procedure called to update C_BRAM_120_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_120_IS_INOUT { PARAM_VALUE.C_BRAM_120_IS_INOUT } {
	# Procedure called to validate C_BRAM_120_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_121_IS_INOUT { PARAM_VALUE.C_BRAM_121_IS_INOUT } {
	# Procedure called to update C_BRAM_121_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_121_IS_INOUT { PARAM_VALUE.C_BRAM_121_IS_INOUT } {
	# Procedure called to validate C_BRAM_121_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_122_IS_INOUT { PARAM_VALUE.C_BRAM_122_IS_INOUT } {
	# Procedure called to update C_BRAM_122_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_122_IS_INOUT { PARAM_VALUE.C_BRAM_122_IS_INOUT } {
	# Procedure called to validate C_BRAM_122_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_123_IS_INOUT { PARAM_VALUE.C_BRAM_123_IS_INOUT } {
	# Procedure called to update C_BRAM_123_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_123_IS_INOUT { PARAM_VALUE.C_BRAM_123_IS_INOUT } {
	# Procedure called to validate C_BRAM_123_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_124_IS_INOUT { PARAM_VALUE.C_BRAM_124_IS_INOUT } {
	# Procedure called to update C_BRAM_124_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_124_IS_INOUT { PARAM_VALUE.C_BRAM_124_IS_INOUT } {
	# Procedure called to validate C_BRAM_124_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_125_IS_INOUT { PARAM_VALUE.C_BRAM_125_IS_INOUT } {
	# Procedure called to update C_BRAM_125_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_125_IS_INOUT { PARAM_VALUE.C_BRAM_125_IS_INOUT } {
	# Procedure called to validate C_BRAM_125_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_126_IS_INOUT { PARAM_VALUE.C_BRAM_126_IS_INOUT } {
	# Procedure called to update C_BRAM_126_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_126_IS_INOUT { PARAM_VALUE.C_BRAM_126_IS_INOUT } {
	# Procedure called to validate C_BRAM_126_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_127_IS_INOUT { PARAM_VALUE.C_BRAM_127_IS_INOUT } {
	# Procedure called to update C_BRAM_127_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_127_IS_INOUT { PARAM_VALUE.C_BRAM_127_IS_INOUT } {
	# Procedure called to validate C_BRAM_127_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_12_IS_INOUT { PARAM_VALUE.C_BRAM_12_IS_INOUT } {
	# Procedure called to update C_BRAM_12_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_12_IS_INOUT { PARAM_VALUE.C_BRAM_12_IS_INOUT } {
	# Procedure called to validate C_BRAM_12_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_13_IS_INOUT { PARAM_VALUE.C_BRAM_13_IS_INOUT } {
	# Procedure called to update C_BRAM_13_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_13_IS_INOUT { PARAM_VALUE.C_BRAM_13_IS_INOUT } {
	# Procedure called to validate C_BRAM_13_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_14_IS_INOUT { PARAM_VALUE.C_BRAM_14_IS_INOUT } {
	# Procedure called to update C_BRAM_14_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_14_IS_INOUT { PARAM_VALUE.C_BRAM_14_IS_INOUT } {
	# Procedure called to validate C_BRAM_14_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_15_IS_INOUT { PARAM_VALUE.C_BRAM_15_IS_INOUT } {
	# Procedure called to update C_BRAM_15_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_15_IS_INOUT { PARAM_VALUE.C_BRAM_15_IS_INOUT } {
	# Procedure called to validate C_BRAM_15_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_16_IS_INOUT { PARAM_VALUE.C_BRAM_16_IS_INOUT } {
	# Procedure called to update C_BRAM_16_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_16_IS_INOUT { PARAM_VALUE.C_BRAM_16_IS_INOUT } {
	# Procedure called to validate C_BRAM_16_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_17_IS_INOUT { PARAM_VALUE.C_BRAM_17_IS_INOUT } {
	# Procedure called to update C_BRAM_17_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_17_IS_INOUT { PARAM_VALUE.C_BRAM_17_IS_INOUT } {
	# Procedure called to validate C_BRAM_17_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_18_IS_INOUT { PARAM_VALUE.C_BRAM_18_IS_INOUT } {
	# Procedure called to update C_BRAM_18_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_18_IS_INOUT { PARAM_VALUE.C_BRAM_18_IS_INOUT } {
	# Procedure called to validate C_BRAM_18_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_19_IS_INOUT { PARAM_VALUE.C_BRAM_19_IS_INOUT } {
	# Procedure called to update C_BRAM_19_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_19_IS_INOUT { PARAM_VALUE.C_BRAM_19_IS_INOUT } {
	# Procedure called to validate C_BRAM_19_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_1_IS_INOUT { PARAM_VALUE.C_BRAM_1_IS_INOUT } {
	# Procedure called to update C_BRAM_1_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_1_IS_INOUT { PARAM_VALUE.C_BRAM_1_IS_INOUT } {
	# Procedure called to validate C_BRAM_1_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_20_IS_INOUT { PARAM_VALUE.C_BRAM_20_IS_INOUT } {
	# Procedure called to update C_BRAM_20_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_20_IS_INOUT { PARAM_VALUE.C_BRAM_20_IS_INOUT } {
	# Procedure called to validate C_BRAM_20_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_21_IS_INOUT { PARAM_VALUE.C_BRAM_21_IS_INOUT } {
	# Procedure called to update C_BRAM_21_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_21_IS_INOUT { PARAM_VALUE.C_BRAM_21_IS_INOUT } {
	# Procedure called to validate C_BRAM_21_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_22_IS_INOUT { PARAM_VALUE.C_BRAM_22_IS_INOUT } {
	# Procedure called to update C_BRAM_22_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_22_IS_INOUT { PARAM_VALUE.C_BRAM_22_IS_INOUT } {
	# Procedure called to validate C_BRAM_22_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_23_IS_INOUT { PARAM_VALUE.C_BRAM_23_IS_INOUT } {
	# Procedure called to update C_BRAM_23_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_23_IS_INOUT { PARAM_VALUE.C_BRAM_23_IS_INOUT } {
	# Procedure called to validate C_BRAM_23_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_24_IS_INOUT { PARAM_VALUE.C_BRAM_24_IS_INOUT } {
	# Procedure called to update C_BRAM_24_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_24_IS_INOUT { PARAM_VALUE.C_BRAM_24_IS_INOUT } {
	# Procedure called to validate C_BRAM_24_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_25_IS_INOUT { PARAM_VALUE.C_BRAM_25_IS_INOUT } {
	# Procedure called to update C_BRAM_25_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_25_IS_INOUT { PARAM_VALUE.C_BRAM_25_IS_INOUT } {
	# Procedure called to validate C_BRAM_25_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_26_IS_INOUT { PARAM_VALUE.C_BRAM_26_IS_INOUT } {
	# Procedure called to update C_BRAM_26_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_26_IS_INOUT { PARAM_VALUE.C_BRAM_26_IS_INOUT } {
	# Procedure called to validate C_BRAM_26_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_27_IS_INOUT { PARAM_VALUE.C_BRAM_27_IS_INOUT } {
	# Procedure called to update C_BRAM_27_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_27_IS_INOUT { PARAM_VALUE.C_BRAM_27_IS_INOUT } {
	# Procedure called to validate C_BRAM_27_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_28_IS_INOUT { PARAM_VALUE.C_BRAM_28_IS_INOUT } {
	# Procedure called to update C_BRAM_28_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_28_IS_INOUT { PARAM_VALUE.C_BRAM_28_IS_INOUT } {
	# Procedure called to validate C_BRAM_28_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_29_IS_INOUT { PARAM_VALUE.C_BRAM_29_IS_INOUT } {
	# Procedure called to update C_BRAM_29_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_29_IS_INOUT { PARAM_VALUE.C_BRAM_29_IS_INOUT } {
	# Procedure called to validate C_BRAM_29_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_2_IS_INOUT { PARAM_VALUE.C_BRAM_2_IS_INOUT } {
	# Procedure called to update C_BRAM_2_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_2_IS_INOUT { PARAM_VALUE.C_BRAM_2_IS_INOUT } {
	# Procedure called to validate C_BRAM_2_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_30_IS_INOUT { PARAM_VALUE.C_BRAM_30_IS_INOUT } {
	# Procedure called to update C_BRAM_30_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_30_IS_INOUT { PARAM_VALUE.C_BRAM_30_IS_INOUT } {
	# Procedure called to validate C_BRAM_30_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_31_IS_INOUT { PARAM_VALUE.C_BRAM_31_IS_INOUT } {
	# Procedure called to update C_BRAM_31_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_31_IS_INOUT { PARAM_VALUE.C_BRAM_31_IS_INOUT } {
	# Procedure called to validate C_BRAM_31_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_32_IS_INOUT { PARAM_VALUE.C_BRAM_32_IS_INOUT } {
	# Procedure called to update C_BRAM_32_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_32_IS_INOUT { PARAM_VALUE.C_BRAM_32_IS_INOUT } {
	# Procedure called to validate C_BRAM_32_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_33_IS_INOUT { PARAM_VALUE.C_BRAM_33_IS_INOUT } {
	# Procedure called to update C_BRAM_33_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_33_IS_INOUT { PARAM_VALUE.C_BRAM_33_IS_INOUT } {
	# Procedure called to validate C_BRAM_33_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_34_IS_INOUT { PARAM_VALUE.C_BRAM_34_IS_INOUT } {
	# Procedure called to update C_BRAM_34_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_34_IS_INOUT { PARAM_VALUE.C_BRAM_34_IS_INOUT } {
	# Procedure called to validate C_BRAM_34_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_35_IS_INOUT { PARAM_VALUE.C_BRAM_35_IS_INOUT } {
	# Procedure called to update C_BRAM_35_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_35_IS_INOUT { PARAM_VALUE.C_BRAM_35_IS_INOUT } {
	# Procedure called to validate C_BRAM_35_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_36_IS_INOUT { PARAM_VALUE.C_BRAM_36_IS_INOUT } {
	# Procedure called to update C_BRAM_36_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_36_IS_INOUT { PARAM_VALUE.C_BRAM_36_IS_INOUT } {
	# Procedure called to validate C_BRAM_36_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_37_IS_INOUT { PARAM_VALUE.C_BRAM_37_IS_INOUT } {
	# Procedure called to update C_BRAM_37_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_37_IS_INOUT { PARAM_VALUE.C_BRAM_37_IS_INOUT } {
	# Procedure called to validate C_BRAM_37_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_38_IS_INOUT { PARAM_VALUE.C_BRAM_38_IS_INOUT } {
	# Procedure called to update C_BRAM_38_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_38_IS_INOUT { PARAM_VALUE.C_BRAM_38_IS_INOUT } {
	# Procedure called to validate C_BRAM_38_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_39_IS_INOUT { PARAM_VALUE.C_BRAM_39_IS_INOUT } {
	# Procedure called to update C_BRAM_39_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_39_IS_INOUT { PARAM_VALUE.C_BRAM_39_IS_INOUT } {
	# Procedure called to validate C_BRAM_39_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_3_IS_INOUT { PARAM_VALUE.C_BRAM_3_IS_INOUT } {
	# Procedure called to update C_BRAM_3_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_3_IS_INOUT { PARAM_VALUE.C_BRAM_3_IS_INOUT } {
	# Procedure called to validate C_BRAM_3_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_40_IS_INOUT { PARAM_VALUE.C_BRAM_40_IS_INOUT } {
	# Procedure called to update C_BRAM_40_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_40_IS_INOUT { PARAM_VALUE.C_BRAM_40_IS_INOUT } {
	# Procedure called to validate C_BRAM_40_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_41_IS_INOUT { PARAM_VALUE.C_BRAM_41_IS_INOUT } {
	# Procedure called to update C_BRAM_41_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_41_IS_INOUT { PARAM_VALUE.C_BRAM_41_IS_INOUT } {
	# Procedure called to validate C_BRAM_41_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_42_IS_INOUT { PARAM_VALUE.C_BRAM_42_IS_INOUT } {
	# Procedure called to update C_BRAM_42_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_42_IS_INOUT { PARAM_VALUE.C_BRAM_42_IS_INOUT } {
	# Procedure called to validate C_BRAM_42_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_43_IS_INOUT { PARAM_VALUE.C_BRAM_43_IS_INOUT } {
	# Procedure called to update C_BRAM_43_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_43_IS_INOUT { PARAM_VALUE.C_BRAM_43_IS_INOUT } {
	# Procedure called to validate C_BRAM_43_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_44_IS_INOUT { PARAM_VALUE.C_BRAM_44_IS_INOUT } {
	# Procedure called to update C_BRAM_44_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_44_IS_INOUT { PARAM_VALUE.C_BRAM_44_IS_INOUT } {
	# Procedure called to validate C_BRAM_44_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_45_IS_INOUT { PARAM_VALUE.C_BRAM_45_IS_INOUT } {
	# Procedure called to update C_BRAM_45_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_45_IS_INOUT { PARAM_VALUE.C_BRAM_45_IS_INOUT } {
	# Procedure called to validate C_BRAM_45_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_46_IS_INOUT { PARAM_VALUE.C_BRAM_46_IS_INOUT } {
	# Procedure called to update C_BRAM_46_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_46_IS_INOUT { PARAM_VALUE.C_BRAM_46_IS_INOUT } {
	# Procedure called to validate C_BRAM_46_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_47_IS_INOUT { PARAM_VALUE.C_BRAM_47_IS_INOUT } {
	# Procedure called to update C_BRAM_47_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_47_IS_INOUT { PARAM_VALUE.C_BRAM_47_IS_INOUT } {
	# Procedure called to validate C_BRAM_47_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_48_IS_INOUT { PARAM_VALUE.C_BRAM_48_IS_INOUT } {
	# Procedure called to update C_BRAM_48_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_48_IS_INOUT { PARAM_VALUE.C_BRAM_48_IS_INOUT } {
	# Procedure called to validate C_BRAM_48_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_49_IS_INOUT { PARAM_VALUE.C_BRAM_49_IS_INOUT } {
	# Procedure called to update C_BRAM_49_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_49_IS_INOUT { PARAM_VALUE.C_BRAM_49_IS_INOUT } {
	# Procedure called to validate C_BRAM_49_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_4_IS_INOUT { PARAM_VALUE.C_BRAM_4_IS_INOUT } {
	# Procedure called to update C_BRAM_4_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_4_IS_INOUT { PARAM_VALUE.C_BRAM_4_IS_INOUT } {
	# Procedure called to validate C_BRAM_4_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_50_IS_INOUT { PARAM_VALUE.C_BRAM_50_IS_INOUT } {
	# Procedure called to update C_BRAM_50_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_50_IS_INOUT { PARAM_VALUE.C_BRAM_50_IS_INOUT } {
	# Procedure called to validate C_BRAM_50_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_51_IS_INOUT { PARAM_VALUE.C_BRAM_51_IS_INOUT } {
	# Procedure called to update C_BRAM_51_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_51_IS_INOUT { PARAM_VALUE.C_BRAM_51_IS_INOUT } {
	# Procedure called to validate C_BRAM_51_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_52_IS_INOUT { PARAM_VALUE.C_BRAM_52_IS_INOUT } {
	# Procedure called to update C_BRAM_52_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_52_IS_INOUT { PARAM_VALUE.C_BRAM_52_IS_INOUT } {
	# Procedure called to validate C_BRAM_52_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_53_IS_INOUT { PARAM_VALUE.C_BRAM_53_IS_INOUT } {
	# Procedure called to update C_BRAM_53_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_53_IS_INOUT { PARAM_VALUE.C_BRAM_53_IS_INOUT } {
	# Procedure called to validate C_BRAM_53_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_54_IS_INOUT { PARAM_VALUE.C_BRAM_54_IS_INOUT } {
	# Procedure called to update C_BRAM_54_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_54_IS_INOUT { PARAM_VALUE.C_BRAM_54_IS_INOUT } {
	# Procedure called to validate C_BRAM_54_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_55_IS_INOUT { PARAM_VALUE.C_BRAM_55_IS_INOUT } {
	# Procedure called to update C_BRAM_55_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_55_IS_INOUT { PARAM_VALUE.C_BRAM_55_IS_INOUT } {
	# Procedure called to validate C_BRAM_55_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_56_IS_INOUT { PARAM_VALUE.C_BRAM_56_IS_INOUT } {
	# Procedure called to update C_BRAM_56_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_56_IS_INOUT { PARAM_VALUE.C_BRAM_56_IS_INOUT } {
	# Procedure called to validate C_BRAM_56_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_57_IS_INOUT { PARAM_VALUE.C_BRAM_57_IS_INOUT } {
	# Procedure called to update C_BRAM_57_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_57_IS_INOUT { PARAM_VALUE.C_BRAM_57_IS_INOUT } {
	# Procedure called to validate C_BRAM_57_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_58_IS_INOUT { PARAM_VALUE.C_BRAM_58_IS_INOUT } {
	# Procedure called to update C_BRAM_58_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_58_IS_INOUT { PARAM_VALUE.C_BRAM_58_IS_INOUT } {
	# Procedure called to validate C_BRAM_58_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_59_IS_INOUT { PARAM_VALUE.C_BRAM_59_IS_INOUT } {
	# Procedure called to update C_BRAM_59_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_59_IS_INOUT { PARAM_VALUE.C_BRAM_59_IS_INOUT } {
	# Procedure called to validate C_BRAM_59_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_5_IS_INOUT { PARAM_VALUE.C_BRAM_5_IS_INOUT } {
	# Procedure called to update C_BRAM_5_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_5_IS_INOUT { PARAM_VALUE.C_BRAM_5_IS_INOUT } {
	# Procedure called to validate C_BRAM_5_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_60_IS_INOUT { PARAM_VALUE.C_BRAM_60_IS_INOUT } {
	# Procedure called to update C_BRAM_60_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_60_IS_INOUT { PARAM_VALUE.C_BRAM_60_IS_INOUT } {
	# Procedure called to validate C_BRAM_60_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_61_IS_INOUT { PARAM_VALUE.C_BRAM_61_IS_INOUT } {
	# Procedure called to update C_BRAM_61_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_61_IS_INOUT { PARAM_VALUE.C_BRAM_61_IS_INOUT } {
	# Procedure called to validate C_BRAM_61_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_62_IS_INOUT { PARAM_VALUE.C_BRAM_62_IS_INOUT } {
	# Procedure called to update C_BRAM_62_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_62_IS_INOUT { PARAM_VALUE.C_BRAM_62_IS_INOUT } {
	# Procedure called to validate C_BRAM_62_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_63_IS_INOUT { PARAM_VALUE.C_BRAM_63_IS_INOUT } {
	# Procedure called to update C_BRAM_63_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_63_IS_INOUT { PARAM_VALUE.C_BRAM_63_IS_INOUT } {
	# Procedure called to validate C_BRAM_63_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_64_IS_INOUT { PARAM_VALUE.C_BRAM_64_IS_INOUT } {
	# Procedure called to update C_BRAM_64_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_64_IS_INOUT { PARAM_VALUE.C_BRAM_64_IS_INOUT } {
	# Procedure called to validate C_BRAM_64_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_65_IS_INOUT { PARAM_VALUE.C_BRAM_65_IS_INOUT } {
	# Procedure called to update C_BRAM_65_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_65_IS_INOUT { PARAM_VALUE.C_BRAM_65_IS_INOUT } {
	# Procedure called to validate C_BRAM_65_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_66_IS_INOUT { PARAM_VALUE.C_BRAM_66_IS_INOUT } {
	# Procedure called to update C_BRAM_66_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_66_IS_INOUT { PARAM_VALUE.C_BRAM_66_IS_INOUT } {
	# Procedure called to validate C_BRAM_66_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_67_IS_INOUT { PARAM_VALUE.C_BRAM_67_IS_INOUT } {
	# Procedure called to update C_BRAM_67_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_67_IS_INOUT { PARAM_VALUE.C_BRAM_67_IS_INOUT } {
	# Procedure called to validate C_BRAM_67_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_68_IS_INOUT { PARAM_VALUE.C_BRAM_68_IS_INOUT } {
	# Procedure called to update C_BRAM_68_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_68_IS_INOUT { PARAM_VALUE.C_BRAM_68_IS_INOUT } {
	# Procedure called to validate C_BRAM_68_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_69_IS_INOUT { PARAM_VALUE.C_BRAM_69_IS_INOUT } {
	# Procedure called to update C_BRAM_69_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_69_IS_INOUT { PARAM_VALUE.C_BRAM_69_IS_INOUT } {
	# Procedure called to validate C_BRAM_69_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_6_IS_INOUT { PARAM_VALUE.C_BRAM_6_IS_INOUT } {
	# Procedure called to update C_BRAM_6_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_6_IS_INOUT { PARAM_VALUE.C_BRAM_6_IS_INOUT } {
	# Procedure called to validate C_BRAM_6_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_70_IS_INOUT { PARAM_VALUE.C_BRAM_70_IS_INOUT } {
	# Procedure called to update C_BRAM_70_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_70_IS_INOUT { PARAM_VALUE.C_BRAM_70_IS_INOUT } {
	# Procedure called to validate C_BRAM_70_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_71_IS_INOUT { PARAM_VALUE.C_BRAM_71_IS_INOUT } {
	# Procedure called to update C_BRAM_71_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_71_IS_INOUT { PARAM_VALUE.C_BRAM_71_IS_INOUT } {
	# Procedure called to validate C_BRAM_71_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_72_IS_INOUT { PARAM_VALUE.C_BRAM_72_IS_INOUT } {
	# Procedure called to update C_BRAM_72_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_72_IS_INOUT { PARAM_VALUE.C_BRAM_72_IS_INOUT } {
	# Procedure called to validate C_BRAM_72_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_73_IS_INOUT { PARAM_VALUE.C_BRAM_73_IS_INOUT } {
	# Procedure called to update C_BRAM_73_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_73_IS_INOUT { PARAM_VALUE.C_BRAM_73_IS_INOUT } {
	# Procedure called to validate C_BRAM_73_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_74_IS_INOUT { PARAM_VALUE.C_BRAM_74_IS_INOUT } {
	# Procedure called to update C_BRAM_74_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_74_IS_INOUT { PARAM_VALUE.C_BRAM_74_IS_INOUT } {
	# Procedure called to validate C_BRAM_74_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_75_IS_INOUT { PARAM_VALUE.C_BRAM_75_IS_INOUT } {
	# Procedure called to update C_BRAM_75_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_75_IS_INOUT { PARAM_VALUE.C_BRAM_75_IS_INOUT } {
	# Procedure called to validate C_BRAM_75_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_76_IS_INOUT { PARAM_VALUE.C_BRAM_76_IS_INOUT } {
	# Procedure called to update C_BRAM_76_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_76_IS_INOUT { PARAM_VALUE.C_BRAM_76_IS_INOUT } {
	# Procedure called to validate C_BRAM_76_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_77_IS_INOUT { PARAM_VALUE.C_BRAM_77_IS_INOUT } {
	# Procedure called to update C_BRAM_77_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_77_IS_INOUT { PARAM_VALUE.C_BRAM_77_IS_INOUT } {
	# Procedure called to validate C_BRAM_77_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_78_IS_INOUT { PARAM_VALUE.C_BRAM_78_IS_INOUT } {
	# Procedure called to update C_BRAM_78_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_78_IS_INOUT { PARAM_VALUE.C_BRAM_78_IS_INOUT } {
	# Procedure called to validate C_BRAM_78_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_79_IS_INOUT { PARAM_VALUE.C_BRAM_79_IS_INOUT } {
	# Procedure called to update C_BRAM_79_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_79_IS_INOUT { PARAM_VALUE.C_BRAM_79_IS_INOUT } {
	# Procedure called to validate C_BRAM_79_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_7_IS_INOUT { PARAM_VALUE.C_BRAM_7_IS_INOUT } {
	# Procedure called to update C_BRAM_7_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_7_IS_INOUT { PARAM_VALUE.C_BRAM_7_IS_INOUT } {
	# Procedure called to validate C_BRAM_7_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_80_IS_INOUT { PARAM_VALUE.C_BRAM_80_IS_INOUT } {
	# Procedure called to update C_BRAM_80_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_80_IS_INOUT { PARAM_VALUE.C_BRAM_80_IS_INOUT } {
	# Procedure called to validate C_BRAM_80_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_81_IS_INOUT { PARAM_VALUE.C_BRAM_81_IS_INOUT } {
	# Procedure called to update C_BRAM_81_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_81_IS_INOUT { PARAM_VALUE.C_BRAM_81_IS_INOUT } {
	# Procedure called to validate C_BRAM_81_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_82_IS_INOUT { PARAM_VALUE.C_BRAM_82_IS_INOUT } {
	# Procedure called to update C_BRAM_82_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_82_IS_INOUT { PARAM_VALUE.C_BRAM_82_IS_INOUT } {
	# Procedure called to validate C_BRAM_82_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_83_IS_INOUT { PARAM_VALUE.C_BRAM_83_IS_INOUT } {
	# Procedure called to update C_BRAM_83_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_83_IS_INOUT { PARAM_VALUE.C_BRAM_83_IS_INOUT } {
	# Procedure called to validate C_BRAM_83_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_84_IS_INOUT { PARAM_VALUE.C_BRAM_84_IS_INOUT } {
	# Procedure called to update C_BRAM_84_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_84_IS_INOUT { PARAM_VALUE.C_BRAM_84_IS_INOUT } {
	# Procedure called to validate C_BRAM_84_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_85_IS_INOUT { PARAM_VALUE.C_BRAM_85_IS_INOUT } {
	# Procedure called to update C_BRAM_85_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_85_IS_INOUT { PARAM_VALUE.C_BRAM_85_IS_INOUT } {
	# Procedure called to validate C_BRAM_85_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_86_IS_INOUT { PARAM_VALUE.C_BRAM_86_IS_INOUT } {
	# Procedure called to update C_BRAM_86_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_86_IS_INOUT { PARAM_VALUE.C_BRAM_86_IS_INOUT } {
	# Procedure called to validate C_BRAM_86_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_87_IS_INOUT { PARAM_VALUE.C_BRAM_87_IS_INOUT } {
	# Procedure called to update C_BRAM_87_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_87_IS_INOUT { PARAM_VALUE.C_BRAM_87_IS_INOUT } {
	# Procedure called to validate C_BRAM_87_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_88_IS_INOUT { PARAM_VALUE.C_BRAM_88_IS_INOUT } {
	# Procedure called to update C_BRAM_88_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_88_IS_INOUT { PARAM_VALUE.C_BRAM_88_IS_INOUT } {
	# Procedure called to validate C_BRAM_88_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_89_IS_INOUT { PARAM_VALUE.C_BRAM_89_IS_INOUT } {
	# Procedure called to update C_BRAM_89_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_89_IS_INOUT { PARAM_VALUE.C_BRAM_89_IS_INOUT } {
	# Procedure called to validate C_BRAM_89_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_8_IS_INOUT { PARAM_VALUE.C_BRAM_8_IS_INOUT } {
	# Procedure called to update C_BRAM_8_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_8_IS_INOUT { PARAM_VALUE.C_BRAM_8_IS_INOUT } {
	# Procedure called to validate C_BRAM_8_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_90_IS_INOUT { PARAM_VALUE.C_BRAM_90_IS_INOUT } {
	# Procedure called to update C_BRAM_90_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_90_IS_INOUT { PARAM_VALUE.C_BRAM_90_IS_INOUT } {
	# Procedure called to validate C_BRAM_90_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_91_IS_INOUT { PARAM_VALUE.C_BRAM_91_IS_INOUT } {
	# Procedure called to update C_BRAM_91_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_91_IS_INOUT { PARAM_VALUE.C_BRAM_91_IS_INOUT } {
	# Procedure called to validate C_BRAM_91_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_92_IS_INOUT { PARAM_VALUE.C_BRAM_92_IS_INOUT } {
	# Procedure called to update C_BRAM_92_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_92_IS_INOUT { PARAM_VALUE.C_BRAM_92_IS_INOUT } {
	# Procedure called to validate C_BRAM_92_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_93_IS_INOUT { PARAM_VALUE.C_BRAM_93_IS_INOUT } {
	# Procedure called to update C_BRAM_93_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_93_IS_INOUT { PARAM_VALUE.C_BRAM_93_IS_INOUT } {
	# Procedure called to validate C_BRAM_93_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_94_IS_INOUT { PARAM_VALUE.C_BRAM_94_IS_INOUT } {
	# Procedure called to update C_BRAM_94_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_94_IS_INOUT { PARAM_VALUE.C_BRAM_94_IS_INOUT } {
	# Procedure called to validate C_BRAM_94_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_95_IS_INOUT { PARAM_VALUE.C_BRAM_95_IS_INOUT } {
	# Procedure called to update C_BRAM_95_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_95_IS_INOUT { PARAM_VALUE.C_BRAM_95_IS_INOUT } {
	# Procedure called to validate C_BRAM_95_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_96_IS_INOUT { PARAM_VALUE.C_BRAM_96_IS_INOUT } {
	# Procedure called to update C_BRAM_96_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_96_IS_INOUT { PARAM_VALUE.C_BRAM_96_IS_INOUT } {
	# Procedure called to validate C_BRAM_96_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_97_IS_INOUT { PARAM_VALUE.C_BRAM_97_IS_INOUT } {
	# Procedure called to update C_BRAM_97_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_97_IS_INOUT { PARAM_VALUE.C_BRAM_97_IS_INOUT } {
	# Procedure called to validate C_BRAM_97_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_98_IS_INOUT { PARAM_VALUE.C_BRAM_98_IS_INOUT } {
	# Procedure called to update C_BRAM_98_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_98_IS_INOUT { PARAM_VALUE.C_BRAM_98_IS_INOUT } {
	# Procedure called to validate C_BRAM_98_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_99_IS_INOUT { PARAM_VALUE.C_BRAM_99_IS_INOUT } {
	# Procedure called to update C_BRAM_99_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_99_IS_INOUT { PARAM_VALUE.C_BRAM_99_IS_INOUT } {
	# Procedure called to validate C_BRAM_99_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_BRAM_9_IS_INOUT { PARAM_VALUE.C_BRAM_9_IS_INOUT } {
	# Procedure called to update C_BRAM_9_IS_INOUT when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_BRAM_9_IS_INOUT { PARAM_VALUE.C_BRAM_9_IS_INOUT } {
	# Procedure called to validate C_BRAM_9_IS_INOUT
	return true
}

proc update_PARAM_VALUE.C_FIFO_DEPTH { PARAM_VALUE.C_FIFO_DEPTH } {
	# Procedure called to update C_FIFO_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_FIFO_DEPTH { PARAM_VALUE.C_FIFO_DEPTH } {
	# Procedure called to validate C_FIFO_DEPTH
	return true
}

proc update_PARAM_VALUE.C_HAS_RETURN { PARAM_VALUE.C_HAS_RETURN } {
	# Procedure called to update C_HAS_RETURN when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_HAS_RETURN { PARAM_VALUE.C_HAS_RETURN } {
	# Procedure called to validate C_HAS_RETURN
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_0_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_0_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_100_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_100_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_101_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_101_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_102_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_102_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_103_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_103_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_104_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_104_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_105_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_105_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_106_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_106_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_107_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_107_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_108_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_108_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_109_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_109_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_10_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_10_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_110_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_110_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_111_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_111_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_112_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_112_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_113_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_113_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_114_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_114_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_115_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_115_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_116_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_116_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_117_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_117_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_118_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_118_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_119_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_119_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_11_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_11_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_120_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_120_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_121_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_121_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_122_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_122_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_123_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_123_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_124_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_124_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_125_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_125_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_126_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_126_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_127_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_127_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_12_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_12_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_13_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_13_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_14_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_14_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_15_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_15_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_16_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_16_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_17_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_17_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_18_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_18_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_19_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_19_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_1_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_1_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_20_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_20_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_21_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_21_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_22_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_22_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_23_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_23_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_24_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_24_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_25_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_25_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_26_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_26_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_27_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_27_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_28_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_28_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_29_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_29_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_2_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_2_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_30_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_30_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_31_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_31_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_32_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_32_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_33_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_33_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_34_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_34_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_35_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_35_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_36_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_36_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_37_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_37_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_38_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_38_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_39_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_39_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_3_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_3_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_40_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_40_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_41_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_41_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_42_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_42_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_43_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_43_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_44_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_44_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_45_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_45_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_46_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_46_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_47_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_47_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_48_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_48_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_49_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_49_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_4_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_4_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_50_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_50_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_51_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_51_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_52_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_52_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_53_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_53_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_54_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_54_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_55_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_55_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_56_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_56_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_57_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_57_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_58_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_58_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_59_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_59_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_5_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_5_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_60_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_60_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_61_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_61_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_62_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_62_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_63_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_63_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_64_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_64_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_65_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_65_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_66_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_66_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_67_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_67_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_68_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_68_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_69_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_69_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_6_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_6_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_70_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_70_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_71_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_71_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_72_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_72_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_73_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_73_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_74_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_74_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_75_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_75_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_76_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_76_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_77_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_77_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_78_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_78_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_79_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_79_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_7_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_7_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_80_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_80_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_81_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_81_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_82_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_82_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_83_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_83_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_84_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_84_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_85_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_85_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_86_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_86_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_87_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_87_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_88_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_88_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_89_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_89_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_8_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_8_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_90_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_90_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_91_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_91_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_92_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_92_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_93_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_93_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_94_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_94_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_95_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_95_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_96_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_96_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_97_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_97_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_98_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_98_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_99_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_99_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH } {
	# Procedure called to update C_INOUT_BRAM_9_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH } {
	# Procedure called to validate C_INOUT_BRAM_9_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_0_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_0_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_DEPTH { PARAM_VALUE.C_INPUT_BRAM_0_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_0_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_DEPTH { PARAM_VALUE.C_INPUT_BRAM_0_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_0_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_0_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_0_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_0_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_0_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_PORTS { PARAM_VALUE.C_INPUT_BRAM_0_PORTS } {
	# Procedure called to update C_INPUT_BRAM_0_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_PORTS { PARAM_VALUE.C_INPUT_BRAM_0_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_0_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_0_WIDTH { PARAM_VALUE.C_INPUT_BRAM_0_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_0_WIDTH { PARAM_VALUE.C_INPUT_BRAM_0_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_100_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_100_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_DEPTH { PARAM_VALUE.C_INPUT_BRAM_100_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_100_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_DEPTH { PARAM_VALUE.C_INPUT_BRAM_100_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_100_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_100_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_100_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_100_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_100_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_PORTS { PARAM_VALUE.C_INPUT_BRAM_100_PORTS } {
	# Procedure called to update C_INPUT_BRAM_100_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_PORTS { PARAM_VALUE.C_INPUT_BRAM_100_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_100_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_100_WIDTH { PARAM_VALUE.C_INPUT_BRAM_100_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_100_WIDTH { PARAM_VALUE.C_INPUT_BRAM_100_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_101_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_101_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_DEPTH { PARAM_VALUE.C_INPUT_BRAM_101_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_101_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_DEPTH { PARAM_VALUE.C_INPUT_BRAM_101_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_101_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_101_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_101_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_101_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_101_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_PORTS { PARAM_VALUE.C_INPUT_BRAM_101_PORTS } {
	# Procedure called to update C_INPUT_BRAM_101_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_PORTS { PARAM_VALUE.C_INPUT_BRAM_101_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_101_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_101_WIDTH { PARAM_VALUE.C_INPUT_BRAM_101_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_101_WIDTH { PARAM_VALUE.C_INPUT_BRAM_101_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_102_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_102_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_DEPTH { PARAM_VALUE.C_INPUT_BRAM_102_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_102_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_DEPTH { PARAM_VALUE.C_INPUT_BRAM_102_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_102_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_102_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_102_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_102_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_102_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_PORTS { PARAM_VALUE.C_INPUT_BRAM_102_PORTS } {
	# Procedure called to update C_INPUT_BRAM_102_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_PORTS { PARAM_VALUE.C_INPUT_BRAM_102_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_102_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_102_WIDTH { PARAM_VALUE.C_INPUT_BRAM_102_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_102_WIDTH { PARAM_VALUE.C_INPUT_BRAM_102_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_103_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_103_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_DEPTH { PARAM_VALUE.C_INPUT_BRAM_103_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_103_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_DEPTH { PARAM_VALUE.C_INPUT_BRAM_103_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_103_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_103_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_103_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_103_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_103_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_PORTS { PARAM_VALUE.C_INPUT_BRAM_103_PORTS } {
	# Procedure called to update C_INPUT_BRAM_103_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_PORTS { PARAM_VALUE.C_INPUT_BRAM_103_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_103_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_103_WIDTH { PARAM_VALUE.C_INPUT_BRAM_103_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_103_WIDTH { PARAM_VALUE.C_INPUT_BRAM_103_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_104_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_104_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_DEPTH { PARAM_VALUE.C_INPUT_BRAM_104_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_104_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_DEPTH { PARAM_VALUE.C_INPUT_BRAM_104_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_104_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_104_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_104_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_104_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_104_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_PORTS { PARAM_VALUE.C_INPUT_BRAM_104_PORTS } {
	# Procedure called to update C_INPUT_BRAM_104_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_PORTS { PARAM_VALUE.C_INPUT_BRAM_104_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_104_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_104_WIDTH { PARAM_VALUE.C_INPUT_BRAM_104_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_104_WIDTH { PARAM_VALUE.C_INPUT_BRAM_104_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_105_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_105_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_DEPTH { PARAM_VALUE.C_INPUT_BRAM_105_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_105_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_DEPTH { PARAM_VALUE.C_INPUT_BRAM_105_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_105_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_105_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_105_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_105_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_105_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_PORTS { PARAM_VALUE.C_INPUT_BRAM_105_PORTS } {
	# Procedure called to update C_INPUT_BRAM_105_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_PORTS { PARAM_VALUE.C_INPUT_BRAM_105_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_105_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_105_WIDTH { PARAM_VALUE.C_INPUT_BRAM_105_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_105_WIDTH { PARAM_VALUE.C_INPUT_BRAM_105_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_106_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_106_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_DEPTH { PARAM_VALUE.C_INPUT_BRAM_106_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_106_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_DEPTH { PARAM_VALUE.C_INPUT_BRAM_106_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_106_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_106_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_106_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_106_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_106_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_PORTS { PARAM_VALUE.C_INPUT_BRAM_106_PORTS } {
	# Procedure called to update C_INPUT_BRAM_106_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_PORTS { PARAM_VALUE.C_INPUT_BRAM_106_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_106_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_106_WIDTH { PARAM_VALUE.C_INPUT_BRAM_106_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_106_WIDTH { PARAM_VALUE.C_INPUT_BRAM_106_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_107_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_107_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_DEPTH { PARAM_VALUE.C_INPUT_BRAM_107_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_107_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_DEPTH { PARAM_VALUE.C_INPUT_BRAM_107_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_107_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_107_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_107_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_107_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_107_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_PORTS { PARAM_VALUE.C_INPUT_BRAM_107_PORTS } {
	# Procedure called to update C_INPUT_BRAM_107_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_PORTS { PARAM_VALUE.C_INPUT_BRAM_107_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_107_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_107_WIDTH { PARAM_VALUE.C_INPUT_BRAM_107_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_107_WIDTH { PARAM_VALUE.C_INPUT_BRAM_107_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_108_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_108_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_DEPTH { PARAM_VALUE.C_INPUT_BRAM_108_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_108_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_DEPTH { PARAM_VALUE.C_INPUT_BRAM_108_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_108_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_108_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_108_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_108_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_108_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_PORTS { PARAM_VALUE.C_INPUT_BRAM_108_PORTS } {
	# Procedure called to update C_INPUT_BRAM_108_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_PORTS { PARAM_VALUE.C_INPUT_BRAM_108_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_108_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_108_WIDTH { PARAM_VALUE.C_INPUT_BRAM_108_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_108_WIDTH { PARAM_VALUE.C_INPUT_BRAM_108_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_109_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_109_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_DEPTH { PARAM_VALUE.C_INPUT_BRAM_109_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_109_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_DEPTH { PARAM_VALUE.C_INPUT_BRAM_109_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_109_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_109_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_109_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_109_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_109_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_PORTS { PARAM_VALUE.C_INPUT_BRAM_109_PORTS } {
	# Procedure called to update C_INPUT_BRAM_109_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_PORTS { PARAM_VALUE.C_INPUT_BRAM_109_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_109_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_109_WIDTH { PARAM_VALUE.C_INPUT_BRAM_109_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_109_WIDTH { PARAM_VALUE.C_INPUT_BRAM_109_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_10_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_10_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_DEPTH { PARAM_VALUE.C_INPUT_BRAM_10_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_10_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_DEPTH { PARAM_VALUE.C_INPUT_BRAM_10_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_10_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_10_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_10_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_10_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_10_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_PORTS { PARAM_VALUE.C_INPUT_BRAM_10_PORTS } {
	# Procedure called to update C_INPUT_BRAM_10_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_PORTS { PARAM_VALUE.C_INPUT_BRAM_10_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_10_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_10_WIDTH { PARAM_VALUE.C_INPUT_BRAM_10_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_10_WIDTH { PARAM_VALUE.C_INPUT_BRAM_10_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_110_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_110_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_DEPTH { PARAM_VALUE.C_INPUT_BRAM_110_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_110_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_DEPTH { PARAM_VALUE.C_INPUT_BRAM_110_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_110_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_110_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_110_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_110_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_110_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_PORTS { PARAM_VALUE.C_INPUT_BRAM_110_PORTS } {
	# Procedure called to update C_INPUT_BRAM_110_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_PORTS { PARAM_VALUE.C_INPUT_BRAM_110_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_110_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_110_WIDTH { PARAM_VALUE.C_INPUT_BRAM_110_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_110_WIDTH { PARAM_VALUE.C_INPUT_BRAM_110_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_111_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_111_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_DEPTH { PARAM_VALUE.C_INPUT_BRAM_111_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_111_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_DEPTH { PARAM_VALUE.C_INPUT_BRAM_111_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_111_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_111_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_111_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_111_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_111_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_PORTS { PARAM_VALUE.C_INPUT_BRAM_111_PORTS } {
	# Procedure called to update C_INPUT_BRAM_111_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_PORTS { PARAM_VALUE.C_INPUT_BRAM_111_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_111_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_111_WIDTH { PARAM_VALUE.C_INPUT_BRAM_111_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_111_WIDTH { PARAM_VALUE.C_INPUT_BRAM_111_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_112_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_112_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_DEPTH { PARAM_VALUE.C_INPUT_BRAM_112_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_112_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_DEPTH { PARAM_VALUE.C_INPUT_BRAM_112_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_112_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_112_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_112_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_112_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_112_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_PORTS { PARAM_VALUE.C_INPUT_BRAM_112_PORTS } {
	# Procedure called to update C_INPUT_BRAM_112_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_PORTS { PARAM_VALUE.C_INPUT_BRAM_112_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_112_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_112_WIDTH { PARAM_VALUE.C_INPUT_BRAM_112_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_112_WIDTH { PARAM_VALUE.C_INPUT_BRAM_112_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_113_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_113_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_DEPTH { PARAM_VALUE.C_INPUT_BRAM_113_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_113_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_DEPTH { PARAM_VALUE.C_INPUT_BRAM_113_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_113_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_113_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_113_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_113_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_113_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_PORTS { PARAM_VALUE.C_INPUT_BRAM_113_PORTS } {
	# Procedure called to update C_INPUT_BRAM_113_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_PORTS { PARAM_VALUE.C_INPUT_BRAM_113_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_113_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_113_WIDTH { PARAM_VALUE.C_INPUT_BRAM_113_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_113_WIDTH { PARAM_VALUE.C_INPUT_BRAM_113_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_114_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_114_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_DEPTH { PARAM_VALUE.C_INPUT_BRAM_114_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_114_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_DEPTH { PARAM_VALUE.C_INPUT_BRAM_114_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_114_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_114_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_114_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_114_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_114_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_PORTS { PARAM_VALUE.C_INPUT_BRAM_114_PORTS } {
	# Procedure called to update C_INPUT_BRAM_114_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_PORTS { PARAM_VALUE.C_INPUT_BRAM_114_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_114_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_114_WIDTH { PARAM_VALUE.C_INPUT_BRAM_114_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_114_WIDTH { PARAM_VALUE.C_INPUT_BRAM_114_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_115_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_115_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_DEPTH { PARAM_VALUE.C_INPUT_BRAM_115_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_115_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_DEPTH { PARAM_VALUE.C_INPUT_BRAM_115_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_115_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_115_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_115_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_115_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_115_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_PORTS { PARAM_VALUE.C_INPUT_BRAM_115_PORTS } {
	# Procedure called to update C_INPUT_BRAM_115_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_PORTS { PARAM_VALUE.C_INPUT_BRAM_115_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_115_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_115_WIDTH { PARAM_VALUE.C_INPUT_BRAM_115_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_115_WIDTH { PARAM_VALUE.C_INPUT_BRAM_115_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_116_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_116_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_DEPTH { PARAM_VALUE.C_INPUT_BRAM_116_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_116_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_DEPTH { PARAM_VALUE.C_INPUT_BRAM_116_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_116_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_116_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_116_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_116_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_116_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_PORTS { PARAM_VALUE.C_INPUT_BRAM_116_PORTS } {
	# Procedure called to update C_INPUT_BRAM_116_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_PORTS { PARAM_VALUE.C_INPUT_BRAM_116_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_116_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_116_WIDTH { PARAM_VALUE.C_INPUT_BRAM_116_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_116_WIDTH { PARAM_VALUE.C_INPUT_BRAM_116_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_117_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_117_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_DEPTH { PARAM_VALUE.C_INPUT_BRAM_117_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_117_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_DEPTH { PARAM_VALUE.C_INPUT_BRAM_117_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_117_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_117_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_117_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_117_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_117_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_PORTS { PARAM_VALUE.C_INPUT_BRAM_117_PORTS } {
	# Procedure called to update C_INPUT_BRAM_117_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_PORTS { PARAM_VALUE.C_INPUT_BRAM_117_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_117_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_117_WIDTH { PARAM_VALUE.C_INPUT_BRAM_117_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_117_WIDTH { PARAM_VALUE.C_INPUT_BRAM_117_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_118_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_118_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_DEPTH { PARAM_VALUE.C_INPUT_BRAM_118_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_118_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_DEPTH { PARAM_VALUE.C_INPUT_BRAM_118_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_118_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_118_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_118_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_118_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_118_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_PORTS { PARAM_VALUE.C_INPUT_BRAM_118_PORTS } {
	# Procedure called to update C_INPUT_BRAM_118_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_PORTS { PARAM_VALUE.C_INPUT_BRAM_118_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_118_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_118_WIDTH { PARAM_VALUE.C_INPUT_BRAM_118_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_118_WIDTH { PARAM_VALUE.C_INPUT_BRAM_118_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_119_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_119_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_DEPTH { PARAM_VALUE.C_INPUT_BRAM_119_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_119_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_DEPTH { PARAM_VALUE.C_INPUT_BRAM_119_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_119_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_119_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_119_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_119_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_119_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_PORTS { PARAM_VALUE.C_INPUT_BRAM_119_PORTS } {
	# Procedure called to update C_INPUT_BRAM_119_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_PORTS { PARAM_VALUE.C_INPUT_BRAM_119_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_119_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_119_WIDTH { PARAM_VALUE.C_INPUT_BRAM_119_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_119_WIDTH { PARAM_VALUE.C_INPUT_BRAM_119_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_11_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_11_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_DEPTH { PARAM_VALUE.C_INPUT_BRAM_11_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_11_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_DEPTH { PARAM_VALUE.C_INPUT_BRAM_11_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_11_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_11_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_11_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_11_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_11_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_PORTS { PARAM_VALUE.C_INPUT_BRAM_11_PORTS } {
	# Procedure called to update C_INPUT_BRAM_11_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_PORTS { PARAM_VALUE.C_INPUT_BRAM_11_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_11_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_11_WIDTH { PARAM_VALUE.C_INPUT_BRAM_11_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_11_WIDTH { PARAM_VALUE.C_INPUT_BRAM_11_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_120_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_120_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_DEPTH { PARAM_VALUE.C_INPUT_BRAM_120_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_120_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_DEPTH { PARAM_VALUE.C_INPUT_BRAM_120_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_120_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_120_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_120_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_120_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_120_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_PORTS { PARAM_VALUE.C_INPUT_BRAM_120_PORTS } {
	# Procedure called to update C_INPUT_BRAM_120_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_PORTS { PARAM_VALUE.C_INPUT_BRAM_120_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_120_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_120_WIDTH { PARAM_VALUE.C_INPUT_BRAM_120_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_120_WIDTH { PARAM_VALUE.C_INPUT_BRAM_120_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_121_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_121_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_DEPTH { PARAM_VALUE.C_INPUT_BRAM_121_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_121_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_DEPTH { PARAM_VALUE.C_INPUT_BRAM_121_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_121_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_121_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_121_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_121_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_121_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_PORTS { PARAM_VALUE.C_INPUT_BRAM_121_PORTS } {
	# Procedure called to update C_INPUT_BRAM_121_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_PORTS { PARAM_VALUE.C_INPUT_BRAM_121_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_121_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_121_WIDTH { PARAM_VALUE.C_INPUT_BRAM_121_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_121_WIDTH { PARAM_VALUE.C_INPUT_BRAM_121_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_122_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_122_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_DEPTH { PARAM_VALUE.C_INPUT_BRAM_122_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_122_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_DEPTH { PARAM_VALUE.C_INPUT_BRAM_122_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_122_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_122_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_122_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_122_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_122_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_PORTS { PARAM_VALUE.C_INPUT_BRAM_122_PORTS } {
	# Procedure called to update C_INPUT_BRAM_122_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_PORTS { PARAM_VALUE.C_INPUT_BRAM_122_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_122_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_122_WIDTH { PARAM_VALUE.C_INPUT_BRAM_122_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_122_WIDTH { PARAM_VALUE.C_INPUT_BRAM_122_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_123_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_123_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_DEPTH { PARAM_VALUE.C_INPUT_BRAM_123_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_123_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_DEPTH { PARAM_VALUE.C_INPUT_BRAM_123_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_123_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_123_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_123_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_123_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_123_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_PORTS { PARAM_VALUE.C_INPUT_BRAM_123_PORTS } {
	# Procedure called to update C_INPUT_BRAM_123_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_PORTS { PARAM_VALUE.C_INPUT_BRAM_123_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_123_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_123_WIDTH { PARAM_VALUE.C_INPUT_BRAM_123_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_123_WIDTH { PARAM_VALUE.C_INPUT_BRAM_123_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_124_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_124_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_DEPTH { PARAM_VALUE.C_INPUT_BRAM_124_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_124_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_DEPTH { PARAM_VALUE.C_INPUT_BRAM_124_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_124_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_124_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_124_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_124_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_124_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_PORTS { PARAM_VALUE.C_INPUT_BRAM_124_PORTS } {
	# Procedure called to update C_INPUT_BRAM_124_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_PORTS { PARAM_VALUE.C_INPUT_BRAM_124_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_124_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_124_WIDTH { PARAM_VALUE.C_INPUT_BRAM_124_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_124_WIDTH { PARAM_VALUE.C_INPUT_BRAM_124_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_125_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_125_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_DEPTH { PARAM_VALUE.C_INPUT_BRAM_125_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_125_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_DEPTH { PARAM_VALUE.C_INPUT_BRAM_125_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_125_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_125_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_125_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_125_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_125_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_PORTS { PARAM_VALUE.C_INPUT_BRAM_125_PORTS } {
	# Procedure called to update C_INPUT_BRAM_125_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_PORTS { PARAM_VALUE.C_INPUT_BRAM_125_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_125_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_125_WIDTH { PARAM_VALUE.C_INPUT_BRAM_125_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_125_WIDTH { PARAM_VALUE.C_INPUT_BRAM_125_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_126_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_126_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_DEPTH { PARAM_VALUE.C_INPUT_BRAM_126_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_126_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_DEPTH { PARAM_VALUE.C_INPUT_BRAM_126_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_126_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_126_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_126_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_126_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_126_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_PORTS { PARAM_VALUE.C_INPUT_BRAM_126_PORTS } {
	# Procedure called to update C_INPUT_BRAM_126_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_PORTS { PARAM_VALUE.C_INPUT_BRAM_126_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_126_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_126_WIDTH { PARAM_VALUE.C_INPUT_BRAM_126_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_126_WIDTH { PARAM_VALUE.C_INPUT_BRAM_126_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_127_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_127_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_DEPTH { PARAM_VALUE.C_INPUT_BRAM_127_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_127_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_DEPTH { PARAM_VALUE.C_INPUT_BRAM_127_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_127_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_127_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_127_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_127_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_127_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_PORTS { PARAM_VALUE.C_INPUT_BRAM_127_PORTS } {
	# Procedure called to update C_INPUT_BRAM_127_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_PORTS { PARAM_VALUE.C_INPUT_BRAM_127_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_127_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_127_WIDTH { PARAM_VALUE.C_INPUT_BRAM_127_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_127_WIDTH { PARAM_VALUE.C_INPUT_BRAM_127_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_12_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_12_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_DEPTH { PARAM_VALUE.C_INPUT_BRAM_12_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_12_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_DEPTH { PARAM_VALUE.C_INPUT_BRAM_12_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_12_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_12_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_12_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_12_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_12_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_PORTS { PARAM_VALUE.C_INPUT_BRAM_12_PORTS } {
	# Procedure called to update C_INPUT_BRAM_12_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_PORTS { PARAM_VALUE.C_INPUT_BRAM_12_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_12_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_12_WIDTH { PARAM_VALUE.C_INPUT_BRAM_12_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_12_WIDTH { PARAM_VALUE.C_INPUT_BRAM_12_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_13_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_13_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_DEPTH { PARAM_VALUE.C_INPUT_BRAM_13_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_13_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_DEPTH { PARAM_VALUE.C_INPUT_BRAM_13_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_13_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_13_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_13_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_13_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_13_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_PORTS { PARAM_VALUE.C_INPUT_BRAM_13_PORTS } {
	# Procedure called to update C_INPUT_BRAM_13_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_PORTS { PARAM_VALUE.C_INPUT_BRAM_13_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_13_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_13_WIDTH { PARAM_VALUE.C_INPUT_BRAM_13_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_13_WIDTH { PARAM_VALUE.C_INPUT_BRAM_13_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_14_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_14_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_DEPTH { PARAM_VALUE.C_INPUT_BRAM_14_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_14_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_DEPTH { PARAM_VALUE.C_INPUT_BRAM_14_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_14_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_14_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_14_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_14_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_14_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_PORTS { PARAM_VALUE.C_INPUT_BRAM_14_PORTS } {
	# Procedure called to update C_INPUT_BRAM_14_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_PORTS { PARAM_VALUE.C_INPUT_BRAM_14_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_14_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_14_WIDTH { PARAM_VALUE.C_INPUT_BRAM_14_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_14_WIDTH { PARAM_VALUE.C_INPUT_BRAM_14_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_15_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_15_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_DEPTH { PARAM_VALUE.C_INPUT_BRAM_15_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_15_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_DEPTH { PARAM_VALUE.C_INPUT_BRAM_15_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_15_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_15_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_15_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_15_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_15_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_PORTS { PARAM_VALUE.C_INPUT_BRAM_15_PORTS } {
	# Procedure called to update C_INPUT_BRAM_15_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_PORTS { PARAM_VALUE.C_INPUT_BRAM_15_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_15_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_15_WIDTH { PARAM_VALUE.C_INPUT_BRAM_15_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_15_WIDTH { PARAM_VALUE.C_INPUT_BRAM_15_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_16_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_16_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_DEPTH { PARAM_VALUE.C_INPUT_BRAM_16_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_16_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_DEPTH { PARAM_VALUE.C_INPUT_BRAM_16_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_16_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_16_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_16_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_16_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_16_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_PORTS { PARAM_VALUE.C_INPUT_BRAM_16_PORTS } {
	# Procedure called to update C_INPUT_BRAM_16_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_PORTS { PARAM_VALUE.C_INPUT_BRAM_16_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_16_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_16_WIDTH { PARAM_VALUE.C_INPUT_BRAM_16_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_16_WIDTH { PARAM_VALUE.C_INPUT_BRAM_16_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_17_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_17_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_DEPTH { PARAM_VALUE.C_INPUT_BRAM_17_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_17_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_DEPTH { PARAM_VALUE.C_INPUT_BRAM_17_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_17_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_17_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_17_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_17_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_17_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_PORTS { PARAM_VALUE.C_INPUT_BRAM_17_PORTS } {
	# Procedure called to update C_INPUT_BRAM_17_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_PORTS { PARAM_VALUE.C_INPUT_BRAM_17_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_17_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_17_WIDTH { PARAM_VALUE.C_INPUT_BRAM_17_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_17_WIDTH { PARAM_VALUE.C_INPUT_BRAM_17_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_18_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_18_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_DEPTH { PARAM_VALUE.C_INPUT_BRAM_18_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_18_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_DEPTH { PARAM_VALUE.C_INPUT_BRAM_18_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_18_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_18_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_18_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_18_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_18_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_PORTS { PARAM_VALUE.C_INPUT_BRAM_18_PORTS } {
	# Procedure called to update C_INPUT_BRAM_18_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_PORTS { PARAM_VALUE.C_INPUT_BRAM_18_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_18_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_18_WIDTH { PARAM_VALUE.C_INPUT_BRAM_18_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_18_WIDTH { PARAM_VALUE.C_INPUT_BRAM_18_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_19_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_19_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_DEPTH { PARAM_VALUE.C_INPUT_BRAM_19_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_19_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_DEPTH { PARAM_VALUE.C_INPUT_BRAM_19_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_19_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_19_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_19_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_19_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_19_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_PORTS { PARAM_VALUE.C_INPUT_BRAM_19_PORTS } {
	# Procedure called to update C_INPUT_BRAM_19_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_PORTS { PARAM_VALUE.C_INPUT_BRAM_19_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_19_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_19_WIDTH { PARAM_VALUE.C_INPUT_BRAM_19_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_19_WIDTH { PARAM_VALUE.C_INPUT_BRAM_19_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_1_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_1_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_DEPTH { PARAM_VALUE.C_INPUT_BRAM_1_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_1_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_DEPTH { PARAM_VALUE.C_INPUT_BRAM_1_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_1_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_1_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_1_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_1_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_1_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_PORTS { PARAM_VALUE.C_INPUT_BRAM_1_PORTS } {
	# Procedure called to update C_INPUT_BRAM_1_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_PORTS { PARAM_VALUE.C_INPUT_BRAM_1_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_1_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_1_WIDTH { PARAM_VALUE.C_INPUT_BRAM_1_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_1_WIDTH { PARAM_VALUE.C_INPUT_BRAM_1_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_20_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_20_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_DEPTH { PARAM_VALUE.C_INPUT_BRAM_20_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_20_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_DEPTH { PARAM_VALUE.C_INPUT_BRAM_20_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_20_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_20_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_20_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_20_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_20_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_PORTS { PARAM_VALUE.C_INPUT_BRAM_20_PORTS } {
	# Procedure called to update C_INPUT_BRAM_20_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_PORTS { PARAM_VALUE.C_INPUT_BRAM_20_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_20_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_20_WIDTH { PARAM_VALUE.C_INPUT_BRAM_20_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_20_WIDTH { PARAM_VALUE.C_INPUT_BRAM_20_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_21_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_21_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_DEPTH { PARAM_VALUE.C_INPUT_BRAM_21_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_21_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_DEPTH { PARAM_VALUE.C_INPUT_BRAM_21_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_21_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_21_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_21_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_21_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_21_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_PORTS { PARAM_VALUE.C_INPUT_BRAM_21_PORTS } {
	# Procedure called to update C_INPUT_BRAM_21_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_PORTS { PARAM_VALUE.C_INPUT_BRAM_21_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_21_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_21_WIDTH { PARAM_VALUE.C_INPUT_BRAM_21_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_21_WIDTH { PARAM_VALUE.C_INPUT_BRAM_21_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_22_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_22_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_DEPTH { PARAM_VALUE.C_INPUT_BRAM_22_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_22_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_DEPTH { PARAM_VALUE.C_INPUT_BRAM_22_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_22_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_22_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_22_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_22_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_22_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_PORTS { PARAM_VALUE.C_INPUT_BRAM_22_PORTS } {
	# Procedure called to update C_INPUT_BRAM_22_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_PORTS { PARAM_VALUE.C_INPUT_BRAM_22_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_22_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_22_WIDTH { PARAM_VALUE.C_INPUT_BRAM_22_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_22_WIDTH { PARAM_VALUE.C_INPUT_BRAM_22_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_23_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_23_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_DEPTH { PARAM_VALUE.C_INPUT_BRAM_23_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_23_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_DEPTH { PARAM_VALUE.C_INPUT_BRAM_23_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_23_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_23_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_23_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_23_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_23_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_PORTS { PARAM_VALUE.C_INPUT_BRAM_23_PORTS } {
	# Procedure called to update C_INPUT_BRAM_23_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_PORTS { PARAM_VALUE.C_INPUT_BRAM_23_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_23_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_23_WIDTH { PARAM_VALUE.C_INPUT_BRAM_23_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_23_WIDTH { PARAM_VALUE.C_INPUT_BRAM_23_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_24_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_24_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_DEPTH { PARAM_VALUE.C_INPUT_BRAM_24_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_24_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_DEPTH { PARAM_VALUE.C_INPUT_BRAM_24_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_24_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_24_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_24_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_24_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_24_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_PORTS { PARAM_VALUE.C_INPUT_BRAM_24_PORTS } {
	# Procedure called to update C_INPUT_BRAM_24_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_PORTS { PARAM_VALUE.C_INPUT_BRAM_24_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_24_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_24_WIDTH { PARAM_VALUE.C_INPUT_BRAM_24_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_24_WIDTH { PARAM_VALUE.C_INPUT_BRAM_24_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_25_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_25_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_DEPTH { PARAM_VALUE.C_INPUT_BRAM_25_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_25_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_DEPTH { PARAM_VALUE.C_INPUT_BRAM_25_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_25_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_25_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_25_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_25_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_25_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_PORTS { PARAM_VALUE.C_INPUT_BRAM_25_PORTS } {
	# Procedure called to update C_INPUT_BRAM_25_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_PORTS { PARAM_VALUE.C_INPUT_BRAM_25_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_25_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_25_WIDTH { PARAM_VALUE.C_INPUT_BRAM_25_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_25_WIDTH { PARAM_VALUE.C_INPUT_BRAM_25_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_26_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_26_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_DEPTH { PARAM_VALUE.C_INPUT_BRAM_26_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_26_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_DEPTH { PARAM_VALUE.C_INPUT_BRAM_26_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_26_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_26_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_26_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_26_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_26_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_PORTS { PARAM_VALUE.C_INPUT_BRAM_26_PORTS } {
	# Procedure called to update C_INPUT_BRAM_26_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_PORTS { PARAM_VALUE.C_INPUT_BRAM_26_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_26_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_26_WIDTH { PARAM_VALUE.C_INPUT_BRAM_26_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_26_WIDTH { PARAM_VALUE.C_INPUT_BRAM_26_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_27_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_27_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_DEPTH { PARAM_VALUE.C_INPUT_BRAM_27_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_27_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_DEPTH { PARAM_VALUE.C_INPUT_BRAM_27_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_27_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_27_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_27_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_27_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_27_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_PORTS { PARAM_VALUE.C_INPUT_BRAM_27_PORTS } {
	# Procedure called to update C_INPUT_BRAM_27_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_PORTS { PARAM_VALUE.C_INPUT_BRAM_27_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_27_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_27_WIDTH { PARAM_VALUE.C_INPUT_BRAM_27_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_27_WIDTH { PARAM_VALUE.C_INPUT_BRAM_27_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_28_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_28_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_DEPTH { PARAM_VALUE.C_INPUT_BRAM_28_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_28_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_DEPTH { PARAM_VALUE.C_INPUT_BRAM_28_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_28_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_28_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_28_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_28_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_28_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_PORTS { PARAM_VALUE.C_INPUT_BRAM_28_PORTS } {
	# Procedure called to update C_INPUT_BRAM_28_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_PORTS { PARAM_VALUE.C_INPUT_BRAM_28_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_28_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_28_WIDTH { PARAM_VALUE.C_INPUT_BRAM_28_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_28_WIDTH { PARAM_VALUE.C_INPUT_BRAM_28_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_29_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_29_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_DEPTH { PARAM_VALUE.C_INPUT_BRAM_29_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_29_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_DEPTH { PARAM_VALUE.C_INPUT_BRAM_29_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_29_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_29_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_29_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_29_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_29_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_PORTS { PARAM_VALUE.C_INPUT_BRAM_29_PORTS } {
	# Procedure called to update C_INPUT_BRAM_29_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_PORTS { PARAM_VALUE.C_INPUT_BRAM_29_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_29_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_29_WIDTH { PARAM_VALUE.C_INPUT_BRAM_29_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_29_WIDTH { PARAM_VALUE.C_INPUT_BRAM_29_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_2_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_2_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_DEPTH { PARAM_VALUE.C_INPUT_BRAM_2_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_2_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_DEPTH { PARAM_VALUE.C_INPUT_BRAM_2_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_2_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_2_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_2_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_2_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_2_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_PORTS { PARAM_VALUE.C_INPUT_BRAM_2_PORTS } {
	# Procedure called to update C_INPUT_BRAM_2_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_PORTS { PARAM_VALUE.C_INPUT_BRAM_2_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_2_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_2_WIDTH { PARAM_VALUE.C_INPUT_BRAM_2_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_2_WIDTH { PARAM_VALUE.C_INPUT_BRAM_2_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_30_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_30_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_DEPTH { PARAM_VALUE.C_INPUT_BRAM_30_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_30_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_DEPTH { PARAM_VALUE.C_INPUT_BRAM_30_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_30_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_30_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_30_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_30_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_30_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_PORTS { PARAM_VALUE.C_INPUT_BRAM_30_PORTS } {
	# Procedure called to update C_INPUT_BRAM_30_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_PORTS { PARAM_VALUE.C_INPUT_BRAM_30_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_30_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_30_WIDTH { PARAM_VALUE.C_INPUT_BRAM_30_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_30_WIDTH { PARAM_VALUE.C_INPUT_BRAM_30_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_31_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_31_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_DEPTH { PARAM_VALUE.C_INPUT_BRAM_31_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_31_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_DEPTH { PARAM_VALUE.C_INPUT_BRAM_31_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_31_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_31_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_31_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_31_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_31_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_PORTS { PARAM_VALUE.C_INPUT_BRAM_31_PORTS } {
	# Procedure called to update C_INPUT_BRAM_31_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_PORTS { PARAM_VALUE.C_INPUT_BRAM_31_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_31_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_31_WIDTH { PARAM_VALUE.C_INPUT_BRAM_31_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_31_WIDTH { PARAM_VALUE.C_INPUT_BRAM_31_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_32_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_32_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_DEPTH { PARAM_VALUE.C_INPUT_BRAM_32_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_32_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_DEPTH { PARAM_VALUE.C_INPUT_BRAM_32_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_32_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_32_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_32_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_32_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_32_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_PORTS { PARAM_VALUE.C_INPUT_BRAM_32_PORTS } {
	# Procedure called to update C_INPUT_BRAM_32_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_PORTS { PARAM_VALUE.C_INPUT_BRAM_32_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_32_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_32_WIDTH { PARAM_VALUE.C_INPUT_BRAM_32_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_32_WIDTH { PARAM_VALUE.C_INPUT_BRAM_32_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_33_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_33_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_DEPTH { PARAM_VALUE.C_INPUT_BRAM_33_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_33_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_DEPTH { PARAM_VALUE.C_INPUT_BRAM_33_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_33_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_33_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_33_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_33_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_33_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_PORTS { PARAM_VALUE.C_INPUT_BRAM_33_PORTS } {
	# Procedure called to update C_INPUT_BRAM_33_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_PORTS { PARAM_VALUE.C_INPUT_BRAM_33_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_33_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_33_WIDTH { PARAM_VALUE.C_INPUT_BRAM_33_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_33_WIDTH { PARAM_VALUE.C_INPUT_BRAM_33_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_34_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_34_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_DEPTH { PARAM_VALUE.C_INPUT_BRAM_34_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_34_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_DEPTH { PARAM_VALUE.C_INPUT_BRAM_34_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_34_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_34_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_34_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_34_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_34_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_PORTS { PARAM_VALUE.C_INPUT_BRAM_34_PORTS } {
	# Procedure called to update C_INPUT_BRAM_34_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_PORTS { PARAM_VALUE.C_INPUT_BRAM_34_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_34_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_34_WIDTH { PARAM_VALUE.C_INPUT_BRAM_34_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_34_WIDTH { PARAM_VALUE.C_INPUT_BRAM_34_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_35_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_35_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_DEPTH { PARAM_VALUE.C_INPUT_BRAM_35_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_35_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_DEPTH { PARAM_VALUE.C_INPUT_BRAM_35_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_35_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_35_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_35_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_35_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_35_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_PORTS { PARAM_VALUE.C_INPUT_BRAM_35_PORTS } {
	# Procedure called to update C_INPUT_BRAM_35_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_PORTS { PARAM_VALUE.C_INPUT_BRAM_35_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_35_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_35_WIDTH { PARAM_VALUE.C_INPUT_BRAM_35_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_35_WIDTH { PARAM_VALUE.C_INPUT_BRAM_35_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_36_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_36_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_DEPTH { PARAM_VALUE.C_INPUT_BRAM_36_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_36_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_DEPTH { PARAM_VALUE.C_INPUT_BRAM_36_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_36_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_36_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_36_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_36_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_36_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_PORTS { PARAM_VALUE.C_INPUT_BRAM_36_PORTS } {
	# Procedure called to update C_INPUT_BRAM_36_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_PORTS { PARAM_VALUE.C_INPUT_BRAM_36_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_36_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_36_WIDTH { PARAM_VALUE.C_INPUT_BRAM_36_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_36_WIDTH { PARAM_VALUE.C_INPUT_BRAM_36_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_37_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_37_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_DEPTH { PARAM_VALUE.C_INPUT_BRAM_37_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_37_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_DEPTH { PARAM_VALUE.C_INPUT_BRAM_37_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_37_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_37_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_37_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_37_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_37_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_PORTS { PARAM_VALUE.C_INPUT_BRAM_37_PORTS } {
	# Procedure called to update C_INPUT_BRAM_37_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_PORTS { PARAM_VALUE.C_INPUT_BRAM_37_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_37_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_37_WIDTH { PARAM_VALUE.C_INPUT_BRAM_37_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_37_WIDTH { PARAM_VALUE.C_INPUT_BRAM_37_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_38_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_38_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_DEPTH { PARAM_VALUE.C_INPUT_BRAM_38_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_38_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_DEPTH { PARAM_VALUE.C_INPUT_BRAM_38_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_38_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_38_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_38_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_38_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_38_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_PORTS { PARAM_VALUE.C_INPUT_BRAM_38_PORTS } {
	# Procedure called to update C_INPUT_BRAM_38_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_PORTS { PARAM_VALUE.C_INPUT_BRAM_38_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_38_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_38_WIDTH { PARAM_VALUE.C_INPUT_BRAM_38_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_38_WIDTH { PARAM_VALUE.C_INPUT_BRAM_38_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_39_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_39_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_DEPTH { PARAM_VALUE.C_INPUT_BRAM_39_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_39_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_DEPTH { PARAM_VALUE.C_INPUT_BRAM_39_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_39_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_39_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_39_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_39_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_39_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_PORTS { PARAM_VALUE.C_INPUT_BRAM_39_PORTS } {
	# Procedure called to update C_INPUT_BRAM_39_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_PORTS { PARAM_VALUE.C_INPUT_BRAM_39_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_39_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_39_WIDTH { PARAM_VALUE.C_INPUT_BRAM_39_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_39_WIDTH { PARAM_VALUE.C_INPUT_BRAM_39_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_3_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_3_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_DEPTH { PARAM_VALUE.C_INPUT_BRAM_3_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_3_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_DEPTH { PARAM_VALUE.C_INPUT_BRAM_3_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_3_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_3_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_3_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_3_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_3_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_PORTS { PARAM_VALUE.C_INPUT_BRAM_3_PORTS } {
	# Procedure called to update C_INPUT_BRAM_3_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_PORTS { PARAM_VALUE.C_INPUT_BRAM_3_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_3_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_3_WIDTH { PARAM_VALUE.C_INPUT_BRAM_3_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_3_WIDTH { PARAM_VALUE.C_INPUT_BRAM_3_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_40_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_40_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_DEPTH { PARAM_VALUE.C_INPUT_BRAM_40_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_40_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_DEPTH { PARAM_VALUE.C_INPUT_BRAM_40_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_40_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_40_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_40_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_40_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_40_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_PORTS { PARAM_VALUE.C_INPUT_BRAM_40_PORTS } {
	# Procedure called to update C_INPUT_BRAM_40_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_PORTS { PARAM_VALUE.C_INPUT_BRAM_40_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_40_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_40_WIDTH { PARAM_VALUE.C_INPUT_BRAM_40_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_40_WIDTH { PARAM_VALUE.C_INPUT_BRAM_40_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_41_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_41_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_DEPTH { PARAM_VALUE.C_INPUT_BRAM_41_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_41_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_DEPTH { PARAM_VALUE.C_INPUT_BRAM_41_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_41_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_41_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_41_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_41_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_41_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_PORTS { PARAM_VALUE.C_INPUT_BRAM_41_PORTS } {
	# Procedure called to update C_INPUT_BRAM_41_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_PORTS { PARAM_VALUE.C_INPUT_BRAM_41_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_41_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_41_WIDTH { PARAM_VALUE.C_INPUT_BRAM_41_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_41_WIDTH { PARAM_VALUE.C_INPUT_BRAM_41_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_42_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_42_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_DEPTH { PARAM_VALUE.C_INPUT_BRAM_42_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_42_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_DEPTH { PARAM_VALUE.C_INPUT_BRAM_42_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_42_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_42_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_42_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_42_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_42_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_PORTS { PARAM_VALUE.C_INPUT_BRAM_42_PORTS } {
	# Procedure called to update C_INPUT_BRAM_42_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_PORTS { PARAM_VALUE.C_INPUT_BRAM_42_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_42_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_42_WIDTH { PARAM_VALUE.C_INPUT_BRAM_42_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_42_WIDTH { PARAM_VALUE.C_INPUT_BRAM_42_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_43_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_43_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_DEPTH { PARAM_VALUE.C_INPUT_BRAM_43_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_43_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_DEPTH { PARAM_VALUE.C_INPUT_BRAM_43_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_43_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_43_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_43_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_43_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_43_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_PORTS { PARAM_VALUE.C_INPUT_BRAM_43_PORTS } {
	# Procedure called to update C_INPUT_BRAM_43_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_PORTS { PARAM_VALUE.C_INPUT_BRAM_43_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_43_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_43_WIDTH { PARAM_VALUE.C_INPUT_BRAM_43_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_43_WIDTH { PARAM_VALUE.C_INPUT_BRAM_43_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_44_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_44_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_DEPTH { PARAM_VALUE.C_INPUT_BRAM_44_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_44_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_DEPTH { PARAM_VALUE.C_INPUT_BRAM_44_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_44_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_44_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_44_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_44_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_44_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_PORTS { PARAM_VALUE.C_INPUT_BRAM_44_PORTS } {
	# Procedure called to update C_INPUT_BRAM_44_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_PORTS { PARAM_VALUE.C_INPUT_BRAM_44_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_44_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_44_WIDTH { PARAM_VALUE.C_INPUT_BRAM_44_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_44_WIDTH { PARAM_VALUE.C_INPUT_BRAM_44_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_45_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_45_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_DEPTH { PARAM_VALUE.C_INPUT_BRAM_45_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_45_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_DEPTH { PARAM_VALUE.C_INPUT_BRAM_45_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_45_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_45_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_45_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_45_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_45_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_PORTS { PARAM_VALUE.C_INPUT_BRAM_45_PORTS } {
	# Procedure called to update C_INPUT_BRAM_45_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_PORTS { PARAM_VALUE.C_INPUT_BRAM_45_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_45_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_45_WIDTH { PARAM_VALUE.C_INPUT_BRAM_45_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_45_WIDTH { PARAM_VALUE.C_INPUT_BRAM_45_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_46_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_46_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_DEPTH { PARAM_VALUE.C_INPUT_BRAM_46_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_46_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_DEPTH { PARAM_VALUE.C_INPUT_BRAM_46_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_46_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_46_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_46_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_46_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_46_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_PORTS { PARAM_VALUE.C_INPUT_BRAM_46_PORTS } {
	# Procedure called to update C_INPUT_BRAM_46_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_PORTS { PARAM_VALUE.C_INPUT_BRAM_46_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_46_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_46_WIDTH { PARAM_VALUE.C_INPUT_BRAM_46_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_46_WIDTH { PARAM_VALUE.C_INPUT_BRAM_46_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_47_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_47_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_DEPTH { PARAM_VALUE.C_INPUT_BRAM_47_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_47_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_DEPTH { PARAM_VALUE.C_INPUT_BRAM_47_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_47_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_47_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_47_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_47_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_47_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_PORTS { PARAM_VALUE.C_INPUT_BRAM_47_PORTS } {
	# Procedure called to update C_INPUT_BRAM_47_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_PORTS { PARAM_VALUE.C_INPUT_BRAM_47_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_47_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_47_WIDTH { PARAM_VALUE.C_INPUT_BRAM_47_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_47_WIDTH { PARAM_VALUE.C_INPUT_BRAM_47_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_48_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_48_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_DEPTH { PARAM_VALUE.C_INPUT_BRAM_48_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_48_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_DEPTH { PARAM_VALUE.C_INPUT_BRAM_48_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_48_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_48_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_48_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_48_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_48_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_PORTS { PARAM_VALUE.C_INPUT_BRAM_48_PORTS } {
	# Procedure called to update C_INPUT_BRAM_48_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_PORTS { PARAM_VALUE.C_INPUT_BRAM_48_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_48_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_48_WIDTH { PARAM_VALUE.C_INPUT_BRAM_48_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_48_WIDTH { PARAM_VALUE.C_INPUT_BRAM_48_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_49_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_49_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_DEPTH { PARAM_VALUE.C_INPUT_BRAM_49_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_49_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_DEPTH { PARAM_VALUE.C_INPUT_BRAM_49_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_49_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_49_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_49_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_49_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_49_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_PORTS { PARAM_VALUE.C_INPUT_BRAM_49_PORTS } {
	# Procedure called to update C_INPUT_BRAM_49_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_PORTS { PARAM_VALUE.C_INPUT_BRAM_49_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_49_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_49_WIDTH { PARAM_VALUE.C_INPUT_BRAM_49_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_49_WIDTH { PARAM_VALUE.C_INPUT_BRAM_49_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_4_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_4_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_DEPTH { PARAM_VALUE.C_INPUT_BRAM_4_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_4_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_DEPTH { PARAM_VALUE.C_INPUT_BRAM_4_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_4_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_4_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_4_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_4_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_4_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_PORTS { PARAM_VALUE.C_INPUT_BRAM_4_PORTS } {
	# Procedure called to update C_INPUT_BRAM_4_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_PORTS { PARAM_VALUE.C_INPUT_BRAM_4_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_4_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_4_WIDTH { PARAM_VALUE.C_INPUT_BRAM_4_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_4_WIDTH { PARAM_VALUE.C_INPUT_BRAM_4_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_50_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_50_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_DEPTH { PARAM_VALUE.C_INPUT_BRAM_50_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_50_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_DEPTH { PARAM_VALUE.C_INPUT_BRAM_50_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_50_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_50_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_50_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_50_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_50_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_PORTS { PARAM_VALUE.C_INPUT_BRAM_50_PORTS } {
	# Procedure called to update C_INPUT_BRAM_50_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_PORTS { PARAM_VALUE.C_INPUT_BRAM_50_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_50_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_50_WIDTH { PARAM_VALUE.C_INPUT_BRAM_50_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_50_WIDTH { PARAM_VALUE.C_INPUT_BRAM_50_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_51_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_51_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_DEPTH { PARAM_VALUE.C_INPUT_BRAM_51_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_51_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_DEPTH { PARAM_VALUE.C_INPUT_BRAM_51_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_51_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_51_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_51_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_51_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_51_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_PORTS { PARAM_VALUE.C_INPUT_BRAM_51_PORTS } {
	# Procedure called to update C_INPUT_BRAM_51_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_PORTS { PARAM_VALUE.C_INPUT_BRAM_51_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_51_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_51_WIDTH { PARAM_VALUE.C_INPUT_BRAM_51_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_51_WIDTH { PARAM_VALUE.C_INPUT_BRAM_51_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_52_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_52_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_DEPTH { PARAM_VALUE.C_INPUT_BRAM_52_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_52_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_DEPTH { PARAM_VALUE.C_INPUT_BRAM_52_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_52_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_52_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_52_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_52_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_52_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_PORTS { PARAM_VALUE.C_INPUT_BRAM_52_PORTS } {
	# Procedure called to update C_INPUT_BRAM_52_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_PORTS { PARAM_VALUE.C_INPUT_BRAM_52_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_52_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_52_WIDTH { PARAM_VALUE.C_INPUT_BRAM_52_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_52_WIDTH { PARAM_VALUE.C_INPUT_BRAM_52_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_53_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_53_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_DEPTH { PARAM_VALUE.C_INPUT_BRAM_53_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_53_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_DEPTH { PARAM_VALUE.C_INPUT_BRAM_53_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_53_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_53_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_53_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_53_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_53_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_PORTS { PARAM_VALUE.C_INPUT_BRAM_53_PORTS } {
	# Procedure called to update C_INPUT_BRAM_53_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_PORTS { PARAM_VALUE.C_INPUT_BRAM_53_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_53_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_53_WIDTH { PARAM_VALUE.C_INPUT_BRAM_53_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_53_WIDTH { PARAM_VALUE.C_INPUT_BRAM_53_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_54_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_54_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_DEPTH { PARAM_VALUE.C_INPUT_BRAM_54_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_54_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_DEPTH { PARAM_VALUE.C_INPUT_BRAM_54_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_54_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_54_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_54_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_54_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_54_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_PORTS { PARAM_VALUE.C_INPUT_BRAM_54_PORTS } {
	# Procedure called to update C_INPUT_BRAM_54_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_PORTS { PARAM_VALUE.C_INPUT_BRAM_54_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_54_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_54_WIDTH { PARAM_VALUE.C_INPUT_BRAM_54_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_54_WIDTH { PARAM_VALUE.C_INPUT_BRAM_54_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_55_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_55_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_DEPTH { PARAM_VALUE.C_INPUT_BRAM_55_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_55_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_DEPTH { PARAM_VALUE.C_INPUT_BRAM_55_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_55_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_55_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_55_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_55_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_55_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_PORTS { PARAM_VALUE.C_INPUT_BRAM_55_PORTS } {
	# Procedure called to update C_INPUT_BRAM_55_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_PORTS { PARAM_VALUE.C_INPUT_BRAM_55_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_55_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_55_WIDTH { PARAM_VALUE.C_INPUT_BRAM_55_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_55_WIDTH { PARAM_VALUE.C_INPUT_BRAM_55_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_56_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_56_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_DEPTH { PARAM_VALUE.C_INPUT_BRAM_56_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_56_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_DEPTH { PARAM_VALUE.C_INPUT_BRAM_56_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_56_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_56_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_56_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_56_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_56_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_PORTS { PARAM_VALUE.C_INPUT_BRAM_56_PORTS } {
	# Procedure called to update C_INPUT_BRAM_56_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_PORTS { PARAM_VALUE.C_INPUT_BRAM_56_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_56_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_56_WIDTH { PARAM_VALUE.C_INPUT_BRAM_56_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_56_WIDTH { PARAM_VALUE.C_INPUT_BRAM_56_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_57_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_57_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_DEPTH { PARAM_VALUE.C_INPUT_BRAM_57_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_57_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_DEPTH { PARAM_VALUE.C_INPUT_BRAM_57_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_57_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_57_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_57_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_57_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_57_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_PORTS { PARAM_VALUE.C_INPUT_BRAM_57_PORTS } {
	# Procedure called to update C_INPUT_BRAM_57_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_PORTS { PARAM_VALUE.C_INPUT_BRAM_57_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_57_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_57_WIDTH { PARAM_VALUE.C_INPUT_BRAM_57_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_57_WIDTH { PARAM_VALUE.C_INPUT_BRAM_57_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_58_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_58_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_DEPTH { PARAM_VALUE.C_INPUT_BRAM_58_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_58_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_DEPTH { PARAM_VALUE.C_INPUT_BRAM_58_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_58_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_58_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_58_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_58_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_58_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_PORTS { PARAM_VALUE.C_INPUT_BRAM_58_PORTS } {
	# Procedure called to update C_INPUT_BRAM_58_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_PORTS { PARAM_VALUE.C_INPUT_BRAM_58_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_58_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_58_WIDTH { PARAM_VALUE.C_INPUT_BRAM_58_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_58_WIDTH { PARAM_VALUE.C_INPUT_BRAM_58_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_59_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_59_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_DEPTH { PARAM_VALUE.C_INPUT_BRAM_59_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_59_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_DEPTH { PARAM_VALUE.C_INPUT_BRAM_59_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_59_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_59_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_59_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_59_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_59_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_PORTS { PARAM_VALUE.C_INPUT_BRAM_59_PORTS } {
	# Procedure called to update C_INPUT_BRAM_59_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_PORTS { PARAM_VALUE.C_INPUT_BRAM_59_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_59_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_59_WIDTH { PARAM_VALUE.C_INPUT_BRAM_59_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_59_WIDTH { PARAM_VALUE.C_INPUT_BRAM_59_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_5_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_5_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_DEPTH { PARAM_VALUE.C_INPUT_BRAM_5_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_5_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_DEPTH { PARAM_VALUE.C_INPUT_BRAM_5_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_5_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_5_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_5_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_5_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_5_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_PORTS { PARAM_VALUE.C_INPUT_BRAM_5_PORTS } {
	# Procedure called to update C_INPUT_BRAM_5_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_PORTS { PARAM_VALUE.C_INPUT_BRAM_5_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_5_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_5_WIDTH { PARAM_VALUE.C_INPUT_BRAM_5_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_5_WIDTH { PARAM_VALUE.C_INPUT_BRAM_5_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_60_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_60_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_DEPTH { PARAM_VALUE.C_INPUT_BRAM_60_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_60_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_DEPTH { PARAM_VALUE.C_INPUT_BRAM_60_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_60_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_60_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_60_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_60_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_60_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_PORTS { PARAM_VALUE.C_INPUT_BRAM_60_PORTS } {
	# Procedure called to update C_INPUT_BRAM_60_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_PORTS { PARAM_VALUE.C_INPUT_BRAM_60_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_60_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_60_WIDTH { PARAM_VALUE.C_INPUT_BRAM_60_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_60_WIDTH { PARAM_VALUE.C_INPUT_BRAM_60_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_61_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_61_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_DEPTH { PARAM_VALUE.C_INPUT_BRAM_61_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_61_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_DEPTH { PARAM_VALUE.C_INPUT_BRAM_61_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_61_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_61_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_61_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_61_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_61_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_PORTS { PARAM_VALUE.C_INPUT_BRAM_61_PORTS } {
	# Procedure called to update C_INPUT_BRAM_61_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_PORTS { PARAM_VALUE.C_INPUT_BRAM_61_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_61_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_61_WIDTH { PARAM_VALUE.C_INPUT_BRAM_61_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_61_WIDTH { PARAM_VALUE.C_INPUT_BRAM_61_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_62_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_62_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_DEPTH { PARAM_VALUE.C_INPUT_BRAM_62_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_62_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_DEPTH { PARAM_VALUE.C_INPUT_BRAM_62_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_62_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_62_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_62_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_62_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_62_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_PORTS { PARAM_VALUE.C_INPUT_BRAM_62_PORTS } {
	# Procedure called to update C_INPUT_BRAM_62_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_PORTS { PARAM_VALUE.C_INPUT_BRAM_62_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_62_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_62_WIDTH { PARAM_VALUE.C_INPUT_BRAM_62_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_62_WIDTH { PARAM_VALUE.C_INPUT_BRAM_62_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_63_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_63_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_DEPTH { PARAM_VALUE.C_INPUT_BRAM_63_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_63_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_DEPTH { PARAM_VALUE.C_INPUT_BRAM_63_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_63_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_63_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_63_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_63_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_63_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_PORTS { PARAM_VALUE.C_INPUT_BRAM_63_PORTS } {
	# Procedure called to update C_INPUT_BRAM_63_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_PORTS { PARAM_VALUE.C_INPUT_BRAM_63_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_63_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_63_WIDTH { PARAM_VALUE.C_INPUT_BRAM_63_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_63_WIDTH { PARAM_VALUE.C_INPUT_BRAM_63_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_64_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_64_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_DEPTH { PARAM_VALUE.C_INPUT_BRAM_64_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_64_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_DEPTH { PARAM_VALUE.C_INPUT_BRAM_64_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_64_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_64_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_64_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_64_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_64_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_PORTS { PARAM_VALUE.C_INPUT_BRAM_64_PORTS } {
	# Procedure called to update C_INPUT_BRAM_64_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_PORTS { PARAM_VALUE.C_INPUT_BRAM_64_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_64_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_64_WIDTH { PARAM_VALUE.C_INPUT_BRAM_64_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_64_WIDTH { PARAM_VALUE.C_INPUT_BRAM_64_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_65_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_65_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_DEPTH { PARAM_VALUE.C_INPUT_BRAM_65_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_65_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_DEPTH { PARAM_VALUE.C_INPUT_BRAM_65_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_65_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_65_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_65_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_65_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_65_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_PORTS { PARAM_VALUE.C_INPUT_BRAM_65_PORTS } {
	# Procedure called to update C_INPUT_BRAM_65_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_PORTS { PARAM_VALUE.C_INPUT_BRAM_65_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_65_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_65_WIDTH { PARAM_VALUE.C_INPUT_BRAM_65_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_65_WIDTH { PARAM_VALUE.C_INPUT_BRAM_65_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_66_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_66_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_DEPTH { PARAM_VALUE.C_INPUT_BRAM_66_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_66_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_DEPTH { PARAM_VALUE.C_INPUT_BRAM_66_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_66_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_66_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_66_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_66_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_66_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_PORTS { PARAM_VALUE.C_INPUT_BRAM_66_PORTS } {
	# Procedure called to update C_INPUT_BRAM_66_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_PORTS { PARAM_VALUE.C_INPUT_BRAM_66_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_66_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_66_WIDTH { PARAM_VALUE.C_INPUT_BRAM_66_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_66_WIDTH { PARAM_VALUE.C_INPUT_BRAM_66_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_67_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_67_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_DEPTH { PARAM_VALUE.C_INPUT_BRAM_67_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_67_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_DEPTH { PARAM_VALUE.C_INPUT_BRAM_67_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_67_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_67_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_67_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_67_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_67_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_PORTS { PARAM_VALUE.C_INPUT_BRAM_67_PORTS } {
	# Procedure called to update C_INPUT_BRAM_67_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_PORTS { PARAM_VALUE.C_INPUT_BRAM_67_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_67_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_67_WIDTH { PARAM_VALUE.C_INPUT_BRAM_67_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_67_WIDTH { PARAM_VALUE.C_INPUT_BRAM_67_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_68_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_68_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_DEPTH { PARAM_VALUE.C_INPUT_BRAM_68_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_68_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_DEPTH { PARAM_VALUE.C_INPUT_BRAM_68_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_68_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_68_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_68_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_68_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_68_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_PORTS { PARAM_VALUE.C_INPUT_BRAM_68_PORTS } {
	# Procedure called to update C_INPUT_BRAM_68_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_PORTS { PARAM_VALUE.C_INPUT_BRAM_68_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_68_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_68_WIDTH { PARAM_VALUE.C_INPUT_BRAM_68_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_68_WIDTH { PARAM_VALUE.C_INPUT_BRAM_68_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_69_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_69_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_DEPTH { PARAM_VALUE.C_INPUT_BRAM_69_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_69_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_DEPTH { PARAM_VALUE.C_INPUT_BRAM_69_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_69_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_69_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_69_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_69_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_69_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_PORTS { PARAM_VALUE.C_INPUT_BRAM_69_PORTS } {
	# Procedure called to update C_INPUT_BRAM_69_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_PORTS { PARAM_VALUE.C_INPUT_BRAM_69_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_69_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_69_WIDTH { PARAM_VALUE.C_INPUT_BRAM_69_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_69_WIDTH { PARAM_VALUE.C_INPUT_BRAM_69_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_6_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_6_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_DEPTH { PARAM_VALUE.C_INPUT_BRAM_6_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_6_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_DEPTH { PARAM_VALUE.C_INPUT_BRAM_6_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_6_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_6_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_6_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_6_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_6_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_PORTS { PARAM_VALUE.C_INPUT_BRAM_6_PORTS } {
	# Procedure called to update C_INPUT_BRAM_6_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_PORTS { PARAM_VALUE.C_INPUT_BRAM_6_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_6_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_6_WIDTH { PARAM_VALUE.C_INPUT_BRAM_6_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_6_WIDTH { PARAM_VALUE.C_INPUT_BRAM_6_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_70_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_70_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_DEPTH { PARAM_VALUE.C_INPUT_BRAM_70_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_70_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_DEPTH { PARAM_VALUE.C_INPUT_BRAM_70_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_70_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_70_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_70_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_70_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_70_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_PORTS { PARAM_VALUE.C_INPUT_BRAM_70_PORTS } {
	# Procedure called to update C_INPUT_BRAM_70_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_PORTS { PARAM_VALUE.C_INPUT_BRAM_70_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_70_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_70_WIDTH { PARAM_VALUE.C_INPUT_BRAM_70_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_70_WIDTH { PARAM_VALUE.C_INPUT_BRAM_70_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_71_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_71_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_DEPTH { PARAM_VALUE.C_INPUT_BRAM_71_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_71_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_DEPTH { PARAM_VALUE.C_INPUT_BRAM_71_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_71_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_71_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_71_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_71_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_71_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_PORTS { PARAM_VALUE.C_INPUT_BRAM_71_PORTS } {
	# Procedure called to update C_INPUT_BRAM_71_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_PORTS { PARAM_VALUE.C_INPUT_BRAM_71_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_71_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_71_WIDTH { PARAM_VALUE.C_INPUT_BRAM_71_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_71_WIDTH { PARAM_VALUE.C_INPUT_BRAM_71_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_72_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_72_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_DEPTH { PARAM_VALUE.C_INPUT_BRAM_72_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_72_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_DEPTH { PARAM_VALUE.C_INPUT_BRAM_72_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_72_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_72_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_72_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_72_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_72_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_PORTS { PARAM_VALUE.C_INPUT_BRAM_72_PORTS } {
	# Procedure called to update C_INPUT_BRAM_72_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_PORTS { PARAM_VALUE.C_INPUT_BRAM_72_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_72_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_72_WIDTH { PARAM_VALUE.C_INPUT_BRAM_72_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_72_WIDTH { PARAM_VALUE.C_INPUT_BRAM_72_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_73_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_73_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_DEPTH { PARAM_VALUE.C_INPUT_BRAM_73_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_73_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_DEPTH { PARAM_VALUE.C_INPUT_BRAM_73_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_73_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_73_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_73_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_73_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_73_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_PORTS { PARAM_VALUE.C_INPUT_BRAM_73_PORTS } {
	# Procedure called to update C_INPUT_BRAM_73_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_PORTS { PARAM_VALUE.C_INPUT_BRAM_73_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_73_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_73_WIDTH { PARAM_VALUE.C_INPUT_BRAM_73_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_73_WIDTH { PARAM_VALUE.C_INPUT_BRAM_73_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_74_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_74_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_DEPTH { PARAM_VALUE.C_INPUT_BRAM_74_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_74_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_DEPTH { PARAM_VALUE.C_INPUT_BRAM_74_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_74_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_74_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_74_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_74_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_74_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_PORTS { PARAM_VALUE.C_INPUT_BRAM_74_PORTS } {
	# Procedure called to update C_INPUT_BRAM_74_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_PORTS { PARAM_VALUE.C_INPUT_BRAM_74_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_74_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_74_WIDTH { PARAM_VALUE.C_INPUT_BRAM_74_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_74_WIDTH { PARAM_VALUE.C_INPUT_BRAM_74_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_75_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_75_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_DEPTH { PARAM_VALUE.C_INPUT_BRAM_75_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_75_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_DEPTH { PARAM_VALUE.C_INPUT_BRAM_75_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_75_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_75_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_75_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_75_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_75_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_PORTS { PARAM_VALUE.C_INPUT_BRAM_75_PORTS } {
	# Procedure called to update C_INPUT_BRAM_75_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_PORTS { PARAM_VALUE.C_INPUT_BRAM_75_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_75_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_75_WIDTH { PARAM_VALUE.C_INPUT_BRAM_75_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_75_WIDTH { PARAM_VALUE.C_INPUT_BRAM_75_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_76_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_76_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_DEPTH { PARAM_VALUE.C_INPUT_BRAM_76_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_76_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_DEPTH { PARAM_VALUE.C_INPUT_BRAM_76_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_76_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_76_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_76_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_76_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_76_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_PORTS { PARAM_VALUE.C_INPUT_BRAM_76_PORTS } {
	# Procedure called to update C_INPUT_BRAM_76_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_PORTS { PARAM_VALUE.C_INPUT_BRAM_76_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_76_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_76_WIDTH { PARAM_VALUE.C_INPUT_BRAM_76_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_76_WIDTH { PARAM_VALUE.C_INPUT_BRAM_76_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_77_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_77_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_DEPTH { PARAM_VALUE.C_INPUT_BRAM_77_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_77_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_DEPTH { PARAM_VALUE.C_INPUT_BRAM_77_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_77_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_77_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_77_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_77_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_77_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_PORTS { PARAM_VALUE.C_INPUT_BRAM_77_PORTS } {
	# Procedure called to update C_INPUT_BRAM_77_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_PORTS { PARAM_VALUE.C_INPUT_BRAM_77_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_77_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_77_WIDTH { PARAM_VALUE.C_INPUT_BRAM_77_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_77_WIDTH { PARAM_VALUE.C_INPUT_BRAM_77_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_78_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_78_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_DEPTH { PARAM_VALUE.C_INPUT_BRAM_78_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_78_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_DEPTH { PARAM_VALUE.C_INPUT_BRAM_78_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_78_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_78_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_78_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_78_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_78_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_PORTS { PARAM_VALUE.C_INPUT_BRAM_78_PORTS } {
	# Procedure called to update C_INPUT_BRAM_78_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_PORTS { PARAM_VALUE.C_INPUT_BRAM_78_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_78_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_78_WIDTH { PARAM_VALUE.C_INPUT_BRAM_78_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_78_WIDTH { PARAM_VALUE.C_INPUT_BRAM_78_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_79_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_79_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_DEPTH { PARAM_VALUE.C_INPUT_BRAM_79_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_79_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_DEPTH { PARAM_VALUE.C_INPUT_BRAM_79_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_79_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_79_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_79_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_79_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_79_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_PORTS { PARAM_VALUE.C_INPUT_BRAM_79_PORTS } {
	# Procedure called to update C_INPUT_BRAM_79_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_PORTS { PARAM_VALUE.C_INPUT_BRAM_79_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_79_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_79_WIDTH { PARAM_VALUE.C_INPUT_BRAM_79_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_79_WIDTH { PARAM_VALUE.C_INPUT_BRAM_79_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_7_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_7_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_DEPTH { PARAM_VALUE.C_INPUT_BRAM_7_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_7_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_DEPTH { PARAM_VALUE.C_INPUT_BRAM_7_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_7_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_7_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_7_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_7_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_7_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_PORTS { PARAM_VALUE.C_INPUT_BRAM_7_PORTS } {
	# Procedure called to update C_INPUT_BRAM_7_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_PORTS { PARAM_VALUE.C_INPUT_BRAM_7_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_7_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_7_WIDTH { PARAM_VALUE.C_INPUT_BRAM_7_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_7_WIDTH { PARAM_VALUE.C_INPUT_BRAM_7_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_80_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_80_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_DEPTH { PARAM_VALUE.C_INPUT_BRAM_80_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_80_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_DEPTH { PARAM_VALUE.C_INPUT_BRAM_80_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_80_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_80_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_80_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_80_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_80_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_PORTS { PARAM_VALUE.C_INPUT_BRAM_80_PORTS } {
	# Procedure called to update C_INPUT_BRAM_80_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_PORTS { PARAM_VALUE.C_INPUT_BRAM_80_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_80_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_80_WIDTH { PARAM_VALUE.C_INPUT_BRAM_80_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_80_WIDTH { PARAM_VALUE.C_INPUT_BRAM_80_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_81_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_81_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_DEPTH { PARAM_VALUE.C_INPUT_BRAM_81_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_81_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_DEPTH { PARAM_VALUE.C_INPUT_BRAM_81_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_81_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_81_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_81_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_81_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_81_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_PORTS { PARAM_VALUE.C_INPUT_BRAM_81_PORTS } {
	# Procedure called to update C_INPUT_BRAM_81_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_PORTS { PARAM_VALUE.C_INPUT_BRAM_81_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_81_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_81_WIDTH { PARAM_VALUE.C_INPUT_BRAM_81_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_81_WIDTH { PARAM_VALUE.C_INPUT_BRAM_81_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_82_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_82_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_DEPTH { PARAM_VALUE.C_INPUT_BRAM_82_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_82_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_DEPTH { PARAM_VALUE.C_INPUT_BRAM_82_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_82_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_82_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_82_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_82_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_82_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_PORTS { PARAM_VALUE.C_INPUT_BRAM_82_PORTS } {
	# Procedure called to update C_INPUT_BRAM_82_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_PORTS { PARAM_VALUE.C_INPUT_BRAM_82_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_82_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_82_WIDTH { PARAM_VALUE.C_INPUT_BRAM_82_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_82_WIDTH { PARAM_VALUE.C_INPUT_BRAM_82_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_83_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_83_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_DEPTH { PARAM_VALUE.C_INPUT_BRAM_83_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_83_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_DEPTH { PARAM_VALUE.C_INPUT_BRAM_83_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_83_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_83_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_83_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_83_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_83_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_PORTS { PARAM_VALUE.C_INPUT_BRAM_83_PORTS } {
	# Procedure called to update C_INPUT_BRAM_83_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_PORTS { PARAM_VALUE.C_INPUT_BRAM_83_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_83_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_83_WIDTH { PARAM_VALUE.C_INPUT_BRAM_83_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_83_WIDTH { PARAM_VALUE.C_INPUT_BRAM_83_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_84_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_84_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_DEPTH { PARAM_VALUE.C_INPUT_BRAM_84_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_84_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_DEPTH { PARAM_VALUE.C_INPUT_BRAM_84_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_84_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_84_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_84_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_84_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_84_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_PORTS { PARAM_VALUE.C_INPUT_BRAM_84_PORTS } {
	# Procedure called to update C_INPUT_BRAM_84_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_PORTS { PARAM_VALUE.C_INPUT_BRAM_84_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_84_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_84_WIDTH { PARAM_VALUE.C_INPUT_BRAM_84_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_84_WIDTH { PARAM_VALUE.C_INPUT_BRAM_84_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_85_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_85_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_DEPTH { PARAM_VALUE.C_INPUT_BRAM_85_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_85_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_DEPTH { PARAM_VALUE.C_INPUT_BRAM_85_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_85_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_85_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_85_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_85_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_85_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_PORTS { PARAM_VALUE.C_INPUT_BRAM_85_PORTS } {
	# Procedure called to update C_INPUT_BRAM_85_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_PORTS { PARAM_VALUE.C_INPUT_BRAM_85_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_85_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_85_WIDTH { PARAM_VALUE.C_INPUT_BRAM_85_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_85_WIDTH { PARAM_VALUE.C_INPUT_BRAM_85_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_86_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_86_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_DEPTH { PARAM_VALUE.C_INPUT_BRAM_86_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_86_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_DEPTH { PARAM_VALUE.C_INPUT_BRAM_86_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_86_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_86_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_86_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_86_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_86_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_PORTS { PARAM_VALUE.C_INPUT_BRAM_86_PORTS } {
	# Procedure called to update C_INPUT_BRAM_86_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_PORTS { PARAM_VALUE.C_INPUT_BRAM_86_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_86_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_86_WIDTH { PARAM_VALUE.C_INPUT_BRAM_86_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_86_WIDTH { PARAM_VALUE.C_INPUT_BRAM_86_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_87_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_87_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_DEPTH { PARAM_VALUE.C_INPUT_BRAM_87_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_87_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_DEPTH { PARAM_VALUE.C_INPUT_BRAM_87_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_87_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_87_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_87_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_87_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_87_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_PORTS { PARAM_VALUE.C_INPUT_BRAM_87_PORTS } {
	# Procedure called to update C_INPUT_BRAM_87_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_PORTS { PARAM_VALUE.C_INPUT_BRAM_87_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_87_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_87_WIDTH { PARAM_VALUE.C_INPUT_BRAM_87_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_87_WIDTH { PARAM_VALUE.C_INPUT_BRAM_87_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_88_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_88_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_DEPTH { PARAM_VALUE.C_INPUT_BRAM_88_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_88_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_DEPTH { PARAM_VALUE.C_INPUT_BRAM_88_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_88_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_88_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_88_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_88_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_88_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_PORTS { PARAM_VALUE.C_INPUT_BRAM_88_PORTS } {
	# Procedure called to update C_INPUT_BRAM_88_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_PORTS { PARAM_VALUE.C_INPUT_BRAM_88_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_88_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_88_WIDTH { PARAM_VALUE.C_INPUT_BRAM_88_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_88_WIDTH { PARAM_VALUE.C_INPUT_BRAM_88_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_89_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_89_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_DEPTH { PARAM_VALUE.C_INPUT_BRAM_89_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_89_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_DEPTH { PARAM_VALUE.C_INPUT_BRAM_89_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_89_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_89_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_89_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_89_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_89_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_PORTS { PARAM_VALUE.C_INPUT_BRAM_89_PORTS } {
	# Procedure called to update C_INPUT_BRAM_89_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_PORTS { PARAM_VALUE.C_INPUT_BRAM_89_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_89_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_89_WIDTH { PARAM_VALUE.C_INPUT_BRAM_89_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_89_WIDTH { PARAM_VALUE.C_INPUT_BRAM_89_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_8_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_8_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_DEPTH { PARAM_VALUE.C_INPUT_BRAM_8_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_8_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_DEPTH { PARAM_VALUE.C_INPUT_BRAM_8_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_8_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_8_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_8_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_8_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_8_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_PORTS { PARAM_VALUE.C_INPUT_BRAM_8_PORTS } {
	# Procedure called to update C_INPUT_BRAM_8_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_PORTS { PARAM_VALUE.C_INPUT_BRAM_8_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_8_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_8_WIDTH { PARAM_VALUE.C_INPUT_BRAM_8_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_8_WIDTH { PARAM_VALUE.C_INPUT_BRAM_8_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_90_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_90_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_DEPTH { PARAM_VALUE.C_INPUT_BRAM_90_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_90_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_DEPTH { PARAM_VALUE.C_INPUT_BRAM_90_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_90_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_90_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_90_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_90_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_90_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_PORTS { PARAM_VALUE.C_INPUT_BRAM_90_PORTS } {
	# Procedure called to update C_INPUT_BRAM_90_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_PORTS { PARAM_VALUE.C_INPUT_BRAM_90_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_90_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_90_WIDTH { PARAM_VALUE.C_INPUT_BRAM_90_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_90_WIDTH { PARAM_VALUE.C_INPUT_BRAM_90_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_91_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_91_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_DEPTH { PARAM_VALUE.C_INPUT_BRAM_91_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_91_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_DEPTH { PARAM_VALUE.C_INPUT_BRAM_91_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_91_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_91_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_91_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_91_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_91_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_PORTS { PARAM_VALUE.C_INPUT_BRAM_91_PORTS } {
	# Procedure called to update C_INPUT_BRAM_91_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_PORTS { PARAM_VALUE.C_INPUT_BRAM_91_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_91_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_91_WIDTH { PARAM_VALUE.C_INPUT_BRAM_91_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_91_WIDTH { PARAM_VALUE.C_INPUT_BRAM_91_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_92_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_92_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_DEPTH { PARAM_VALUE.C_INPUT_BRAM_92_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_92_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_DEPTH { PARAM_VALUE.C_INPUT_BRAM_92_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_92_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_92_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_92_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_92_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_92_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_PORTS { PARAM_VALUE.C_INPUT_BRAM_92_PORTS } {
	# Procedure called to update C_INPUT_BRAM_92_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_PORTS { PARAM_VALUE.C_INPUT_BRAM_92_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_92_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_92_WIDTH { PARAM_VALUE.C_INPUT_BRAM_92_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_92_WIDTH { PARAM_VALUE.C_INPUT_BRAM_92_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_93_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_93_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_DEPTH { PARAM_VALUE.C_INPUT_BRAM_93_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_93_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_DEPTH { PARAM_VALUE.C_INPUT_BRAM_93_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_93_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_93_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_93_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_93_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_93_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_PORTS { PARAM_VALUE.C_INPUT_BRAM_93_PORTS } {
	# Procedure called to update C_INPUT_BRAM_93_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_PORTS { PARAM_VALUE.C_INPUT_BRAM_93_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_93_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_93_WIDTH { PARAM_VALUE.C_INPUT_BRAM_93_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_93_WIDTH { PARAM_VALUE.C_INPUT_BRAM_93_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_94_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_94_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_DEPTH { PARAM_VALUE.C_INPUT_BRAM_94_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_94_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_DEPTH { PARAM_VALUE.C_INPUT_BRAM_94_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_94_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_94_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_94_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_94_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_94_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_PORTS { PARAM_VALUE.C_INPUT_BRAM_94_PORTS } {
	# Procedure called to update C_INPUT_BRAM_94_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_PORTS { PARAM_VALUE.C_INPUT_BRAM_94_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_94_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_94_WIDTH { PARAM_VALUE.C_INPUT_BRAM_94_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_94_WIDTH { PARAM_VALUE.C_INPUT_BRAM_94_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_95_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_95_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_DEPTH { PARAM_VALUE.C_INPUT_BRAM_95_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_95_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_DEPTH { PARAM_VALUE.C_INPUT_BRAM_95_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_95_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_95_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_95_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_95_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_95_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_PORTS { PARAM_VALUE.C_INPUT_BRAM_95_PORTS } {
	# Procedure called to update C_INPUT_BRAM_95_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_PORTS { PARAM_VALUE.C_INPUT_BRAM_95_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_95_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_95_WIDTH { PARAM_VALUE.C_INPUT_BRAM_95_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_95_WIDTH { PARAM_VALUE.C_INPUT_BRAM_95_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_96_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_96_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_DEPTH { PARAM_VALUE.C_INPUT_BRAM_96_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_96_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_DEPTH { PARAM_VALUE.C_INPUT_BRAM_96_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_96_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_96_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_96_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_96_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_96_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_PORTS { PARAM_VALUE.C_INPUT_BRAM_96_PORTS } {
	# Procedure called to update C_INPUT_BRAM_96_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_PORTS { PARAM_VALUE.C_INPUT_BRAM_96_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_96_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_96_WIDTH { PARAM_VALUE.C_INPUT_BRAM_96_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_96_WIDTH { PARAM_VALUE.C_INPUT_BRAM_96_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_97_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_97_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_DEPTH { PARAM_VALUE.C_INPUT_BRAM_97_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_97_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_DEPTH { PARAM_VALUE.C_INPUT_BRAM_97_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_97_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_97_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_97_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_97_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_97_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_PORTS { PARAM_VALUE.C_INPUT_BRAM_97_PORTS } {
	# Procedure called to update C_INPUT_BRAM_97_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_PORTS { PARAM_VALUE.C_INPUT_BRAM_97_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_97_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_97_WIDTH { PARAM_VALUE.C_INPUT_BRAM_97_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_97_WIDTH { PARAM_VALUE.C_INPUT_BRAM_97_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_98_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_98_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_DEPTH { PARAM_VALUE.C_INPUT_BRAM_98_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_98_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_DEPTH { PARAM_VALUE.C_INPUT_BRAM_98_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_98_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_98_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_98_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_98_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_98_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_PORTS { PARAM_VALUE.C_INPUT_BRAM_98_PORTS } {
	# Procedure called to update C_INPUT_BRAM_98_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_PORTS { PARAM_VALUE.C_INPUT_BRAM_98_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_98_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_98_WIDTH { PARAM_VALUE.C_INPUT_BRAM_98_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_98_WIDTH { PARAM_VALUE.C_INPUT_BRAM_98_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_99_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_99_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_DEPTH { PARAM_VALUE.C_INPUT_BRAM_99_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_99_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_DEPTH { PARAM_VALUE.C_INPUT_BRAM_99_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_99_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_99_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_99_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_99_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_99_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_PORTS { PARAM_VALUE.C_INPUT_BRAM_99_PORTS } {
	# Procedure called to update C_INPUT_BRAM_99_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_PORTS { PARAM_VALUE.C_INPUT_BRAM_99_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_99_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_99_WIDTH { PARAM_VALUE.C_INPUT_BRAM_99_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_99_WIDTH { PARAM_VALUE.C_INPUT_BRAM_99_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_9_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH { PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_9_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_DEPTH { PARAM_VALUE.C_INPUT_BRAM_9_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_9_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_DEPTH { PARAM_VALUE.C_INPUT_BRAM_9_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_9_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH } {
	# Procedure called to update C_INPUT_BRAM_9_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH } {
	# Procedure called to validate C_INPUT_BRAM_9_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to update C_INPUT_BRAM_9_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH { PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to validate C_INPUT_BRAM_9_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_PORTS { PARAM_VALUE.C_INPUT_BRAM_9_PORTS } {
	# Procedure called to update C_INPUT_BRAM_9_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_PORTS { PARAM_VALUE.C_INPUT_BRAM_9_PORTS } {
	# Procedure called to validate C_INPUT_BRAM_9_PORTS
	return true
}

proc update_PARAM_VALUE.C_INPUT_BRAM_9_WIDTH { PARAM_VALUE.C_INPUT_BRAM_9_WIDTH } {
	# Procedure called to update C_INPUT_BRAM_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_BRAM_9_WIDTH { PARAM_VALUE.C_INPUT_BRAM_9_WIDTH } {
	# Procedure called to validate C_INPUT_BRAM_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_0_DEPTH { PARAM_VALUE.C_INPUT_FIFO_0_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_0_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_0_DEPTH { PARAM_VALUE.C_INPUT_FIFO_0_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_0_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_0_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_0_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_0_WIDTH { PARAM_VALUE.C_INPUT_FIFO_0_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_0_WIDTH { PARAM_VALUE.C_INPUT_FIFO_0_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_100_DEPTH { PARAM_VALUE.C_INPUT_FIFO_100_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_100_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_100_DEPTH { PARAM_VALUE.C_INPUT_FIFO_100_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_100_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_100_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_100_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_100_WIDTH { PARAM_VALUE.C_INPUT_FIFO_100_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_100_WIDTH { PARAM_VALUE.C_INPUT_FIFO_100_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_101_DEPTH { PARAM_VALUE.C_INPUT_FIFO_101_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_101_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_101_DEPTH { PARAM_VALUE.C_INPUT_FIFO_101_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_101_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_101_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_101_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_101_WIDTH { PARAM_VALUE.C_INPUT_FIFO_101_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_101_WIDTH { PARAM_VALUE.C_INPUT_FIFO_101_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_102_DEPTH { PARAM_VALUE.C_INPUT_FIFO_102_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_102_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_102_DEPTH { PARAM_VALUE.C_INPUT_FIFO_102_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_102_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_102_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_102_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_102_WIDTH { PARAM_VALUE.C_INPUT_FIFO_102_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_102_WIDTH { PARAM_VALUE.C_INPUT_FIFO_102_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_103_DEPTH { PARAM_VALUE.C_INPUT_FIFO_103_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_103_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_103_DEPTH { PARAM_VALUE.C_INPUT_FIFO_103_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_103_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_103_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_103_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_103_WIDTH { PARAM_VALUE.C_INPUT_FIFO_103_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_103_WIDTH { PARAM_VALUE.C_INPUT_FIFO_103_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_104_DEPTH { PARAM_VALUE.C_INPUT_FIFO_104_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_104_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_104_DEPTH { PARAM_VALUE.C_INPUT_FIFO_104_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_104_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_104_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_104_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_104_WIDTH { PARAM_VALUE.C_INPUT_FIFO_104_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_104_WIDTH { PARAM_VALUE.C_INPUT_FIFO_104_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_105_DEPTH { PARAM_VALUE.C_INPUT_FIFO_105_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_105_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_105_DEPTH { PARAM_VALUE.C_INPUT_FIFO_105_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_105_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_105_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_105_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_105_WIDTH { PARAM_VALUE.C_INPUT_FIFO_105_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_105_WIDTH { PARAM_VALUE.C_INPUT_FIFO_105_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_106_DEPTH { PARAM_VALUE.C_INPUT_FIFO_106_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_106_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_106_DEPTH { PARAM_VALUE.C_INPUT_FIFO_106_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_106_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_106_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_106_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_106_WIDTH { PARAM_VALUE.C_INPUT_FIFO_106_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_106_WIDTH { PARAM_VALUE.C_INPUT_FIFO_106_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_107_DEPTH { PARAM_VALUE.C_INPUT_FIFO_107_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_107_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_107_DEPTH { PARAM_VALUE.C_INPUT_FIFO_107_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_107_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_107_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_107_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_107_WIDTH { PARAM_VALUE.C_INPUT_FIFO_107_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_107_WIDTH { PARAM_VALUE.C_INPUT_FIFO_107_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_108_DEPTH { PARAM_VALUE.C_INPUT_FIFO_108_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_108_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_108_DEPTH { PARAM_VALUE.C_INPUT_FIFO_108_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_108_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_108_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_108_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_108_WIDTH { PARAM_VALUE.C_INPUT_FIFO_108_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_108_WIDTH { PARAM_VALUE.C_INPUT_FIFO_108_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_109_DEPTH { PARAM_VALUE.C_INPUT_FIFO_109_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_109_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_109_DEPTH { PARAM_VALUE.C_INPUT_FIFO_109_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_109_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_109_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_109_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_109_WIDTH { PARAM_VALUE.C_INPUT_FIFO_109_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_109_WIDTH { PARAM_VALUE.C_INPUT_FIFO_109_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_10_DEPTH { PARAM_VALUE.C_INPUT_FIFO_10_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_10_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_10_DEPTH { PARAM_VALUE.C_INPUT_FIFO_10_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_10_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_10_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_10_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_10_WIDTH { PARAM_VALUE.C_INPUT_FIFO_10_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_10_WIDTH { PARAM_VALUE.C_INPUT_FIFO_10_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_110_DEPTH { PARAM_VALUE.C_INPUT_FIFO_110_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_110_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_110_DEPTH { PARAM_VALUE.C_INPUT_FIFO_110_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_110_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_110_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_110_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_110_WIDTH { PARAM_VALUE.C_INPUT_FIFO_110_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_110_WIDTH { PARAM_VALUE.C_INPUT_FIFO_110_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_111_DEPTH { PARAM_VALUE.C_INPUT_FIFO_111_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_111_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_111_DEPTH { PARAM_VALUE.C_INPUT_FIFO_111_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_111_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_111_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_111_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_111_WIDTH { PARAM_VALUE.C_INPUT_FIFO_111_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_111_WIDTH { PARAM_VALUE.C_INPUT_FIFO_111_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_112_DEPTH { PARAM_VALUE.C_INPUT_FIFO_112_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_112_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_112_DEPTH { PARAM_VALUE.C_INPUT_FIFO_112_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_112_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_112_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_112_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_112_WIDTH { PARAM_VALUE.C_INPUT_FIFO_112_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_112_WIDTH { PARAM_VALUE.C_INPUT_FIFO_112_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_113_DEPTH { PARAM_VALUE.C_INPUT_FIFO_113_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_113_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_113_DEPTH { PARAM_VALUE.C_INPUT_FIFO_113_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_113_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_113_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_113_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_113_WIDTH { PARAM_VALUE.C_INPUT_FIFO_113_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_113_WIDTH { PARAM_VALUE.C_INPUT_FIFO_113_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_114_DEPTH { PARAM_VALUE.C_INPUT_FIFO_114_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_114_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_114_DEPTH { PARAM_VALUE.C_INPUT_FIFO_114_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_114_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_114_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_114_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_114_WIDTH { PARAM_VALUE.C_INPUT_FIFO_114_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_114_WIDTH { PARAM_VALUE.C_INPUT_FIFO_114_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_115_DEPTH { PARAM_VALUE.C_INPUT_FIFO_115_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_115_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_115_DEPTH { PARAM_VALUE.C_INPUT_FIFO_115_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_115_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_115_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_115_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_115_WIDTH { PARAM_VALUE.C_INPUT_FIFO_115_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_115_WIDTH { PARAM_VALUE.C_INPUT_FIFO_115_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_116_DEPTH { PARAM_VALUE.C_INPUT_FIFO_116_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_116_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_116_DEPTH { PARAM_VALUE.C_INPUT_FIFO_116_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_116_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_116_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_116_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_116_WIDTH { PARAM_VALUE.C_INPUT_FIFO_116_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_116_WIDTH { PARAM_VALUE.C_INPUT_FIFO_116_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_117_DEPTH { PARAM_VALUE.C_INPUT_FIFO_117_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_117_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_117_DEPTH { PARAM_VALUE.C_INPUT_FIFO_117_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_117_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_117_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_117_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_117_WIDTH { PARAM_VALUE.C_INPUT_FIFO_117_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_117_WIDTH { PARAM_VALUE.C_INPUT_FIFO_117_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_118_DEPTH { PARAM_VALUE.C_INPUT_FIFO_118_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_118_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_118_DEPTH { PARAM_VALUE.C_INPUT_FIFO_118_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_118_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_118_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_118_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_118_WIDTH { PARAM_VALUE.C_INPUT_FIFO_118_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_118_WIDTH { PARAM_VALUE.C_INPUT_FIFO_118_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_119_DEPTH { PARAM_VALUE.C_INPUT_FIFO_119_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_119_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_119_DEPTH { PARAM_VALUE.C_INPUT_FIFO_119_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_119_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_119_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_119_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_119_WIDTH { PARAM_VALUE.C_INPUT_FIFO_119_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_119_WIDTH { PARAM_VALUE.C_INPUT_FIFO_119_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_11_DEPTH { PARAM_VALUE.C_INPUT_FIFO_11_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_11_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_11_DEPTH { PARAM_VALUE.C_INPUT_FIFO_11_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_11_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_11_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_11_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_11_WIDTH { PARAM_VALUE.C_INPUT_FIFO_11_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_11_WIDTH { PARAM_VALUE.C_INPUT_FIFO_11_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_120_DEPTH { PARAM_VALUE.C_INPUT_FIFO_120_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_120_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_120_DEPTH { PARAM_VALUE.C_INPUT_FIFO_120_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_120_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_120_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_120_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_120_WIDTH { PARAM_VALUE.C_INPUT_FIFO_120_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_120_WIDTH { PARAM_VALUE.C_INPUT_FIFO_120_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_121_DEPTH { PARAM_VALUE.C_INPUT_FIFO_121_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_121_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_121_DEPTH { PARAM_VALUE.C_INPUT_FIFO_121_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_121_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_121_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_121_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_121_WIDTH { PARAM_VALUE.C_INPUT_FIFO_121_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_121_WIDTH { PARAM_VALUE.C_INPUT_FIFO_121_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_122_DEPTH { PARAM_VALUE.C_INPUT_FIFO_122_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_122_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_122_DEPTH { PARAM_VALUE.C_INPUT_FIFO_122_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_122_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_122_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_122_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_122_WIDTH { PARAM_VALUE.C_INPUT_FIFO_122_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_122_WIDTH { PARAM_VALUE.C_INPUT_FIFO_122_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_123_DEPTH { PARAM_VALUE.C_INPUT_FIFO_123_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_123_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_123_DEPTH { PARAM_VALUE.C_INPUT_FIFO_123_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_123_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_123_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_123_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_123_WIDTH { PARAM_VALUE.C_INPUT_FIFO_123_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_123_WIDTH { PARAM_VALUE.C_INPUT_FIFO_123_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_124_DEPTH { PARAM_VALUE.C_INPUT_FIFO_124_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_124_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_124_DEPTH { PARAM_VALUE.C_INPUT_FIFO_124_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_124_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_124_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_124_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_124_WIDTH { PARAM_VALUE.C_INPUT_FIFO_124_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_124_WIDTH { PARAM_VALUE.C_INPUT_FIFO_124_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_125_DEPTH { PARAM_VALUE.C_INPUT_FIFO_125_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_125_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_125_DEPTH { PARAM_VALUE.C_INPUT_FIFO_125_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_125_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_125_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_125_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_125_WIDTH { PARAM_VALUE.C_INPUT_FIFO_125_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_125_WIDTH { PARAM_VALUE.C_INPUT_FIFO_125_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_126_DEPTH { PARAM_VALUE.C_INPUT_FIFO_126_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_126_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_126_DEPTH { PARAM_VALUE.C_INPUT_FIFO_126_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_126_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_126_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_126_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_126_WIDTH { PARAM_VALUE.C_INPUT_FIFO_126_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_126_WIDTH { PARAM_VALUE.C_INPUT_FIFO_126_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_127_DEPTH { PARAM_VALUE.C_INPUT_FIFO_127_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_127_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_127_DEPTH { PARAM_VALUE.C_INPUT_FIFO_127_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_127_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_127_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_127_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_127_WIDTH { PARAM_VALUE.C_INPUT_FIFO_127_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_127_WIDTH { PARAM_VALUE.C_INPUT_FIFO_127_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_12_DEPTH { PARAM_VALUE.C_INPUT_FIFO_12_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_12_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_12_DEPTH { PARAM_VALUE.C_INPUT_FIFO_12_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_12_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_12_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_12_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_12_WIDTH { PARAM_VALUE.C_INPUT_FIFO_12_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_12_WIDTH { PARAM_VALUE.C_INPUT_FIFO_12_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_13_DEPTH { PARAM_VALUE.C_INPUT_FIFO_13_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_13_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_13_DEPTH { PARAM_VALUE.C_INPUT_FIFO_13_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_13_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_13_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_13_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_13_WIDTH { PARAM_VALUE.C_INPUT_FIFO_13_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_13_WIDTH { PARAM_VALUE.C_INPUT_FIFO_13_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_14_DEPTH { PARAM_VALUE.C_INPUT_FIFO_14_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_14_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_14_DEPTH { PARAM_VALUE.C_INPUT_FIFO_14_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_14_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_14_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_14_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_14_WIDTH { PARAM_VALUE.C_INPUT_FIFO_14_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_14_WIDTH { PARAM_VALUE.C_INPUT_FIFO_14_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_15_DEPTH { PARAM_VALUE.C_INPUT_FIFO_15_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_15_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_15_DEPTH { PARAM_VALUE.C_INPUT_FIFO_15_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_15_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_15_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_15_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_15_WIDTH { PARAM_VALUE.C_INPUT_FIFO_15_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_15_WIDTH { PARAM_VALUE.C_INPUT_FIFO_15_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_16_DEPTH { PARAM_VALUE.C_INPUT_FIFO_16_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_16_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_16_DEPTH { PARAM_VALUE.C_INPUT_FIFO_16_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_16_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_16_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_16_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_16_WIDTH { PARAM_VALUE.C_INPUT_FIFO_16_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_16_WIDTH { PARAM_VALUE.C_INPUT_FIFO_16_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_17_DEPTH { PARAM_VALUE.C_INPUT_FIFO_17_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_17_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_17_DEPTH { PARAM_VALUE.C_INPUT_FIFO_17_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_17_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_17_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_17_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_17_WIDTH { PARAM_VALUE.C_INPUT_FIFO_17_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_17_WIDTH { PARAM_VALUE.C_INPUT_FIFO_17_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_18_DEPTH { PARAM_VALUE.C_INPUT_FIFO_18_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_18_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_18_DEPTH { PARAM_VALUE.C_INPUT_FIFO_18_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_18_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_18_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_18_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_18_WIDTH { PARAM_VALUE.C_INPUT_FIFO_18_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_18_WIDTH { PARAM_VALUE.C_INPUT_FIFO_18_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_19_DEPTH { PARAM_VALUE.C_INPUT_FIFO_19_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_19_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_19_DEPTH { PARAM_VALUE.C_INPUT_FIFO_19_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_19_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_19_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_19_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_19_WIDTH { PARAM_VALUE.C_INPUT_FIFO_19_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_19_WIDTH { PARAM_VALUE.C_INPUT_FIFO_19_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_1_DEPTH { PARAM_VALUE.C_INPUT_FIFO_1_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_1_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_1_DEPTH { PARAM_VALUE.C_INPUT_FIFO_1_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_1_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_1_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_1_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_1_WIDTH { PARAM_VALUE.C_INPUT_FIFO_1_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_1_WIDTH { PARAM_VALUE.C_INPUT_FIFO_1_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_20_DEPTH { PARAM_VALUE.C_INPUT_FIFO_20_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_20_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_20_DEPTH { PARAM_VALUE.C_INPUT_FIFO_20_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_20_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_20_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_20_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_20_WIDTH { PARAM_VALUE.C_INPUT_FIFO_20_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_20_WIDTH { PARAM_VALUE.C_INPUT_FIFO_20_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_21_DEPTH { PARAM_VALUE.C_INPUT_FIFO_21_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_21_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_21_DEPTH { PARAM_VALUE.C_INPUT_FIFO_21_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_21_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_21_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_21_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_21_WIDTH { PARAM_VALUE.C_INPUT_FIFO_21_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_21_WIDTH { PARAM_VALUE.C_INPUT_FIFO_21_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_22_DEPTH { PARAM_VALUE.C_INPUT_FIFO_22_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_22_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_22_DEPTH { PARAM_VALUE.C_INPUT_FIFO_22_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_22_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_22_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_22_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_22_WIDTH { PARAM_VALUE.C_INPUT_FIFO_22_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_22_WIDTH { PARAM_VALUE.C_INPUT_FIFO_22_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_23_DEPTH { PARAM_VALUE.C_INPUT_FIFO_23_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_23_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_23_DEPTH { PARAM_VALUE.C_INPUT_FIFO_23_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_23_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_23_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_23_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_23_WIDTH { PARAM_VALUE.C_INPUT_FIFO_23_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_23_WIDTH { PARAM_VALUE.C_INPUT_FIFO_23_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_24_DEPTH { PARAM_VALUE.C_INPUT_FIFO_24_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_24_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_24_DEPTH { PARAM_VALUE.C_INPUT_FIFO_24_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_24_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_24_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_24_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_24_WIDTH { PARAM_VALUE.C_INPUT_FIFO_24_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_24_WIDTH { PARAM_VALUE.C_INPUT_FIFO_24_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_25_DEPTH { PARAM_VALUE.C_INPUT_FIFO_25_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_25_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_25_DEPTH { PARAM_VALUE.C_INPUT_FIFO_25_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_25_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_25_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_25_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_25_WIDTH { PARAM_VALUE.C_INPUT_FIFO_25_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_25_WIDTH { PARAM_VALUE.C_INPUT_FIFO_25_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_26_DEPTH { PARAM_VALUE.C_INPUT_FIFO_26_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_26_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_26_DEPTH { PARAM_VALUE.C_INPUT_FIFO_26_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_26_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_26_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_26_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_26_WIDTH { PARAM_VALUE.C_INPUT_FIFO_26_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_26_WIDTH { PARAM_VALUE.C_INPUT_FIFO_26_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_27_DEPTH { PARAM_VALUE.C_INPUT_FIFO_27_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_27_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_27_DEPTH { PARAM_VALUE.C_INPUT_FIFO_27_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_27_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_27_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_27_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_27_WIDTH { PARAM_VALUE.C_INPUT_FIFO_27_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_27_WIDTH { PARAM_VALUE.C_INPUT_FIFO_27_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_28_DEPTH { PARAM_VALUE.C_INPUT_FIFO_28_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_28_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_28_DEPTH { PARAM_VALUE.C_INPUT_FIFO_28_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_28_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_28_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_28_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_28_WIDTH { PARAM_VALUE.C_INPUT_FIFO_28_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_28_WIDTH { PARAM_VALUE.C_INPUT_FIFO_28_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_29_DEPTH { PARAM_VALUE.C_INPUT_FIFO_29_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_29_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_29_DEPTH { PARAM_VALUE.C_INPUT_FIFO_29_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_29_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_29_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_29_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_29_WIDTH { PARAM_VALUE.C_INPUT_FIFO_29_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_29_WIDTH { PARAM_VALUE.C_INPUT_FIFO_29_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_2_DEPTH { PARAM_VALUE.C_INPUT_FIFO_2_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_2_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_2_DEPTH { PARAM_VALUE.C_INPUT_FIFO_2_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_2_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_2_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_2_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_2_WIDTH { PARAM_VALUE.C_INPUT_FIFO_2_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_2_WIDTH { PARAM_VALUE.C_INPUT_FIFO_2_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_30_DEPTH { PARAM_VALUE.C_INPUT_FIFO_30_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_30_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_30_DEPTH { PARAM_VALUE.C_INPUT_FIFO_30_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_30_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_30_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_30_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_30_WIDTH { PARAM_VALUE.C_INPUT_FIFO_30_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_30_WIDTH { PARAM_VALUE.C_INPUT_FIFO_30_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_31_DEPTH { PARAM_VALUE.C_INPUT_FIFO_31_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_31_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_31_DEPTH { PARAM_VALUE.C_INPUT_FIFO_31_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_31_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_31_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_31_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_31_WIDTH { PARAM_VALUE.C_INPUT_FIFO_31_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_31_WIDTH { PARAM_VALUE.C_INPUT_FIFO_31_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_32_DEPTH { PARAM_VALUE.C_INPUT_FIFO_32_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_32_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_32_DEPTH { PARAM_VALUE.C_INPUT_FIFO_32_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_32_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_32_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_32_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_32_WIDTH { PARAM_VALUE.C_INPUT_FIFO_32_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_32_WIDTH { PARAM_VALUE.C_INPUT_FIFO_32_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_33_DEPTH { PARAM_VALUE.C_INPUT_FIFO_33_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_33_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_33_DEPTH { PARAM_VALUE.C_INPUT_FIFO_33_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_33_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_33_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_33_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_33_WIDTH { PARAM_VALUE.C_INPUT_FIFO_33_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_33_WIDTH { PARAM_VALUE.C_INPUT_FIFO_33_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_34_DEPTH { PARAM_VALUE.C_INPUT_FIFO_34_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_34_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_34_DEPTH { PARAM_VALUE.C_INPUT_FIFO_34_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_34_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_34_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_34_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_34_WIDTH { PARAM_VALUE.C_INPUT_FIFO_34_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_34_WIDTH { PARAM_VALUE.C_INPUT_FIFO_34_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_35_DEPTH { PARAM_VALUE.C_INPUT_FIFO_35_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_35_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_35_DEPTH { PARAM_VALUE.C_INPUT_FIFO_35_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_35_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_35_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_35_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_35_WIDTH { PARAM_VALUE.C_INPUT_FIFO_35_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_35_WIDTH { PARAM_VALUE.C_INPUT_FIFO_35_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_36_DEPTH { PARAM_VALUE.C_INPUT_FIFO_36_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_36_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_36_DEPTH { PARAM_VALUE.C_INPUT_FIFO_36_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_36_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_36_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_36_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_36_WIDTH { PARAM_VALUE.C_INPUT_FIFO_36_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_36_WIDTH { PARAM_VALUE.C_INPUT_FIFO_36_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_37_DEPTH { PARAM_VALUE.C_INPUT_FIFO_37_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_37_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_37_DEPTH { PARAM_VALUE.C_INPUT_FIFO_37_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_37_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_37_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_37_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_37_WIDTH { PARAM_VALUE.C_INPUT_FIFO_37_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_37_WIDTH { PARAM_VALUE.C_INPUT_FIFO_37_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_38_DEPTH { PARAM_VALUE.C_INPUT_FIFO_38_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_38_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_38_DEPTH { PARAM_VALUE.C_INPUT_FIFO_38_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_38_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_38_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_38_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_38_WIDTH { PARAM_VALUE.C_INPUT_FIFO_38_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_38_WIDTH { PARAM_VALUE.C_INPUT_FIFO_38_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_39_DEPTH { PARAM_VALUE.C_INPUT_FIFO_39_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_39_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_39_DEPTH { PARAM_VALUE.C_INPUT_FIFO_39_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_39_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_39_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_39_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_39_WIDTH { PARAM_VALUE.C_INPUT_FIFO_39_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_39_WIDTH { PARAM_VALUE.C_INPUT_FIFO_39_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_3_DEPTH { PARAM_VALUE.C_INPUT_FIFO_3_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_3_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_3_DEPTH { PARAM_VALUE.C_INPUT_FIFO_3_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_3_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_3_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_3_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_3_WIDTH { PARAM_VALUE.C_INPUT_FIFO_3_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_3_WIDTH { PARAM_VALUE.C_INPUT_FIFO_3_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_40_DEPTH { PARAM_VALUE.C_INPUT_FIFO_40_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_40_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_40_DEPTH { PARAM_VALUE.C_INPUT_FIFO_40_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_40_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_40_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_40_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_40_WIDTH { PARAM_VALUE.C_INPUT_FIFO_40_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_40_WIDTH { PARAM_VALUE.C_INPUT_FIFO_40_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_41_DEPTH { PARAM_VALUE.C_INPUT_FIFO_41_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_41_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_41_DEPTH { PARAM_VALUE.C_INPUT_FIFO_41_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_41_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_41_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_41_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_41_WIDTH { PARAM_VALUE.C_INPUT_FIFO_41_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_41_WIDTH { PARAM_VALUE.C_INPUT_FIFO_41_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_42_DEPTH { PARAM_VALUE.C_INPUT_FIFO_42_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_42_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_42_DEPTH { PARAM_VALUE.C_INPUT_FIFO_42_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_42_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_42_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_42_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_42_WIDTH { PARAM_VALUE.C_INPUT_FIFO_42_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_42_WIDTH { PARAM_VALUE.C_INPUT_FIFO_42_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_43_DEPTH { PARAM_VALUE.C_INPUT_FIFO_43_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_43_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_43_DEPTH { PARAM_VALUE.C_INPUT_FIFO_43_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_43_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_43_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_43_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_43_WIDTH { PARAM_VALUE.C_INPUT_FIFO_43_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_43_WIDTH { PARAM_VALUE.C_INPUT_FIFO_43_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_44_DEPTH { PARAM_VALUE.C_INPUT_FIFO_44_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_44_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_44_DEPTH { PARAM_VALUE.C_INPUT_FIFO_44_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_44_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_44_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_44_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_44_WIDTH { PARAM_VALUE.C_INPUT_FIFO_44_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_44_WIDTH { PARAM_VALUE.C_INPUT_FIFO_44_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_45_DEPTH { PARAM_VALUE.C_INPUT_FIFO_45_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_45_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_45_DEPTH { PARAM_VALUE.C_INPUT_FIFO_45_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_45_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_45_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_45_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_45_WIDTH { PARAM_VALUE.C_INPUT_FIFO_45_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_45_WIDTH { PARAM_VALUE.C_INPUT_FIFO_45_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_46_DEPTH { PARAM_VALUE.C_INPUT_FIFO_46_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_46_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_46_DEPTH { PARAM_VALUE.C_INPUT_FIFO_46_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_46_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_46_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_46_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_46_WIDTH { PARAM_VALUE.C_INPUT_FIFO_46_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_46_WIDTH { PARAM_VALUE.C_INPUT_FIFO_46_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_47_DEPTH { PARAM_VALUE.C_INPUT_FIFO_47_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_47_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_47_DEPTH { PARAM_VALUE.C_INPUT_FIFO_47_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_47_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_47_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_47_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_47_WIDTH { PARAM_VALUE.C_INPUT_FIFO_47_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_47_WIDTH { PARAM_VALUE.C_INPUT_FIFO_47_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_48_DEPTH { PARAM_VALUE.C_INPUT_FIFO_48_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_48_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_48_DEPTH { PARAM_VALUE.C_INPUT_FIFO_48_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_48_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_48_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_48_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_48_WIDTH { PARAM_VALUE.C_INPUT_FIFO_48_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_48_WIDTH { PARAM_VALUE.C_INPUT_FIFO_48_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_49_DEPTH { PARAM_VALUE.C_INPUT_FIFO_49_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_49_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_49_DEPTH { PARAM_VALUE.C_INPUT_FIFO_49_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_49_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_49_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_49_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_49_WIDTH { PARAM_VALUE.C_INPUT_FIFO_49_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_49_WIDTH { PARAM_VALUE.C_INPUT_FIFO_49_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_4_DEPTH { PARAM_VALUE.C_INPUT_FIFO_4_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_4_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_4_DEPTH { PARAM_VALUE.C_INPUT_FIFO_4_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_4_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_4_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_4_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_4_WIDTH { PARAM_VALUE.C_INPUT_FIFO_4_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_4_WIDTH { PARAM_VALUE.C_INPUT_FIFO_4_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_50_DEPTH { PARAM_VALUE.C_INPUT_FIFO_50_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_50_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_50_DEPTH { PARAM_VALUE.C_INPUT_FIFO_50_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_50_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_50_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_50_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_50_WIDTH { PARAM_VALUE.C_INPUT_FIFO_50_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_50_WIDTH { PARAM_VALUE.C_INPUT_FIFO_50_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_51_DEPTH { PARAM_VALUE.C_INPUT_FIFO_51_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_51_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_51_DEPTH { PARAM_VALUE.C_INPUT_FIFO_51_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_51_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_51_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_51_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_51_WIDTH { PARAM_VALUE.C_INPUT_FIFO_51_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_51_WIDTH { PARAM_VALUE.C_INPUT_FIFO_51_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_52_DEPTH { PARAM_VALUE.C_INPUT_FIFO_52_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_52_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_52_DEPTH { PARAM_VALUE.C_INPUT_FIFO_52_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_52_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_52_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_52_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_52_WIDTH { PARAM_VALUE.C_INPUT_FIFO_52_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_52_WIDTH { PARAM_VALUE.C_INPUT_FIFO_52_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_53_DEPTH { PARAM_VALUE.C_INPUT_FIFO_53_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_53_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_53_DEPTH { PARAM_VALUE.C_INPUT_FIFO_53_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_53_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_53_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_53_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_53_WIDTH { PARAM_VALUE.C_INPUT_FIFO_53_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_53_WIDTH { PARAM_VALUE.C_INPUT_FIFO_53_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_54_DEPTH { PARAM_VALUE.C_INPUT_FIFO_54_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_54_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_54_DEPTH { PARAM_VALUE.C_INPUT_FIFO_54_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_54_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_54_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_54_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_54_WIDTH { PARAM_VALUE.C_INPUT_FIFO_54_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_54_WIDTH { PARAM_VALUE.C_INPUT_FIFO_54_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_55_DEPTH { PARAM_VALUE.C_INPUT_FIFO_55_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_55_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_55_DEPTH { PARAM_VALUE.C_INPUT_FIFO_55_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_55_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_55_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_55_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_55_WIDTH { PARAM_VALUE.C_INPUT_FIFO_55_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_55_WIDTH { PARAM_VALUE.C_INPUT_FIFO_55_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_56_DEPTH { PARAM_VALUE.C_INPUT_FIFO_56_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_56_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_56_DEPTH { PARAM_VALUE.C_INPUT_FIFO_56_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_56_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_56_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_56_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_56_WIDTH { PARAM_VALUE.C_INPUT_FIFO_56_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_56_WIDTH { PARAM_VALUE.C_INPUT_FIFO_56_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_57_DEPTH { PARAM_VALUE.C_INPUT_FIFO_57_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_57_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_57_DEPTH { PARAM_VALUE.C_INPUT_FIFO_57_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_57_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_57_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_57_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_57_WIDTH { PARAM_VALUE.C_INPUT_FIFO_57_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_57_WIDTH { PARAM_VALUE.C_INPUT_FIFO_57_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_58_DEPTH { PARAM_VALUE.C_INPUT_FIFO_58_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_58_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_58_DEPTH { PARAM_VALUE.C_INPUT_FIFO_58_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_58_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_58_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_58_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_58_WIDTH { PARAM_VALUE.C_INPUT_FIFO_58_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_58_WIDTH { PARAM_VALUE.C_INPUT_FIFO_58_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_59_DEPTH { PARAM_VALUE.C_INPUT_FIFO_59_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_59_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_59_DEPTH { PARAM_VALUE.C_INPUT_FIFO_59_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_59_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_59_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_59_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_59_WIDTH { PARAM_VALUE.C_INPUT_FIFO_59_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_59_WIDTH { PARAM_VALUE.C_INPUT_FIFO_59_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_5_DEPTH { PARAM_VALUE.C_INPUT_FIFO_5_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_5_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_5_DEPTH { PARAM_VALUE.C_INPUT_FIFO_5_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_5_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_5_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_5_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_5_WIDTH { PARAM_VALUE.C_INPUT_FIFO_5_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_5_WIDTH { PARAM_VALUE.C_INPUT_FIFO_5_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_60_DEPTH { PARAM_VALUE.C_INPUT_FIFO_60_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_60_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_60_DEPTH { PARAM_VALUE.C_INPUT_FIFO_60_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_60_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_60_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_60_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_60_WIDTH { PARAM_VALUE.C_INPUT_FIFO_60_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_60_WIDTH { PARAM_VALUE.C_INPUT_FIFO_60_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_61_DEPTH { PARAM_VALUE.C_INPUT_FIFO_61_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_61_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_61_DEPTH { PARAM_VALUE.C_INPUT_FIFO_61_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_61_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_61_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_61_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_61_WIDTH { PARAM_VALUE.C_INPUT_FIFO_61_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_61_WIDTH { PARAM_VALUE.C_INPUT_FIFO_61_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_62_DEPTH { PARAM_VALUE.C_INPUT_FIFO_62_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_62_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_62_DEPTH { PARAM_VALUE.C_INPUT_FIFO_62_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_62_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_62_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_62_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_62_WIDTH { PARAM_VALUE.C_INPUT_FIFO_62_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_62_WIDTH { PARAM_VALUE.C_INPUT_FIFO_62_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_63_DEPTH { PARAM_VALUE.C_INPUT_FIFO_63_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_63_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_63_DEPTH { PARAM_VALUE.C_INPUT_FIFO_63_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_63_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_63_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_63_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_63_WIDTH { PARAM_VALUE.C_INPUT_FIFO_63_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_63_WIDTH { PARAM_VALUE.C_INPUT_FIFO_63_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_64_DEPTH { PARAM_VALUE.C_INPUT_FIFO_64_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_64_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_64_DEPTH { PARAM_VALUE.C_INPUT_FIFO_64_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_64_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_64_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_64_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_64_WIDTH { PARAM_VALUE.C_INPUT_FIFO_64_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_64_WIDTH { PARAM_VALUE.C_INPUT_FIFO_64_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_65_DEPTH { PARAM_VALUE.C_INPUT_FIFO_65_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_65_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_65_DEPTH { PARAM_VALUE.C_INPUT_FIFO_65_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_65_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_65_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_65_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_65_WIDTH { PARAM_VALUE.C_INPUT_FIFO_65_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_65_WIDTH { PARAM_VALUE.C_INPUT_FIFO_65_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_66_DEPTH { PARAM_VALUE.C_INPUT_FIFO_66_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_66_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_66_DEPTH { PARAM_VALUE.C_INPUT_FIFO_66_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_66_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_66_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_66_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_66_WIDTH { PARAM_VALUE.C_INPUT_FIFO_66_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_66_WIDTH { PARAM_VALUE.C_INPUT_FIFO_66_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_67_DEPTH { PARAM_VALUE.C_INPUT_FIFO_67_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_67_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_67_DEPTH { PARAM_VALUE.C_INPUT_FIFO_67_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_67_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_67_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_67_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_67_WIDTH { PARAM_VALUE.C_INPUT_FIFO_67_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_67_WIDTH { PARAM_VALUE.C_INPUT_FIFO_67_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_68_DEPTH { PARAM_VALUE.C_INPUT_FIFO_68_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_68_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_68_DEPTH { PARAM_VALUE.C_INPUT_FIFO_68_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_68_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_68_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_68_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_68_WIDTH { PARAM_VALUE.C_INPUT_FIFO_68_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_68_WIDTH { PARAM_VALUE.C_INPUT_FIFO_68_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_69_DEPTH { PARAM_VALUE.C_INPUT_FIFO_69_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_69_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_69_DEPTH { PARAM_VALUE.C_INPUT_FIFO_69_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_69_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_69_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_69_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_69_WIDTH { PARAM_VALUE.C_INPUT_FIFO_69_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_69_WIDTH { PARAM_VALUE.C_INPUT_FIFO_69_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_6_DEPTH { PARAM_VALUE.C_INPUT_FIFO_6_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_6_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_6_DEPTH { PARAM_VALUE.C_INPUT_FIFO_6_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_6_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_6_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_6_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_6_WIDTH { PARAM_VALUE.C_INPUT_FIFO_6_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_6_WIDTH { PARAM_VALUE.C_INPUT_FIFO_6_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_70_DEPTH { PARAM_VALUE.C_INPUT_FIFO_70_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_70_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_70_DEPTH { PARAM_VALUE.C_INPUT_FIFO_70_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_70_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_70_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_70_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_70_WIDTH { PARAM_VALUE.C_INPUT_FIFO_70_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_70_WIDTH { PARAM_VALUE.C_INPUT_FIFO_70_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_71_DEPTH { PARAM_VALUE.C_INPUT_FIFO_71_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_71_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_71_DEPTH { PARAM_VALUE.C_INPUT_FIFO_71_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_71_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_71_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_71_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_71_WIDTH { PARAM_VALUE.C_INPUT_FIFO_71_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_71_WIDTH { PARAM_VALUE.C_INPUT_FIFO_71_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_72_DEPTH { PARAM_VALUE.C_INPUT_FIFO_72_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_72_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_72_DEPTH { PARAM_VALUE.C_INPUT_FIFO_72_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_72_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_72_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_72_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_72_WIDTH { PARAM_VALUE.C_INPUT_FIFO_72_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_72_WIDTH { PARAM_VALUE.C_INPUT_FIFO_72_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_73_DEPTH { PARAM_VALUE.C_INPUT_FIFO_73_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_73_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_73_DEPTH { PARAM_VALUE.C_INPUT_FIFO_73_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_73_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_73_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_73_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_73_WIDTH { PARAM_VALUE.C_INPUT_FIFO_73_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_73_WIDTH { PARAM_VALUE.C_INPUT_FIFO_73_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_74_DEPTH { PARAM_VALUE.C_INPUT_FIFO_74_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_74_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_74_DEPTH { PARAM_VALUE.C_INPUT_FIFO_74_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_74_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_74_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_74_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_74_WIDTH { PARAM_VALUE.C_INPUT_FIFO_74_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_74_WIDTH { PARAM_VALUE.C_INPUT_FIFO_74_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_75_DEPTH { PARAM_VALUE.C_INPUT_FIFO_75_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_75_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_75_DEPTH { PARAM_VALUE.C_INPUT_FIFO_75_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_75_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_75_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_75_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_75_WIDTH { PARAM_VALUE.C_INPUT_FIFO_75_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_75_WIDTH { PARAM_VALUE.C_INPUT_FIFO_75_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_76_DEPTH { PARAM_VALUE.C_INPUT_FIFO_76_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_76_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_76_DEPTH { PARAM_VALUE.C_INPUT_FIFO_76_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_76_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_76_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_76_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_76_WIDTH { PARAM_VALUE.C_INPUT_FIFO_76_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_76_WIDTH { PARAM_VALUE.C_INPUT_FIFO_76_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_77_DEPTH { PARAM_VALUE.C_INPUT_FIFO_77_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_77_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_77_DEPTH { PARAM_VALUE.C_INPUT_FIFO_77_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_77_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_77_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_77_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_77_WIDTH { PARAM_VALUE.C_INPUT_FIFO_77_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_77_WIDTH { PARAM_VALUE.C_INPUT_FIFO_77_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_78_DEPTH { PARAM_VALUE.C_INPUT_FIFO_78_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_78_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_78_DEPTH { PARAM_VALUE.C_INPUT_FIFO_78_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_78_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_78_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_78_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_78_WIDTH { PARAM_VALUE.C_INPUT_FIFO_78_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_78_WIDTH { PARAM_VALUE.C_INPUT_FIFO_78_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_79_DEPTH { PARAM_VALUE.C_INPUT_FIFO_79_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_79_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_79_DEPTH { PARAM_VALUE.C_INPUT_FIFO_79_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_79_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_79_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_79_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_79_WIDTH { PARAM_VALUE.C_INPUT_FIFO_79_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_79_WIDTH { PARAM_VALUE.C_INPUT_FIFO_79_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_7_DEPTH { PARAM_VALUE.C_INPUT_FIFO_7_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_7_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_7_DEPTH { PARAM_VALUE.C_INPUT_FIFO_7_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_7_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_7_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_7_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_7_WIDTH { PARAM_VALUE.C_INPUT_FIFO_7_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_7_WIDTH { PARAM_VALUE.C_INPUT_FIFO_7_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_80_DEPTH { PARAM_VALUE.C_INPUT_FIFO_80_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_80_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_80_DEPTH { PARAM_VALUE.C_INPUT_FIFO_80_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_80_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_80_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_80_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_80_WIDTH { PARAM_VALUE.C_INPUT_FIFO_80_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_80_WIDTH { PARAM_VALUE.C_INPUT_FIFO_80_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_81_DEPTH { PARAM_VALUE.C_INPUT_FIFO_81_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_81_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_81_DEPTH { PARAM_VALUE.C_INPUT_FIFO_81_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_81_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_81_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_81_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_81_WIDTH { PARAM_VALUE.C_INPUT_FIFO_81_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_81_WIDTH { PARAM_VALUE.C_INPUT_FIFO_81_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_82_DEPTH { PARAM_VALUE.C_INPUT_FIFO_82_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_82_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_82_DEPTH { PARAM_VALUE.C_INPUT_FIFO_82_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_82_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_82_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_82_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_82_WIDTH { PARAM_VALUE.C_INPUT_FIFO_82_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_82_WIDTH { PARAM_VALUE.C_INPUT_FIFO_82_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_83_DEPTH { PARAM_VALUE.C_INPUT_FIFO_83_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_83_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_83_DEPTH { PARAM_VALUE.C_INPUT_FIFO_83_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_83_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_83_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_83_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_83_WIDTH { PARAM_VALUE.C_INPUT_FIFO_83_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_83_WIDTH { PARAM_VALUE.C_INPUT_FIFO_83_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_84_DEPTH { PARAM_VALUE.C_INPUT_FIFO_84_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_84_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_84_DEPTH { PARAM_VALUE.C_INPUT_FIFO_84_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_84_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_84_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_84_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_84_WIDTH { PARAM_VALUE.C_INPUT_FIFO_84_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_84_WIDTH { PARAM_VALUE.C_INPUT_FIFO_84_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_85_DEPTH { PARAM_VALUE.C_INPUT_FIFO_85_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_85_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_85_DEPTH { PARAM_VALUE.C_INPUT_FIFO_85_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_85_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_85_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_85_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_85_WIDTH { PARAM_VALUE.C_INPUT_FIFO_85_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_85_WIDTH { PARAM_VALUE.C_INPUT_FIFO_85_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_86_DEPTH { PARAM_VALUE.C_INPUT_FIFO_86_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_86_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_86_DEPTH { PARAM_VALUE.C_INPUT_FIFO_86_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_86_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_86_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_86_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_86_WIDTH { PARAM_VALUE.C_INPUT_FIFO_86_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_86_WIDTH { PARAM_VALUE.C_INPUT_FIFO_86_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_87_DEPTH { PARAM_VALUE.C_INPUT_FIFO_87_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_87_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_87_DEPTH { PARAM_VALUE.C_INPUT_FIFO_87_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_87_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_87_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_87_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_87_WIDTH { PARAM_VALUE.C_INPUT_FIFO_87_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_87_WIDTH { PARAM_VALUE.C_INPUT_FIFO_87_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_88_DEPTH { PARAM_VALUE.C_INPUT_FIFO_88_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_88_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_88_DEPTH { PARAM_VALUE.C_INPUT_FIFO_88_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_88_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_88_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_88_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_88_WIDTH { PARAM_VALUE.C_INPUT_FIFO_88_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_88_WIDTH { PARAM_VALUE.C_INPUT_FIFO_88_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_89_DEPTH { PARAM_VALUE.C_INPUT_FIFO_89_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_89_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_89_DEPTH { PARAM_VALUE.C_INPUT_FIFO_89_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_89_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_89_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_89_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_89_WIDTH { PARAM_VALUE.C_INPUT_FIFO_89_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_89_WIDTH { PARAM_VALUE.C_INPUT_FIFO_89_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_8_DEPTH { PARAM_VALUE.C_INPUT_FIFO_8_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_8_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_8_DEPTH { PARAM_VALUE.C_INPUT_FIFO_8_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_8_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_8_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_8_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_8_WIDTH { PARAM_VALUE.C_INPUT_FIFO_8_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_8_WIDTH { PARAM_VALUE.C_INPUT_FIFO_8_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_90_DEPTH { PARAM_VALUE.C_INPUT_FIFO_90_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_90_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_90_DEPTH { PARAM_VALUE.C_INPUT_FIFO_90_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_90_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_90_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_90_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_90_WIDTH { PARAM_VALUE.C_INPUT_FIFO_90_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_90_WIDTH { PARAM_VALUE.C_INPUT_FIFO_90_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_91_DEPTH { PARAM_VALUE.C_INPUT_FIFO_91_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_91_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_91_DEPTH { PARAM_VALUE.C_INPUT_FIFO_91_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_91_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_91_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_91_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_91_WIDTH { PARAM_VALUE.C_INPUT_FIFO_91_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_91_WIDTH { PARAM_VALUE.C_INPUT_FIFO_91_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_92_DEPTH { PARAM_VALUE.C_INPUT_FIFO_92_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_92_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_92_DEPTH { PARAM_VALUE.C_INPUT_FIFO_92_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_92_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_92_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_92_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_92_WIDTH { PARAM_VALUE.C_INPUT_FIFO_92_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_92_WIDTH { PARAM_VALUE.C_INPUT_FIFO_92_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_93_DEPTH { PARAM_VALUE.C_INPUT_FIFO_93_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_93_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_93_DEPTH { PARAM_VALUE.C_INPUT_FIFO_93_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_93_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_93_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_93_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_93_WIDTH { PARAM_VALUE.C_INPUT_FIFO_93_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_93_WIDTH { PARAM_VALUE.C_INPUT_FIFO_93_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_94_DEPTH { PARAM_VALUE.C_INPUT_FIFO_94_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_94_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_94_DEPTH { PARAM_VALUE.C_INPUT_FIFO_94_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_94_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_94_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_94_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_94_WIDTH { PARAM_VALUE.C_INPUT_FIFO_94_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_94_WIDTH { PARAM_VALUE.C_INPUT_FIFO_94_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_95_DEPTH { PARAM_VALUE.C_INPUT_FIFO_95_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_95_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_95_DEPTH { PARAM_VALUE.C_INPUT_FIFO_95_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_95_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_95_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_95_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_95_WIDTH { PARAM_VALUE.C_INPUT_FIFO_95_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_95_WIDTH { PARAM_VALUE.C_INPUT_FIFO_95_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_96_DEPTH { PARAM_VALUE.C_INPUT_FIFO_96_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_96_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_96_DEPTH { PARAM_VALUE.C_INPUT_FIFO_96_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_96_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_96_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_96_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_96_WIDTH { PARAM_VALUE.C_INPUT_FIFO_96_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_96_WIDTH { PARAM_VALUE.C_INPUT_FIFO_96_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_97_DEPTH { PARAM_VALUE.C_INPUT_FIFO_97_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_97_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_97_DEPTH { PARAM_VALUE.C_INPUT_FIFO_97_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_97_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_97_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_97_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_97_WIDTH { PARAM_VALUE.C_INPUT_FIFO_97_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_97_WIDTH { PARAM_VALUE.C_INPUT_FIFO_97_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_98_DEPTH { PARAM_VALUE.C_INPUT_FIFO_98_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_98_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_98_DEPTH { PARAM_VALUE.C_INPUT_FIFO_98_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_98_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_98_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_98_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_98_WIDTH { PARAM_VALUE.C_INPUT_FIFO_98_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_98_WIDTH { PARAM_VALUE.C_INPUT_FIFO_98_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_99_DEPTH { PARAM_VALUE.C_INPUT_FIFO_99_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_99_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_99_DEPTH { PARAM_VALUE.C_INPUT_FIFO_99_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_99_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_99_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_99_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_99_WIDTH { PARAM_VALUE.C_INPUT_FIFO_99_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_99_WIDTH { PARAM_VALUE.C_INPUT_FIFO_99_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_9_DEPTH { PARAM_VALUE.C_INPUT_FIFO_9_DEPTH } {
	# Procedure called to update C_INPUT_FIFO_9_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_9_DEPTH { PARAM_VALUE.C_INPUT_FIFO_9_DEPTH } {
	# Procedure called to validate C_INPUT_FIFO_9_DEPTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH } {
	# Procedure called to update C_INPUT_FIFO_9_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH { PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH } {
	# Procedure called to validate C_INPUT_FIFO_9_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_FIFO_9_WIDTH { PARAM_VALUE.C_INPUT_FIFO_9_WIDTH } {
	# Procedure called to update C_INPUT_FIFO_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_FIFO_9_WIDTH { PARAM_VALUE.C_INPUT_FIFO_9_WIDTH } {
	# Procedure called to validate C_INPUT_FIFO_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH } {
	# Procedure called to update C_INPUT_SCALAR_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH { PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH } {
	# Procedure called to validate C_INPUT_SCALAR_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_NUM_INPUT_BRAMs { PARAM_VALUE.C_NUM_INPUT_BRAMs } {
	# Procedure called to update C_NUM_INPUT_BRAMs when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_NUM_INPUT_BRAMs { PARAM_VALUE.C_NUM_INPUT_BRAMs } {
	# Procedure called to validate C_NUM_INPUT_BRAMs
	return true
}

proc update_PARAM_VALUE.C_NUM_INPUT_FIFOs { PARAM_VALUE.C_NUM_INPUT_FIFOs } {
	# Procedure called to update C_NUM_INPUT_FIFOs when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_NUM_INPUT_FIFOs { PARAM_VALUE.C_NUM_INPUT_FIFOs } {
	# Procedure called to validate C_NUM_INPUT_FIFOs
	return true
}

proc update_PARAM_VALUE.C_NUM_OUTPUT_BRAMs { PARAM_VALUE.C_NUM_OUTPUT_BRAMs } {
	# Procedure called to update C_NUM_OUTPUT_BRAMs when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_NUM_OUTPUT_BRAMs { PARAM_VALUE.C_NUM_OUTPUT_BRAMs } {
	# Procedure called to validate C_NUM_OUTPUT_BRAMs
	return true
}

proc update_PARAM_VALUE.C_NUM_OUTPUT_FIFOs { PARAM_VALUE.C_NUM_OUTPUT_FIFOs } {
	# Procedure called to update C_NUM_OUTPUT_FIFOs when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_NUM_OUTPUT_FIFOs { PARAM_VALUE.C_NUM_OUTPUT_FIFOs } {
	# Procedure called to validate C_NUM_OUTPUT_FIFOs
	return true
}

proc update_PARAM_VALUE.C_N_INPUT_SCALARS { PARAM_VALUE.C_N_INPUT_SCALARS } {
	# Procedure called to update C_N_INPUT_SCALARS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_N_INPUT_SCALARS { PARAM_VALUE.C_N_INPUT_SCALARS } {
	# Procedure called to validate C_N_INPUT_SCALARS
	return true
}

proc update_PARAM_VALUE.C_N_OUTPUT_SCALARS { PARAM_VALUE.C_N_OUTPUT_SCALARS } {
	# Procedure called to update C_N_OUTPUT_SCALARS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_N_OUTPUT_SCALARS { PARAM_VALUE.C_N_OUTPUT_SCALARS } {
	# Procedure called to validate C_N_OUTPUT_SCALARS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_0_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_0_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_0_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_0_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_0_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_0_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_0_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_0_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_0_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_0_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_100_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_100_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_100_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_100_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_100_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_100_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_100_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_100_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_100_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_100_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_101_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_101_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_101_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_101_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_101_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_101_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_101_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_101_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_101_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_101_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_102_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_102_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_102_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_102_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_102_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_102_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_102_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_102_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_102_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_102_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_103_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_103_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_103_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_103_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_103_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_103_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_103_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_103_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_103_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_103_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_104_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_104_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_104_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_104_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_104_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_104_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_104_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_104_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_104_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_104_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_105_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_105_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_105_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_105_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_105_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_105_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_105_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_105_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_105_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_105_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_106_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_106_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_106_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_106_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_106_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_106_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_106_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_106_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_106_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_106_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_107_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_107_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_107_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_107_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_107_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_107_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_107_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_107_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_107_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_107_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_108_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_108_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_108_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_108_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_108_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_108_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_108_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_108_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_108_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_108_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_109_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_109_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_109_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_109_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_109_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_109_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_109_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_109_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_109_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_109_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_10_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_10_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_10_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_10_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_10_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_10_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_10_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_10_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_10_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_10_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_110_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_110_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_110_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_110_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_110_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_110_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_110_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_110_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_110_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_110_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_111_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_111_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_111_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_111_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_111_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_111_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_111_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_111_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_111_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_111_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_112_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_112_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_112_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_112_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_112_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_112_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_112_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_112_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_112_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_112_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_113_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_113_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_113_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_113_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_113_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_113_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_113_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_113_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_113_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_113_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_114_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_114_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_114_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_114_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_114_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_114_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_114_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_114_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_114_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_114_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_115_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_115_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_115_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_115_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_115_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_115_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_115_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_115_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_115_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_115_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_116_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_116_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_116_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_116_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_116_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_116_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_116_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_116_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_116_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_116_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_117_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_117_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_117_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_117_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_117_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_117_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_117_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_117_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_117_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_117_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_118_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_118_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_118_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_118_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_118_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_118_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_118_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_118_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_118_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_118_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_119_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_119_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_119_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_119_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_119_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_119_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_119_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_119_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_119_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_119_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_11_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_11_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_11_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_11_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_11_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_11_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_11_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_11_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_11_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_11_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_120_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_120_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_120_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_120_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_120_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_120_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_120_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_120_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_120_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_120_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_121_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_121_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_121_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_121_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_121_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_121_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_121_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_121_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_121_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_121_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_122_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_122_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_122_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_122_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_122_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_122_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_122_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_122_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_122_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_122_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_123_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_123_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_123_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_123_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_123_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_123_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_123_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_123_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_123_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_123_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_124_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_124_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_124_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_124_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_124_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_124_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_124_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_124_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_124_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_124_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_125_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_125_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_125_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_125_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_125_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_125_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_125_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_125_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_125_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_125_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_126_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_126_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_126_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_126_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_126_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_126_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_126_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_126_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_126_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_126_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_127_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_127_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_127_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_127_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_127_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_127_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_127_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_127_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_127_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_127_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_12_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_12_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_12_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_12_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_12_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_12_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_12_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_12_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_12_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_12_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_13_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_13_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_13_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_13_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_13_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_13_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_13_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_13_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_13_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_13_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_14_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_14_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_14_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_14_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_14_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_14_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_14_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_14_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_14_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_14_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_15_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_15_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_15_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_15_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_15_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_15_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_15_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_15_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_15_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_15_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_16_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_16_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_16_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_16_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_16_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_16_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_16_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_16_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_16_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_16_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_17_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_17_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_17_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_17_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_17_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_17_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_17_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_17_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_17_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_17_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_18_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_18_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_18_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_18_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_18_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_18_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_18_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_18_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_18_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_18_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_19_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_19_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_19_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_19_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_19_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_19_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_19_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_19_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_19_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_19_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_1_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_1_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_1_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_1_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_1_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_1_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_1_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_1_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_1_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_1_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_20_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_20_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_20_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_20_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_20_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_20_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_20_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_20_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_20_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_20_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_21_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_21_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_21_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_21_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_21_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_21_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_21_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_21_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_21_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_21_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_22_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_22_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_22_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_22_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_22_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_22_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_22_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_22_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_22_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_22_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_23_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_23_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_23_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_23_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_23_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_23_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_23_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_23_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_23_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_23_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_24_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_24_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_24_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_24_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_24_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_24_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_24_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_24_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_24_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_24_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_25_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_25_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_25_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_25_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_25_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_25_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_25_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_25_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_25_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_25_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_26_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_26_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_26_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_26_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_26_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_26_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_26_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_26_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_26_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_26_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_27_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_27_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_27_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_27_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_27_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_27_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_27_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_27_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_27_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_27_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_28_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_28_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_28_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_28_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_28_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_28_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_28_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_28_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_28_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_28_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_29_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_29_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_29_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_29_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_29_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_29_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_29_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_29_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_29_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_29_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_2_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_2_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_2_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_2_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_2_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_2_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_2_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_2_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_2_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_2_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_30_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_30_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_30_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_30_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_30_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_30_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_30_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_30_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_30_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_30_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_31_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_31_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_31_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_31_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_31_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_31_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_31_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_31_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_31_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_31_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_32_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_32_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_32_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_32_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_32_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_32_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_32_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_32_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_32_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_32_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_33_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_33_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_33_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_33_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_33_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_33_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_33_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_33_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_33_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_33_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_34_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_34_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_34_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_34_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_34_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_34_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_34_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_34_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_34_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_34_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_35_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_35_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_35_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_35_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_35_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_35_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_35_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_35_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_35_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_35_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_36_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_36_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_36_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_36_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_36_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_36_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_36_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_36_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_36_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_36_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_37_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_37_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_37_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_37_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_37_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_37_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_37_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_37_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_37_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_37_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_38_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_38_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_38_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_38_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_38_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_38_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_38_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_38_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_38_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_38_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_39_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_39_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_39_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_39_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_39_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_39_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_39_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_39_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_39_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_39_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_3_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_3_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_3_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_3_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_3_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_3_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_3_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_3_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_3_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_3_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_40_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_40_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_40_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_40_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_40_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_40_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_40_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_40_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_40_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_40_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_41_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_41_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_41_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_41_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_41_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_41_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_41_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_41_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_41_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_41_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_42_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_42_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_42_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_42_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_42_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_42_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_42_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_42_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_42_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_42_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_43_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_43_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_43_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_43_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_43_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_43_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_43_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_43_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_43_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_43_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_44_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_44_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_44_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_44_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_44_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_44_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_44_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_44_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_44_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_44_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_45_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_45_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_45_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_45_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_45_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_45_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_45_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_45_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_45_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_45_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_46_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_46_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_46_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_46_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_46_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_46_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_46_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_46_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_46_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_46_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_47_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_47_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_47_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_47_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_47_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_47_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_47_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_47_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_47_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_47_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_48_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_48_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_48_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_48_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_48_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_48_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_48_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_48_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_48_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_48_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_49_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_49_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_49_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_49_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_49_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_49_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_49_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_49_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_49_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_49_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_4_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_4_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_4_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_4_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_4_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_4_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_4_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_4_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_4_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_4_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_50_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_50_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_50_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_50_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_50_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_50_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_50_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_50_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_50_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_50_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_51_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_51_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_51_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_51_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_51_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_51_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_51_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_51_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_51_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_51_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_52_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_52_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_52_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_52_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_52_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_52_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_52_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_52_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_52_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_52_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_53_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_53_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_53_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_53_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_53_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_53_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_53_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_53_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_53_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_53_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_54_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_54_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_54_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_54_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_54_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_54_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_54_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_54_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_54_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_54_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_55_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_55_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_55_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_55_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_55_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_55_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_55_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_55_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_55_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_55_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_56_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_56_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_56_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_56_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_56_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_56_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_56_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_56_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_56_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_56_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_57_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_57_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_57_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_57_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_57_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_57_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_57_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_57_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_57_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_57_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_58_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_58_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_58_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_58_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_58_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_58_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_58_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_58_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_58_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_58_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_59_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_59_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_59_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_59_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_59_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_59_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_59_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_59_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_59_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_59_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_5_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_5_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_5_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_5_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_5_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_5_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_5_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_5_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_5_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_5_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_60_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_60_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_60_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_60_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_60_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_60_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_60_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_60_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_60_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_60_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_61_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_61_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_61_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_61_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_61_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_61_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_61_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_61_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_61_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_61_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_62_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_62_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_62_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_62_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_62_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_62_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_62_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_62_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_62_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_62_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_63_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_63_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_63_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_63_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_63_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_63_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_63_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_63_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_63_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_63_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_64_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_64_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_64_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_64_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_64_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_64_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_64_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_64_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_64_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_64_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_65_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_65_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_65_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_65_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_65_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_65_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_65_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_65_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_65_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_65_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_66_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_66_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_66_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_66_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_66_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_66_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_66_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_66_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_66_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_66_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_67_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_67_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_67_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_67_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_67_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_67_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_67_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_67_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_67_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_67_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_68_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_68_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_68_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_68_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_68_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_68_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_68_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_68_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_68_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_68_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_69_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_69_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_69_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_69_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_69_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_69_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_69_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_69_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_69_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_69_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_6_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_6_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_6_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_6_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_6_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_6_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_6_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_6_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_6_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_6_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_70_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_70_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_70_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_70_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_70_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_70_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_70_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_70_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_70_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_70_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_71_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_71_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_71_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_71_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_71_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_71_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_71_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_71_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_71_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_71_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_72_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_72_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_72_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_72_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_72_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_72_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_72_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_72_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_72_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_72_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_73_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_73_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_73_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_73_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_73_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_73_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_73_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_73_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_73_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_73_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_74_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_74_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_74_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_74_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_74_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_74_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_74_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_74_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_74_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_74_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_75_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_75_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_75_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_75_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_75_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_75_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_75_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_75_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_75_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_75_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_76_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_76_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_76_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_76_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_76_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_76_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_76_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_76_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_76_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_76_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_77_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_77_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_77_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_77_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_77_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_77_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_77_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_77_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_77_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_77_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_78_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_78_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_78_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_78_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_78_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_78_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_78_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_78_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_78_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_78_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_79_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_79_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_79_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_79_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_79_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_79_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_79_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_79_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_79_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_79_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_7_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_7_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_7_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_7_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_7_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_7_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_7_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_7_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_7_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_7_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_80_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_80_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_80_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_80_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_80_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_80_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_80_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_80_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_80_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_80_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_81_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_81_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_81_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_81_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_81_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_81_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_81_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_81_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_81_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_81_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_82_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_82_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_82_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_82_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_82_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_82_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_82_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_82_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_82_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_82_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_83_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_83_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_83_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_83_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_83_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_83_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_83_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_83_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_83_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_83_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_84_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_84_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_84_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_84_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_84_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_84_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_84_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_84_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_84_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_84_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_85_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_85_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_85_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_85_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_85_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_85_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_85_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_85_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_85_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_85_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_86_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_86_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_86_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_86_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_86_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_86_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_86_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_86_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_86_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_86_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_87_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_87_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_87_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_87_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_87_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_87_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_87_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_87_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_87_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_87_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_88_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_88_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_88_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_88_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_88_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_88_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_88_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_88_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_88_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_88_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_89_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_89_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_89_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_89_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_89_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_89_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_89_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_89_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_89_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_89_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_8_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_8_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_8_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_8_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_8_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_8_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_8_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_8_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_8_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_8_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_90_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_90_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_90_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_90_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_90_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_90_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_90_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_90_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_90_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_90_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_91_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_91_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_91_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_91_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_91_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_91_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_91_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_91_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_91_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_91_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_92_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_92_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_92_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_92_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_92_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_92_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_92_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_92_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_92_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_92_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_93_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_93_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_93_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_93_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_93_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_93_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_93_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_93_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_93_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_93_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_94_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_94_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_94_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_94_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_94_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_94_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_94_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_94_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_94_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_94_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_95_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_95_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_95_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_95_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_95_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_95_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_95_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_95_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_95_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_95_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_96_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_96_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_96_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_96_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_96_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_96_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_96_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_96_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_96_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_96_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_97_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_97_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_97_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_97_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_97_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_97_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_97_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_97_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_97_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_97_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_98_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_98_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_98_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_98_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_98_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_98_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_98_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_98_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_98_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_98_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_99_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_99_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_99_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_99_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_99_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_99_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_99_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_99_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_99_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_99_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_9_ADDR_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_9_ADDR_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_9_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_9_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_9_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_9_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to update C_OUTPUT_BRAM_9_MB_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH { PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to validate C_OUTPUT_BRAM_9_MB_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS } {
	# Procedure called to update C_OUTPUT_BRAM_9_PORTS when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS { PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS } {
	# Procedure called to validate C_OUTPUT_BRAM_9_PORTS
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH } {
	# Procedure called to update C_OUTPUT_BRAM_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH { PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH } {
	# Procedure called to validate C_OUTPUT_BRAM_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_0_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_0_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_0_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_0_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_100_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_100_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_100_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_100_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_101_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_101_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_101_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_101_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_102_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_102_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_102_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_102_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_103_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_103_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_103_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_103_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_104_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_104_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_104_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_104_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_105_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_105_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_105_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_105_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_106_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_106_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_106_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_106_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_107_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_107_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_107_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_107_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_108_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_108_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_108_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_108_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_109_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_109_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_109_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_109_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_10_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_10_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_10_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_10_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_110_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_110_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_110_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_110_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_111_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_111_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_111_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_111_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_112_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_112_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_112_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_112_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_113_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_113_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_113_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_113_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_114_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_114_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_114_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_114_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_115_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_115_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_115_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_115_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_116_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_116_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_116_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_116_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_117_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_117_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_117_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_117_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_118_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_118_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_118_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_118_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_119_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_119_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_119_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_119_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_11_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_11_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_11_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_11_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_120_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_120_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_120_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_120_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_121_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_121_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_121_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_121_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_122_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_122_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_122_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_122_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_123_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_123_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_123_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_123_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_124_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_124_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_124_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_124_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_125_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_125_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_125_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_125_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_126_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_126_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_126_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_126_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_127_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_127_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_127_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_127_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_12_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_12_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_12_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_12_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_13_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_13_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_13_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_13_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_14_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_14_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_14_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_14_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_15_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_15_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_15_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_15_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_16_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_16_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_16_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_16_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_17_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_17_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_17_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_17_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_18_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_18_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_18_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_18_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_19_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_19_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_19_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_19_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_1_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_1_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_1_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_1_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_20_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_20_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_20_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_20_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_21_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_21_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_21_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_21_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_22_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_22_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_22_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_22_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_23_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_23_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_23_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_23_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_24_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_24_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_24_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_24_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_25_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_25_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_25_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_25_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_26_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_26_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_26_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_26_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_27_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_27_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_27_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_27_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_28_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_28_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_28_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_28_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_29_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_29_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_29_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_29_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_2_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_2_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_2_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_2_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_30_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_30_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_30_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_30_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_31_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_31_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_31_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_31_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_32_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_32_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_32_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_32_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_33_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_33_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_33_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_33_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_34_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_34_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_34_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_34_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_35_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_35_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_35_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_35_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_36_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_36_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_36_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_36_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_37_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_37_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_37_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_37_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_38_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_38_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_38_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_38_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_39_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_39_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_39_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_39_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_3_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_3_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_3_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_3_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_40_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_40_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_40_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_40_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_41_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_41_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_41_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_41_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_42_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_42_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_42_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_42_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_43_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_43_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_43_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_43_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_44_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_44_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_44_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_44_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_45_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_45_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_45_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_45_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_46_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_46_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_46_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_46_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_47_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_47_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_47_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_47_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_48_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_48_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_48_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_48_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_49_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_49_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_49_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_49_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_4_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_4_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_4_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_4_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_50_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_50_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_50_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_50_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_51_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_51_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_51_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_51_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_52_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_52_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_52_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_52_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_53_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_53_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_53_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_53_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_54_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_54_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_54_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_54_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_55_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_55_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_55_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_55_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_56_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_56_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_56_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_56_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_57_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_57_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_57_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_57_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_58_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_58_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_58_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_58_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_59_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_59_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_59_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_59_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_5_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_5_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_5_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_5_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_60_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_60_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_60_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_60_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_61_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_61_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_61_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_61_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_62_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_62_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_62_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_62_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_63_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_63_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_63_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_63_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_64_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_64_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_64_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_64_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_65_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_65_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_65_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_65_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_66_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_66_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_66_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_66_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_67_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_67_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_67_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_67_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_68_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_68_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_68_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_68_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_69_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_69_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_69_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_69_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_6_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_6_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_6_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_6_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_70_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_70_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_70_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_70_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_71_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_71_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_71_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_71_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_72_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_72_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_72_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_72_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_73_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_73_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_73_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_73_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_74_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_74_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_74_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_74_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_75_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_75_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_75_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_75_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_76_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_76_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_76_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_76_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_77_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_77_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_77_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_77_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_78_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_78_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_78_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_78_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_79_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_79_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_79_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_79_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_7_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_7_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_7_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_7_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_80_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_80_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_80_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_80_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_81_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_81_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_81_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_81_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_82_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_82_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_82_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_82_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_83_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_83_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_83_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_83_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_84_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_84_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_84_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_84_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_85_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_85_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_85_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_85_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_86_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_86_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_86_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_86_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_87_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_87_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_87_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_87_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_88_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_88_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_88_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_88_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_89_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_89_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_89_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_89_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_8_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_8_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_8_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_8_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_90_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_90_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_90_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_90_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_91_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_91_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_91_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_91_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_92_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_92_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_92_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_92_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_93_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_93_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_93_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_93_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_94_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_94_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_94_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_94_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_95_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_95_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_95_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_95_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_96_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_96_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_96_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_96_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_97_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_97_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_97_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_97_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_98_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_98_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_98_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_98_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_99_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_99_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_99_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_99_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH } {
	# Procedure called to update C_OUTPUT_FIFO_9_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH { PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH } {
	# Procedure called to validate C_OUTPUT_FIFO_9_DEPTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_9_DMWIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH { PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_9_DMWIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH } {
	# Procedure called to update C_OUTPUT_FIFO_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH { PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH } {
	# Procedure called to validate C_OUTPUT_FIFO_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_0_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_0_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_100_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_100_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_101_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_101_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_102_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_102_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_103_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_103_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_104_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_104_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_105_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_105_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_106_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_106_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_107_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_107_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_108_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_108_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_109_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_109_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_10_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_10_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_110_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_110_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_111_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_111_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_112_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_112_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_113_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_113_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_114_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_114_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_115_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_115_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_116_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_116_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_117_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_117_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_118_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_118_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_119_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_119_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_11_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_11_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_120_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_120_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_121_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_121_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_122_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_122_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_123_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_123_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_124_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_124_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_125_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_125_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_126_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_126_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_127_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_127_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_12_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_12_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_13_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_13_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_14_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_14_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_15_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_15_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_16_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_16_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_17_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_17_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_18_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_18_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_19_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_19_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_1_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_1_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_20_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_20_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_21_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_21_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_22_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_22_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_23_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_23_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_24_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_24_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_25_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_25_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_26_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_26_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_27_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_27_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_28_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_28_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_29_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_29_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_2_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_2_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_30_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_30_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_31_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_31_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_32_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_32_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_33_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_33_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_34_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_34_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_35_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_35_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_36_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_36_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_37_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_37_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_38_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_38_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_39_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_39_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_3_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_3_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_40_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_40_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_41_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_41_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_42_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_42_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_43_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_43_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_44_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_44_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_45_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_45_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_46_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_46_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_47_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_47_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_48_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_48_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_49_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_49_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_4_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_4_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_50_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_50_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_51_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_51_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_52_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_52_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_53_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_53_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_54_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_54_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_55_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_55_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_56_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_56_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_57_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_57_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_58_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_58_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_59_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_59_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_5_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_5_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_60_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_60_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_61_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_61_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_62_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_62_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_63_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_63_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_64_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_64_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_65_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_65_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_66_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_66_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_67_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_67_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_68_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_68_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_69_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_69_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_6_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_6_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_70_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_70_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_71_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_71_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_72_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_72_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_73_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_73_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_74_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_74_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_75_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_75_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_76_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_76_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_77_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_77_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_78_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_78_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_79_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_79_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_7_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_7_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_80_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_80_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_81_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_81_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_82_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_82_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_83_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_83_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_84_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_84_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_85_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_85_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_86_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_86_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_87_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_87_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_88_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_88_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_89_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_89_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_8_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_8_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_90_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_90_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_91_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_91_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_92_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_92_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_93_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_93_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_94_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_94_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_95_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_95_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_96_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_96_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_97_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_97_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_98_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_98_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_99_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_99_WIDTH
	return true
}

proc update_PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH } {
	# Procedure called to update C_OUTPUT_SCALAR_9_WIDTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH { PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH } {
	# Procedure called to validate C_OUTPUT_SCALAR_9_WIDTH
	return true
}

proc update_PARAM_VALUE.C_QUEUE_DEPTH { PARAM_VALUE.C_QUEUE_DEPTH } {
	# Procedure called to update C_QUEUE_DEPTH when any of the dependent parameters in the arguments change
}

proc validate_PARAM_VALUE.C_QUEUE_DEPTH { PARAM_VALUE.C_QUEUE_DEPTH } {
	# Procedure called to validate C_QUEUE_DEPTH
	return true
}


proc update_MODELPARAM_VALUE.C_ACC_RESET_POLARITY { MODELPARAM_VALUE.C_ACC_RESET_POLARITY PARAM_VALUE.C_ACC_RESET_POLARITY } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_ACC_RESET_POLARITY}] ${MODELPARAM_VALUE.C_ACC_RESET_POLARITY}
}

proc update_MODELPARAM_VALUE.C_QUEUE_DEPTH { MODELPARAM_VALUE.C_QUEUE_DEPTH PARAM_VALUE.C_QUEUE_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_QUEUE_DEPTH}] ${MODELPARAM_VALUE.C_QUEUE_DEPTH}
}

proc update_MODELPARAM_VALUE.C_N_INPUT_SCALARS { MODELPARAM_VALUE.C_N_INPUT_SCALARS PARAM_VALUE.C_N_INPUT_SCALARS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_N_INPUT_SCALARS}] ${MODELPARAM_VALUE.C_N_INPUT_SCALARS}
}

proc update_MODELPARAM_VALUE.C_N_OUTPUT_SCALARS { MODELPARAM_VALUE.C_N_OUTPUT_SCALARS PARAM_VALUE.C_N_OUTPUT_SCALARS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_N_OUTPUT_SCALARS}] ${MODELPARAM_VALUE.C_N_OUTPUT_SCALARS}
}

proc update_MODELPARAM_VALUE.C_FIFO_DEPTH { MODELPARAM_VALUE.C_FIFO_DEPTH PARAM_VALUE.C_FIFO_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_FIFO_DEPTH}] ${MODELPARAM_VALUE.C_FIFO_DEPTH}
}

proc update_MODELPARAM_VALUE.C_HAS_RETURN { MODELPARAM_VALUE.C_HAS_RETURN PARAM_VALUE.C_HAS_RETURN } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_HAS_RETURN}] ${MODELPARAM_VALUE.C_HAS_RETURN}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_0_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_0_WIDTH PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_0_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_1_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_1_WIDTH PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_1_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_2_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_2_WIDTH PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_2_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_3_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_3_WIDTH PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_3_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_4_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_4_WIDTH PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_4_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_5_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_5_WIDTH PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_5_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_6_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_6_WIDTH PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_6_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_7_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_7_WIDTH PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_7_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_8_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_8_WIDTH PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_8_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_9_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_9_WIDTH PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_9_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_10_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_10_WIDTH PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_10_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_11_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_11_WIDTH PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_11_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_12_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_12_WIDTH PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_12_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_13_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_13_WIDTH PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_13_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_14_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_14_WIDTH PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_14_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_15_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_15_WIDTH PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_15_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_16_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_16_WIDTH PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_16_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_17_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_17_WIDTH PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_17_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_18_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_18_WIDTH PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_18_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_19_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_19_WIDTH PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_19_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_20_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_20_WIDTH PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_20_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_21_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_21_WIDTH PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_21_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_22_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_22_WIDTH PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_22_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_23_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_23_WIDTH PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_23_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_24_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_24_WIDTH PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_24_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_25_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_25_WIDTH PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_25_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_26_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_26_WIDTH PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_26_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_27_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_27_WIDTH PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_27_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_28_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_28_WIDTH PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_28_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_29_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_29_WIDTH PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_29_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_30_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_30_WIDTH PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_30_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_31_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_31_WIDTH PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_31_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_32_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_32_WIDTH PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_32_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_33_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_33_WIDTH PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_33_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_34_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_34_WIDTH PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_34_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_35_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_35_WIDTH PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_35_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_36_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_36_WIDTH PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_36_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_37_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_37_WIDTH PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_37_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_38_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_38_WIDTH PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_38_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_39_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_39_WIDTH PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_39_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_40_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_40_WIDTH PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_40_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_41_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_41_WIDTH PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_41_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_42_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_42_WIDTH PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_42_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_43_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_43_WIDTH PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_43_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_44_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_44_WIDTH PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_44_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_45_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_45_WIDTH PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_45_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_46_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_46_WIDTH PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_46_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_47_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_47_WIDTH PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_47_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_48_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_48_WIDTH PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_48_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_49_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_49_WIDTH PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_49_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_50_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_50_WIDTH PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_50_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_51_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_51_WIDTH PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_51_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_52_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_52_WIDTH PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_52_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_53_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_53_WIDTH PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_53_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_54_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_54_WIDTH PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_54_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_55_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_55_WIDTH PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_55_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_56_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_56_WIDTH PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_56_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_57_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_57_WIDTH PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_57_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_58_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_58_WIDTH PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_58_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_59_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_59_WIDTH PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_59_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_60_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_60_WIDTH PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_60_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_61_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_61_WIDTH PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_61_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_62_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_62_WIDTH PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_62_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_63_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_63_WIDTH PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_63_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_64_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_64_WIDTH PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_64_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_65_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_65_WIDTH PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_65_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_66_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_66_WIDTH PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_66_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_67_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_67_WIDTH PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_67_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_68_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_68_WIDTH PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_68_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_69_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_69_WIDTH PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_69_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_70_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_70_WIDTH PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_70_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_71_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_71_WIDTH PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_71_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_72_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_72_WIDTH PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_72_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_73_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_73_WIDTH PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_73_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_74_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_74_WIDTH PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_74_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_75_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_75_WIDTH PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_75_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_76_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_76_WIDTH PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_76_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_77_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_77_WIDTH PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_77_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_78_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_78_WIDTH PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_78_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_79_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_79_WIDTH PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_79_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_80_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_80_WIDTH PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_80_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_81_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_81_WIDTH PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_81_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_82_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_82_WIDTH PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_82_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_83_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_83_WIDTH PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_83_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_84_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_84_WIDTH PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_84_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_85_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_85_WIDTH PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_85_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_86_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_86_WIDTH PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_86_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_87_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_87_WIDTH PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_87_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_88_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_88_WIDTH PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_88_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_89_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_89_WIDTH PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_89_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_90_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_90_WIDTH PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_90_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_91_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_91_WIDTH PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_91_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_92_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_92_WIDTH PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_92_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_93_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_93_WIDTH PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_93_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_94_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_94_WIDTH PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_94_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_95_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_95_WIDTH PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_95_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_96_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_96_WIDTH PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_96_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_97_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_97_WIDTH PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_97_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_98_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_98_WIDTH PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_98_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_99_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_99_WIDTH PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_99_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_100_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_100_WIDTH PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_100_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_101_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_101_WIDTH PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_101_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_102_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_102_WIDTH PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_102_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_103_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_103_WIDTH PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_103_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_104_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_104_WIDTH PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_104_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_105_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_105_WIDTH PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_105_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_106_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_106_WIDTH PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_106_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_107_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_107_WIDTH PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_107_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_108_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_108_WIDTH PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_108_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_109_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_109_WIDTH PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_109_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_110_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_110_WIDTH PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_110_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_111_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_111_WIDTH PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_111_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_112_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_112_WIDTH PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_112_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_113_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_113_WIDTH PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_113_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_114_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_114_WIDTH PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_114_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_115_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_115_WIDTH PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_115_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_116_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_116_WIDTH PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_116_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_117_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_117_WIDTH PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_117_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_118_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_118_WIDTH PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_118_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_119_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_119_WIDTH PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_119_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_120_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_120_WIDTH PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_120_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_121_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_121_WIDTH PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_121_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_122_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_122_WIDTH PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_122_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_123_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_123_WIDTH PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_123_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_124_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_124_WIDTH PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_124_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_125_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_125_WIDTH PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_125_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_126_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_126_WIDTH PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_126_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_SCALAR_127_WIDTH { MODELPARAM_VALUE.C_INPUT_SCALAR_127_WIDTH PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_SCALAR_127_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_SCALAR_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH { MODELPARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_SCALAR_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_NUM_INPUT_FIFOs { MODELPARAM_VALUE.C_NUM_INPUT_FIFOs PARAM_VALUE.C_NUM_INPUT_FIFOs } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_NUM_INPUT_FIFOs}] ${MODELPARAM_VALUE.C_NUM_INPUT_FIFOs}
}

proc update_MODELPARAM_VALUE.C_NUM_OUTPUT_FIFOs { MODELPARAM_VALUE.C_NUM_OUTPUT_FIFOs PARAM_VALUE.C_NUM_OUTPUT_FIFOs } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_NUM_OUTPUT_FIFOs}] ${MODELPARAM_VALUE.C_NUM_OUTPUT_FIFOs}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_0_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_0_WIDTH PARAM_VALUE.C_INPUT_FIFO_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_0_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_1_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_1_WIDTH PARAM_VALUE.C_INPUT_FIFO_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_1_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_2_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_2_WIDTH PARAM_VALUE.C_INPUT_FIFO_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_2_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_3_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_3_WIDTH PARAM_VALUE.C_INPUT_FIFO_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_3_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_4_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_4_WIDTH PARAM_VALUE.C_INPUT_FIFO_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_4_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_5_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_5_WIDTH PARAM_VALUE.C_INPUT_FIFO_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_5_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_6_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_6_WIDTH PARAM_VALUE.C_INPUT_FIFO_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_6_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_7_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_7_WIDTH PARAM_VALUE.C_INPUT_FIFO_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_7_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_8_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_8_WIDTH PARAM_VALUE.C_INPUT_FIFO_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_8_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_9_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_9_WIDTH PARAM_VALUE.C_INPUT_FIFO_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_9_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_10_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_10_WIDTH PARAM_VALUE.C_INPUT_FIFO_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_10_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_11_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_11_WIDTH PARAM_VALUE.C_INPUT_FIFO_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_11_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_12_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_12_WIDTH PARAM_VALUE.C_INPUT_FIFO_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_12_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_13_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_13_WIDTH PARAM_VALUE.C_INPUT_FIFO_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_13_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_14_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_14_WIDTH PARAM_VALUE.C_INPUT_FIFO_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_14_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_15_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_15_WIDTH PARAM_VALUE.C_INPUT_FIFO_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_15_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_16_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_16_WIDTH PARAM_VALUE.C_INPUT_FIFO_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_16_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_17_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_17_WIDTH PARAM_VALUE.C_INPUT_FIFO_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_17_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_18_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_18_WIDTH PARAM_VALUE.C_INPUT_FIFO_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_18_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_19_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_19_WIDTH PARAM_VALUE.C_INPUT_FIFO_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_19_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_20_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_20_WIDTH PARAM_VALUE.C_INPUT_FIFO_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_20_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_21_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_21_WIDTH PARAM_VALUE.C_INPUT_FIFO_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_21_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_22_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_22_WIDTH PARAM_VALUE.C_INPUT_FIFO_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_22_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_23_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_23_WIDTH PARAM_VALUE.C_INPUT_FIFO_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_23_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_24_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_24_WIDTH PARAM_VALUE.C_INPUT_FIFO_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_24_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_25_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_25_WIDTH PARAM_VALUE.C_INPUT_FIFO_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_25_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_26_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_26_WIDTH PARAM_VALUE.C_INPUT_FIFO_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_26_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_27_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_27_WIDTH PARAM_VALUE.C_INPUT_FIFO_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_27_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_28_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_28_WIDTH PARAM_VALUE.C_INPUT_FIFO_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_28_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_29_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_29_WIDTH PARAM_VALUE.C_INPUT_FIFO_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_29_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_30_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_30_WIDTH PARAM_VALUE.C_INPUT_FIFO_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_30_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_31_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_31_WIDTH PARAM_VALUE.C_INPUT_FIFO_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_31_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_32_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_32_WIDTH PARAM_VALUE.C_INPUT_FIFO_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_32_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_33_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_33_WIDTH PARAM_VALUE.C_INPUT_FIFO_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_33_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_34_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_34_WIDTH PARAM_VALUE.C_INPUT_FIFO_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_34_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_35_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_35_WIDTH PARAM_VALUE.C_INPUT_FIFO_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_35_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_36_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_36_WIDTH PARAM_VALUE.C_INPUT_FIFO_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_36_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_37_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_37_WIDTH PARAM_VALUE.C_INPUT_FIFO_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_37_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_38_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_38_WIDTH PARAM_VALUE.C_INPUT_FIFO_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_38_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_39_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_39_WIDTH PARAM_VALUE.C_INPUT_FIFO_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_39_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_40_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_40_WIDTH PARAM_VALUE.C_INPUT_FIFO_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_40_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_41_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_41_WIDTH PARAM_VALUE.C_INPUT_FIFO_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_41_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_42_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_42_WIDTH PARAM_VALUE.C_INPUT_FIFO_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_42_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_43_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_43_WIDTH PARAM_VALUE.C_INPUT_FIFO_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_43_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_44_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_44_WIDTH PARAM_VALUE.C_INPUT_FIFO_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_44_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_45_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_45_WIDTH PARAM_VALUE.C_INPUT_FIFO_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_45_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_46_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_46_WIDTH PARAM_VALUE.C_INPUT_FIFO_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_46_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_47_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_47_WIDTH PARAM_VALUE.C_INPUT_FIFO_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_47_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_48_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_48_WIDTH PARAM_VALUE.C_INPUT_FIFO_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_48_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_49_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_49_WIDTH PARAM_VALUE.C_INPUT_FIFO_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_49_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_50_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_50_WIDTH PARAM_VALUE.C_INPUT_FIFO_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_50_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_51_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_51_WIDTH PARAM_VALUE.C_INPUT_FIFO_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_51_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_52_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_52_WIDTH PARAM_VALUE.C_INPUT_FIFO_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_52_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_53_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_53_WIDTH PARAM_VALUE.C_INPUT_FIFO_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_53_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_54_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_54_WIDTH PARAM_VALUE.C_INPUT_FIFO_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_54_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_55_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_55_WIDTH PARAM_VALUE.C_INPUT_FIFO_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_55_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_56_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_56_WIDTH PARAM_VALUE.C_INPUT_FIFO_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_56_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_57_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_57_WIDTH PARAM_VALUE.C_INPUT_FIFO_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_57_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_58_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_58_WIDTH PARAM_VALUE.C_INPUT_FIFO_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_58_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_59_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_59_WIDTH PARAM_VALUE.C_INPUT_FIFO_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_59_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_60_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_60_WIDTH PARAM_VALUE.C_INPUT_FIFO_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_60_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_61_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_61_WIDTH PARAM_VALUE.C_INPUT_FIFO_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_61_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_62_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_62_WIDTH PARAM_VALUE.C_INPUT_FIFO_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_62_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_63_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_63_WIDTH PARAM_VALUE.C_INPUT_FIFO_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_63_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_64_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_64_WIDTH PARAM_VALUE.C_INPUT_FIFO_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_64_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_65_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_65_WIDTH PARAM_VALUE.C_INPUT_FIFO_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_65_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_66_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_66_WIDTH PARAM_VALUE.C_INPUT_FIFO_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_66_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_67_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_67_WIDTH PARAM_VALUE.C_INPUT_FIFO_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_67_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_68_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_68_WIDTH PARAM_VALUE.C_INPUT_FIFO_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_68_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_69_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_69_WIDTH PARAM_VALUE.C_INPUT_FIFO_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_69_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_70_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_70_WIDTH PARAM_VALUE.C_INPUT_FIFO_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_70_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_71_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_71_WIDTH PARAM_VALUE.C_INPUT_FIFO_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_71_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_72_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_72_WIDTH PARAM_VALUE.C_INPUT_FIFO_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_72_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_73_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_73_WIDTH PARAM_VALUE.C_INPUT_FIFO_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_73_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_74_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_74_WIDTH PARAM_VALUE.C_INPUT_FIFO_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_74_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_75_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_75_WIDTH PARAM_VALUE.C_INPUT_FIFO_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_75_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_76_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_76_WIDTH PARAM_VALUE.C_INPUT_FIFO_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_76_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_77_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_77_WIDTH PARAM_VALUE.C_INPUT_FIFO_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_77_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_78_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_78_WIDTH PARAM_VALUE.C_INPUT_FIFO_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_78_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_79_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_79_WIDTH PARAM_VALUE.C_INPUT_FIFO_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_79_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_80_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_80_WIDTH PARAM_VALUE.C_INPUT_FIFO_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_80_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_81_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_81_WIDTH PARAM_VALUE.C_INPUT_FIFO_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_81_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_82_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_82_WIDTH PARAM_VALUE.C_INPUT_FIFO_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_82_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_83_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_83_WIDTH PARAM_VALUE.C_INPUT_FIFO_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_83_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_84_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_84_WIDTH PARAM_VALUE.C_INPUT_FIFO_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_84_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_85_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_85_WIDTH PARAM_VALUE.C_INPUT_FIFO_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_85_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_86_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_86_WIDTH PARAM_VALUE.C_INPUT_FIFO_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_86_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_87_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_87_WIDTH PARAM_VALUE.C_INPUT_FIFO_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_87_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_88_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_88_WIDTH PARAM_VALUE.C_INPUT_FIFO_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_88_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_89_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_89_WIDTH PARAM_VALUE.C_INPUT_FIFO_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_89_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_90_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_90_WIDTH PARAM_VALUE.C_INPUT_FIFO_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_90_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_91_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_91_WIDTH PARAM_VALUE.C_INPUT_FIFO_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_91_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_92_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_92_WIDTH PARAM_VALUE.C_INPUT_FIFO_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_92_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_93_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_93_WIDTH PARAM_VALUE.C_INPUT_FIFO_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_93_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_94_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_94_WIDTH PARAM_VALUE.C_INPUT_FIFO_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_94_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_95_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_95_WIDTH PARAM_VALUE.C_INPUT_FIFO_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_95_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_96_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_96_WIDTH PARAM_VALUE.C_INPUT_FIFO_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_96_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_97_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_97_WIDTH PARAM_VALUE.C_INPUT_FIFO_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_97_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_98_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_98_WIDTH PARAM_VALUE.C_INPUT_FIFO_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_98_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_99_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_99_WIDTH PARAM_VALUE.C_INPUT_FIFO_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_99_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_100_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_100_WIDTH PARAM_VALUE.C_INPUT_FIFO_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_100_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_101_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_101_WIDTH PARAM_VALUE.C_INPUT_FIFO_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_101_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_102_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_102_WIDTH PARAM_VALUE.C_INPUT_FIFO_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_102_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_103_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_103_WIDTH PARAM_VALUE.C_INPUT_FIFO_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_103_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_104_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_104_WIDTH PARAM_VALUE.C_INPUT_FIFO_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_104_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_105_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_105_WIDTH PARAM_VALUE.C_INPUT_FIFO_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_105_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_106_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_106_WIDTH PARAM_VALUE.C_INPUT_FIFO_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_106_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_107_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_107_WIDTH PARAM_VALUE.C_INPUT_FIFO_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_107_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_108_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_108_WIDTH PARAM_VALUE.C_INPUT_FIFO_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_108_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_109_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_109_WIDTH PARAM_VALUE.C_INPUT_FIFO_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_109_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_110_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_110_WIDTH PARAM_VALUE.C_INPUT_FIFO_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_110_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_111_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_111_WIDTH PARAM_VALUE.C_INPUT_FIFO_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_111_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_112_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_112_WIDTH PARAM_VALUE.C_INPUT_FIFO_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_112_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_113_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_113_WIDTH PARAM_VALUE.C_INPUT_FIFO_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_113_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_114_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_114_WIDTH PARAM_VALUE.C_INPUT_FIFO_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_114_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_115_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_115_WIDTH PARAM_VALUE.C_INPUT_FIFO_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_115_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_116_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_116_WIDTH PARAM_VALUE.C_INPUT_FIFO_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_116_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_117_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_117_WIDTH PARAM_VALUE.C_INPUT_FIFO_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_117_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_118_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_118_WIDTH PARAM_VALUE.C_INPUT_FIFO_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_118_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_119_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_119_WIDTH PARAM_VALUE.C_INPUT_FIFO_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_119_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_120_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_120_WIDTH PARAM_VALUE.C_INPUT_FIFO_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_120_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_121_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_121_WIDTH PARAM_VALUE.C_INPUT_FIFO_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_121_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_122_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_122_WIDTH PARAM_VALUE.C_INPUT_FIFO_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_122_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_123_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_123_WIDTH PARAM_VALUE.C_INPUT_FIFO_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_123_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_124_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_124_WIDTH PARAM_VALUE.C_INPUT_FIFO_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_124_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_125_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_125_WIDTH PARAM_VALUE.C_INPUT_FIFO_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_125_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_126_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_126_WIDTH PARAM_VALUE.C_INPUT_FIFO_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_126_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_127_WIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_127_WIDTH PARAM_VALUE.C_INPUT_FIFO_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_127_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_0_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_0_DEPTH PARAM_VALUE.C_INPUT_FIFO_0_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_0_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_0_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_1_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_1_DEPTH PARAM_VALUE.C_INPUT_FIFO_1_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_1_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_1_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_2_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_2_DEPTH PARAM_VALUE.C_INPUT_FIFO_2_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_2_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_2_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_3_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_3_DEPTH PARAM_VALUE.C_INPUT_FIFO_3_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_3_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_3_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_4_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_4_DEPTH PARAM_VALUE.C_INPUT_FIFO_4_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_4_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_4_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_5_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_5_DEPTH PARAM_VALUE.C_INPUT_FIFO_5_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_5_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_5_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_6_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_6_DEPTH PARAM_VALUE.C_INPUT_FIFO_6_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_6_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_6_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_7_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_7_DEPTH PARAM_VALUE.C_INPUT_FIFO_7_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_7_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_7_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_8_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_8_DEPTH PARAM_VALUE.C_INPUT_FIFO_8_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_8_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_8_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_9_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_9_DEPTH PARAM_VALUE.C_INPUT_FIFO_9_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_9_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_9_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_10_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_10_DEPTH PARAM_VALUE.C_INPUT_FIFO_10_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_10_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_10_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_11_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_11_DEPTH PARAM_VALUE.C_INPUT_FIFO_11_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_11_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_11_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_12_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_12_DEPTH PARAM_VALUE.C_INPUT_FIFO_12_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_12_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_12_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_13_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_13_DEPTH PARAM_VALUE.C_INPUT_FIFO_13_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_13_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_13_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_14_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_14_DEPTH PARAM_VALUE.C_INPUT_FIFO_14_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_14_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_14_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_15_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_15_DEPTH PARAM_VALUE.C_INPUT_FIFO_15_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_15_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_15_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_16_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_16_DEPTH PARAM_VALUE.C_INPUT_FIFO_16_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_16_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_16_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_17_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_17_DEPTH PARAM_VALUE.C_INPUT_FIFO_17_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_17_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_17_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_18_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_18_DEPTH PARAM_VALUE.C_INPUT_FIFO_18_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_18_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_18_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_19_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_19_DEPTH PARAM_VALUE.C_INPUT_FIFO_19_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_19_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_19_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_20_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_20_DEPTH PARAM_VALUE.C_INPUT_FIFO_20_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_20_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_20_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_21_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_21_DEPTH PARAM_VALUE.C_INPUT_FIFO_21_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_21_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_21_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_22_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_22_DEPTH PARAM_VALUE.C_INPUT_FIFO_22_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_22_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_22_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_23_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_23_DEPTH PARAM_VALUE.C_INPUT_FIFO_23_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_23_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_23_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_24_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_24_DEPTH PARAM_VALUE.C_INPUT_FIFO_24_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_24_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_24_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_25_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_25_DEPTH PARAM_VALUE.C_INPUT_FIFO_25_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_25_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_25_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_26_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_26_DEPTH PARAM_VALUE.C_INPUT_FIFO_26_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_26_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_26_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_27_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_27_DEPTH PARAM_VALUE.C_INPUT_FIFO_27_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_27_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_27_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_28_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_28_DEPTH PARAM_VALUE.C_INPUT_FIFO_28_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_28_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_28_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_29_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_29_DEPTH PARAM_VALUE.C_INPUT_FIFO_29_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_29_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_29_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_30_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_30_DEPTH PARAM_VALUE.C_INPUT_FIFO_30_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_30_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_30_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_31_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_31_DEPTH PARAM_VALUE.C_INPUT_FIFO_31_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_31_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_31_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_32_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_32_DEPTH PARAM_VALUE.C_INPUT_FIFO_32_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_32_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_32_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_33_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_33_DEPTH PARAM_VALUE.C_INPUT_FIFO_33_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_33_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_33_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_34_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_34_DEPTH PARAM_VALUE.C_INPUT_FIFO_34_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_34_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_34_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_35_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_35_DEPTH PARAM_VALUE.C_INPUT_FIFO_35_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_35_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_35_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_36_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_36_DEPTH PARAM_VALUE.C_INPUT_FIFO_36_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_36_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_36_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_37_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_37_DEPTH PARAM_VALUE.C_INPUT_FIFO_37_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_37_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_37_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_38_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_38_DEPTH PARAM_VALUE.C_INPUT_FIFO_38_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_38_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_38_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_39_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_39_DEPTH PARAM_VALUE.C_INPUT_FIFO_39_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_39_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_39_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_40_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_40_DEPTH PARAM_VALUE.C_INPUT_FIFO_40_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_40_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_40_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_41_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_41_DEPTH PARAM_VALUE.C_INPUT_FIFO_41_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_41_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_41_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_42_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_42_DEPTH PARAM_VALUE.C_INPUT_FIFO_42_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_42_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_42_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_43_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_43_DEPTH PARAM_VALUE.C_INPUT_FIFO_43_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_43_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_43_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_44_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_44_DEPTH PARAM_VALUE.C_INPUT_FIFO_44_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_44_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_44_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_45_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_45_DEPTH PARAM_VALUE.C_INPUT_FIFO_45_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_45_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_45_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_46_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_46_DEPTH PARAM_VALUE.C_INPUT_FIFO_46_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_46_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_46_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_47_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_47_DEPTH PARAM_VALUE.C_INPUT_FIFO_47_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_47_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_47_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_48_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_48_DEPTH PARAM_VALUE.C_INPUT_FIFO_48_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_48_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_48_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_49_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_49_DEPTH PARAM_VALUE.C_INPUT_FIFO_49_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_49_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_49_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_50_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_50_DEPTH PARAM_VALUE.C_INPUT_FIFO_50_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_50_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_50_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_51_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_51_DEPTH PARAM_VALUE.C_INPUT_FIFO_51_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_51_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_51_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_52_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_52_DEPTH PARAM_VALUE.C_INPUT_FIFO_52_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_52_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_52_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_53_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_53_DEPTH PARAM_VALUE.C_INPUT_FIFO_53_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_53_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_53_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_54_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_54_DEPTH PARAM_VALUE.C_INPUT_FIFO_54_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_54_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_54_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_55_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_55_DEPTH PARAM_VALUE.C_INPUT_FIFO_55_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_55_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_55_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_56_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_56_DEPTH PARAM_VALUE.C_INPUT_FIFO_56_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_56_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_56_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_57_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_57_DEPTH PARAM_VALUE.C_INPUT_FIFO_57_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_57_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_57_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_58_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_58_DEPTH PARAM_VALUE.C_INPUT_FIFO_58_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_58_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_58_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_59_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_59_DEPTH PARAM_VALUE.C_INPUT_FIFO_59_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_59_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_59_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_60_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_60_DEPTH PARAM_VALUE.C_INPUT_FIFO_60_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_60_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_60_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_61_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_61_DEPTH PARAM_VALUE.C_INPUT_FIFO_61_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_61_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_61_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_62_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_62_DEPTH PARAM_VALUE.C_INPUT_FIFO_62_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_62_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_62_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_63_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_63_DEPTH PARAM_VALUE.C_INPUT_FIFO_63_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_63_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_63_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_64_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_64_DEPTH PARAM_VALUE.C_INPUT_FIFO_64_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_64_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_64_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_65_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_65_DEPTH PARAM_VALUE.C_INPUT_FIFO_65_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_65_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_65_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_66_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_66_DEPTH PARAM_VALUE.C_INPUT_FIFO_66_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_66_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_66_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_67_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_67_DEPTH PARAM_VALUE.C_INPUT_FIFO_67_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_67_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_67_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_68_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_68_DEPTH PARAM_VALUE.C_INPUT_FIFO_68_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_68_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_68_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_69_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_69_DEPTH PARAM_VALUE.C_INPUT_FIFO_69_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_69_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_69_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_70_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_70_DEPTH PARAM_VALUE.C_INPUT_FIFO_70_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_70_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_70_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_71_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_71_DEPTH PARAM_VALUE.C_INPUT_FIFO_71_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_71_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_71_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_72_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_72_DEPTH PARAM_VALUE.C_INPUT_FIFO_72_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_72_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_72_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_73_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_73_DEPTH PARAM_VALUE.C_INPUT_FIFO_73_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_73_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_73_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_74_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_74_DEPTH PARAM_VALUE.C_INPUT_FIFO_74_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_74_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_74_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_75_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_75_DEPTH PARAM_VALUE.C_INPUT_FIFO_75_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_75_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_75_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_76_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_76_DEPTH PARAM_VALUE.C_INPUT_FIFO_76_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_76_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_76_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_77_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_77_DEPTH PARAM_VALUE.C_INPUT_FIFO_77_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_77_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_77_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_78_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_78_DEPTH PARAM_VALUE.C_INPUT_FIFO_78_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_78_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_78_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_79_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_79_DEPTH PARAM_VALUE.C_INPUT_FIFO_79_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_79_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_79_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_80_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_80_DEPTH PARAM_VALUE.C_INPUT_FIFO_80_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_80_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_80_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_81_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_81_DEPTH PARAM_VALUE.C_INPUT_FIFO_81_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_81_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_81_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_82_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_82_DEPTH PARAM_VALUE.C_INPUT_FIFO_82_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_82_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_82_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_83_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_83_DEPTH PARAM_VALUE.C_INPUT_FIFO_83_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_83_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_83_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_84_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_84_DEPTH PARAM_VALUE.C_INPUT_FIFO_84_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_84_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_84_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_85_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_85_DEPTH PARAM_VALUE.C_INPUT_FIFO_85_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_85_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_85_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_86_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_86_DEPTH PARAM_VALUE.C_INPUT_FIFO_86_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_86_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_86_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_87_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_87_DEPTH PARAM_VALUE.C_INPUT_FIFO_87_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_87_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_87_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_88_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_88_DEPTH PARAM_VALUE.C_INPUT_FIFO_88_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_88_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_88_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_89_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_89_DEPTH PARAM_VALUE.C_INPUT_FIFO_89_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_89_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_89_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_90_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_90_DEPTH PARAM_VALUE.C_INPUT_FIFO_90_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_90_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_90_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_91_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_91_DEPTH PARAM_VALUE.C_INPUT_FIFO_91_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_91_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_91_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_92_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_92_DEPTH PARAM_VALUE.C_INPUT_FIFO_92_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_92_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_92_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_93_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_93_DEPTH PARAM_VALUE.C_INPUT_FIFO_93_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_93_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_93_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_94_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_94_DEPTH PARAM_VALUE.C_INPUT_FIFO_94_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_94_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_94_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_95_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_95_DEPTH PARAM_VALUE.C_INPUT_FIFO_95_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_95_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_95_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_96_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_96_DEPTH PARAM_VALUE.C_INPUT_FIFO_96_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_96_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_96_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_97_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_97_DEPTH PARAM_VALUE.C_INPUT_FIFO_97_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_97_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_97_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_98_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_98_DEPTH PARAM_VALUE.C_INPUT_FIFO_98_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_98_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_98_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_99_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_99_DEPTH PARAM_VALUE.C_INPUT_FIFO_99_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_99_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_99_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_100_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_100_DEPTH PARAM_VALUE.C_INPUT_FIFO_100_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_100_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_100_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_101_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_101_DEPTH PARAM_VALUE.C_INPUT_FIFO_101_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_101_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_101_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_102_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_102_DEPTH PARAM_VALUE.C_INPUT_FIFO_102_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_102_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_102_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_103_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_103_DEPTH PARAM_VALUE.C_INPUT_FIFO_103_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_103_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_103_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_104_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_104_DEPTH PARAM_VALUE.C_INPUT_FIFO_104_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_104_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_104_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_105_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_105_DEPTH PARAM_VALUE.C_INPUT_FIFO_105_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_105_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_105_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_106_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_106_DEPTH PARAM_VALUE.C_INPUT_FIFO_106_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_106_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_106_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_107_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_107_DEPTH PARAM_VALUE.C_INPUT_FIFO_107_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_107_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_107_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_108_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_108_DEPTH PARAM_VALUE.C_INPUT_FIFO_108_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_108_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_108_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_109_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_109_DEPTH PARAM_VALUE.C_INPUT_FIFO_109_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_109_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_109_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_110_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_110_DEPTH PARAM_VALUE.C_INPUT_FIFO_110_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_110_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_110_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_111_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_111_DEPTH PARAM_VALUE.C_INPUT_FIFO_111_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_111_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_111_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_112_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_112_DEPTH PARAM_VALUE.C_INPUT_FIFO_112_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_112_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_112_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_113_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_113_DEPTH PARAM_VALUE.C_INPUT_FIFO_113_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_113_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_113_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_114_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_114_DEPTH PARAM_VALUE.C_INPUT_FIFO_114_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_114_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_114_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_115_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_115_DEPTH PARAM_VALUE.C_INPUT_FIFO_115_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_115_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_115_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_116_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_116_DEPTH PARAM_VALUE.C_INPUT_FIFO_116_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_116_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_116_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_117_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_117_DEPTH PARAM_VALUE.C_INPUT_FIFO_117_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_117_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_117_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_118_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_118_DEPTH PARAM_VALUE.C_INPUT_FIFO_118_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_118_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_118_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_119_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_119_DEPTH PARAM_VALUE.C_INPUT_FIFO_119_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_119_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_119_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_120_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_120_DEPTH PARAM_VALUE.C_INPUT_FIFO_120_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_120_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_120_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_121_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_121_DEPTH PARAM_VALUE.C_INPUT_FIFO_121_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_121_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_121_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_122_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_122_DEPTH PARAM_VALUE.C_INPUT_FIFO_122_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_122_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_122_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_123_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_123_DEPTH PARAM_VALUE.C_INPUT_FIFO_123_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_123_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_123_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_124_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_124_DEPTH PARAM_VALUE.C_INPUT_FIFO_124_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_124_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_124_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_125_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_125_DEPTH PARAM_VALUE.C_INPUT_FIFO_125_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_125_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_125_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_126_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_126_DEPTH PARAM_VALUE.C_INPUT_FIFO_126_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_126_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_126_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_127_DEPTH { MODELPARAM_VALUE.C_INPUT_FIFO_127_DEPTH PARAM_VALUE.C_INPUT_FIFO_127_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_127_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_127_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_0_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_1_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_2_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_3_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_4_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_5_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_6_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_7_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_8_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_9_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_10_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_11_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_12_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_13_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_14_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_15_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_16_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_17_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_18_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_19_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_20_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_21_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_22_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_23_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_24_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_25_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_26_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_27_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_28_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_29_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_30_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_31_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_32_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_33_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_34_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_35_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_36_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_37_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_38_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_39_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_40_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_41_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_42_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_43_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_44_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_45_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_46_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_47_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_48_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_49_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_50_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_51_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_52_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_53_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_54_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_55_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_56_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_57_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_58_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_59_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_60_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_61_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_62_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_63_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_64_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_65_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_66_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_67_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_68_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_69_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_70_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_71_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_72_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_73_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_74_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_75_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_76_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_77_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_78_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_79_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_80_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_81_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_82_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_83_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_84_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_85_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_86_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_87_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_88_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_89_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_90_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_91_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_92_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_93_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_94_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_95_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_96_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_97_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_98_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_99_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_100_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_101_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_102_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_103_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_104_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_105_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_106_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_107_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_108_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_109_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_110_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_111_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_112_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_113_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_114_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_115_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_116_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_117_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_118_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_119_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_120_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_121_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_122_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_123_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_124_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_125_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_126_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH { MODELPARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_FIFO_127_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_0_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_1_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_2_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_3_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_4_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_5_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_6_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_7_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_8_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_9_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_10_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_11_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_12_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_13_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_14_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_15_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_16_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_17_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_18_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_19_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_20_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_21_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_22_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_23_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_24_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_25_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_26_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_27_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_28_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_29_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_30_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_31_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_32_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_33_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_34_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_35_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_36_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_37_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_38_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_39_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_40_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_41_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_42_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_43_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_44_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_45_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_46_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_47_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_48_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_49_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_50_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_51_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_52_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_53_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_54_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_55_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_56_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_57_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_58_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_59_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_60_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_61_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_62_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_63_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_64_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_65_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_66_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_67_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_68_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_69_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_70_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_71_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_72_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_73_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_74_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_75_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_76_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_77_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_78_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_79_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_80_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_81_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_82_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_83_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_84_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_85_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_86_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_87_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_88_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_89_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_90_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_91_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_92_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_93_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_94_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_95_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_96_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_97_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_98_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_99_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_100_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_101_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_102_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_103_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_104_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_105_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_106_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_107_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_108_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_109_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_110_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_111_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_112_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_113_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_114_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_115_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_116_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_117_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_118_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_119_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_120_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_121_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_122_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_123_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_124_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_125_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_126_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_FIFO_127_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_NUM_INPUT_BRAMs { MODELPARAM_VALUE.C_NUM_INPUT_BRAMs PARAM_VALUE.C_NUM_INPUT_BRAMs } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_NUM_INPUT_BRAMs}] ${MODELPARAM_VALUE.C_NUM_INPUT_BRAMs}
}

proc update_MODELPARAM_VALUE.C_NUM_OUTPUT_BRAMs { MODELPARAM_VALUE.C_NUM_OUTPUT_BRAMs PARAM_VALUE.C_NUM_OUTPUT_BRAMs } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_NUM_OUTPUT_BRAMs}] ${MODELPARAM_VALUE.C_NUM_OUTPUT_BRAMs}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_0_PORTS PARAM_VALUE.C_INPUT_BRAM_0_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_1_PORTS PARAM_VALUE.C_INPUT_BRAM_1_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_2_PORTS PARAM_VALUE.C_INPUT_BRAM_2_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_3_PORTS PARAM_VALUE.C_INPUT_BRAM_3_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_4_PORTS PARAM_VALUE.C_INPUT_BRAM_4_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_5_PORTS PARAM_VALUE.C_INPUT_BRAM_5_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_6_PORTS PARAM_VALUE.C_INPUT_BRAM_6_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_7_PORTS PARAM_VALUE.C_INPUT_BRAM_7_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_8_PORTS PARAM_VALUE.C_INPUT_BRAM_8_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_9_PORTS PARAM_VALUE.C_INPUT_BRAM_9_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_10_PORTS PARAM_VALUE.C_INPUT_BRAM_10_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_11_PORTS PARAM_VALUE.C_INPUT_BRAM_11_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_12_PORTS PARAM_VALUE.C_INPUT_BRAM_12_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_13_PORTS PARAM_VALUE.C_INPUT_BRAM_13_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_14_PORTS PARAM_VALUE.C_INPUT_BRAM_14_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_15_PORTS PARAM_VALUE.C_INPUT_BRAM_15_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_16_PORTS PARAM_VALUE.C_INPUT_BRAM_16_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_17_PORTS PARAM_VALUE.C_INPUT_BRAM_17_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_18_PORTS PARAM_VALUE.C_INPUT_BRAM_18_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_19_PORTS PARAM_VALUE.C_INPUT_BRAM_19_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_20_PORTS PARAM_VALUE.C_INPUT_BRAM_20_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_21_PORTS PARAM_VALUE.C_INPUT_BRAM_21_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_22_PORTS PARAM_VALUE.C_INPUT_BRAM_22_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_23_PORTS PARAM_VALUE.C_INPUT_BRAM_23_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_24_PORTS PARAM_VALUE.C_INPUT_BRAM_24_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_25_PORTS PARAM_VALUE.C_INPUT_BRAM_25_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_26_PORTS PARAM_VALUE.C_INPUT_BRAM_26_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_27_PORTS PARAM_VALUE.C_INPUT_BRAM_27_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_28_PORTS PARAM_VALUE.C_INPUT_BRAM_28_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_29_PORTS PARAM_VALUE.C_INPUT_BRAM_29_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_30_PORTS PARAM_VALUE.C_INPUT_BRAM_30_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_31_PORTS PARAM_VALUE.C_INPUT_BRAM_31_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_32_PORTS PARAM_VALUE.C_INPUT_BRAM_32_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_33_PORTS PARAM_VALUE.C_INPUT_BRAM_33_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_34_PORTS PARAM_VALUE.C_INPUT_BRAM_34_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_35_PORTS PARAM_VALUE.C_INPUT_BRAM_35_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_36_PORTS PARAM_VALUE.C_INPUT_BRAM_36_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_37_PORTS PARAM_VALUE.C_INPUT_BRAM_37_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_38_PORTS PARAM_VALUE.C_INPUT_BRAM_38_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_39_PORTS PARAM_VALUE.C_INPUT_BRAM_39_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_40_PORTS PARAM_VALUE.C_INPUT_BRAM_40_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_41_PORTS PARAM_VALUE.C_INPUT_BRAM_41_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_42_PORTS PARAM_VALUE.C_INPUT_BRAM_42_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_43_PORTS PARAM_VALUE.C_INPUT_BRAM_43_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_44_PORTS PARAM_VALUE.C_INPUT_BRAM_44_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_45_PORTS PARAM_VALUE.C_INPUT_BRAM_45_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_46_PORTS PARAM_VALUE.C_INPUT_BRAM_46_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_47_PORTS PARAM_VALUE.C_INPUT_BRAM_47_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_48_PORTS PARAM_VALUE.C_INPUT_BRAM_48_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_49_PORTS PARAM_VALUE.C_INPUT_BRAM_49_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_50_PORTS PARAM_VALUE.C_INPUT_BRAM_50_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_51_PORTS PARAM_VALUE.C_INPUT_BRAM_51_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_52_PORTS PARAM_VALUE.C_INPUT_BRAM_52_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_53_PORTS PARAM_VALUE.C_INPUT_BRAM_53_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_54_PORTS PARAM_VALUE.C_INPUT_BRAM_54_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_55_PORTS PARAM_VALUE.C_INPUT_BRAM_55_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_56_PORTS PARAM_VALUE.C_INPUT_BRAM_56_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_57_PORTS PARAM_VALUE.C_INPUT_BRAM_57_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_58_PORTS PARAM_VALUE.C_INPUT_BRAM_58_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_59_PORTS PARAM_VALUE.C_INPUT_BRAM_59_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_60_PORTS PARAM_VALUE.C_INPUT_BRAM_60_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_61_PORTS PARAM_VALUE.C_INPUT_BRAM_61_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_62_PORTS PARAM_VALUE.C_INPUT_BRAM_62_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_63_PORTS PARAM_VALUE.C_INPUT_BRAM_63_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_64_PORTS PARAM_VALUE.C_INPUT_BRAM_64_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_65_PORTS PARAM_VALUE.C_INPUT_BRAM_65_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_66_PORTS PARAM_VALUE.C_INPUT_BRAM_66_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_67_PORTS PARAM_VALUE.C_INPUT_BRAM_67_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_68_PORTS PARAM_VALUE.C_INPUT_BRAM_68_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_69_PORTS PARAM_VALUE.C_INPUT_BRAM_69_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_70_PORTS PARAM_VALUE.C_INPUT_BRAM_70_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_71_PORTS PARAM_VALUE.C_INPUT_BRAM_71_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_72_PORTS PARAM_VALUE.C_INPUT_BRAM_72_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_73_PORTS PARAM_VALUE.C_INPUT_BRAM_73_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_74_PORTS PARAM_VALUE.C_INPUT_BRAM_74_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_75_PORTS PARAM_VALUE.C_INPUT_BRAM_75_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_76_PORTS PARAM_VALUE.C_INPUT_BRAM_76_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_77_PORTS PARAM_VALUE.C_INPUT_BRAM_77_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_78_PORTS PARAM_VALUE.C_INPUT_BRAM_78_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_79_PORTS PARAM_VALUE.C_INPUT_BRAM_79_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_80_PORTS PARAM_VALUE.C_INPUT_BRAM_80_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_81_PORTS PARAM_VALUE.C_INPUT_BRAM_81_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_82_PORTS PARAM_VALUE.C_INPUT_BRAM_82_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_83_PORTS PARAM_VALUE.C_INPUT_BRAM_83_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_84_PORTS PARAM_VALUE.C_INPUT_BRAM_84_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_85_PORTS PARAM_VALUE.C_INPUT_BRAM_85_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_86_PORTS PARAM_VALUE.C_INPUT_BRAM_86_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_87_PORTS PARAM_VALUE.C_INPUT_BRAM_87_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_88_PORTS PARAM_VALUE.C_INPUT_BRAM_88_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_89_PORTS PARAM_VALUE.C_INPUT_BRAM_89_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_90_PORTS PARAM_VALUE.C_INPUT_BRAM_90_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_91_PORTS PARAM_VALUE.C_INPUT_BRAM_91_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_92_PORTS PARAM_VALUE.C_INPUT_BRAM_92_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_93_PORTS PARAM_VALUE.C_INPUT_BRAM_93_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_94_PORTS PARAM_VALUE.C_INPUT_BRAM_94_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_95_PORTS PARAM_VALUE.C_INPUT_BRAM_95_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_96_PORTS PARAM_VALUE.C_INPUT_BRAM_96_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_97_PORTS PARAM_VALUE.C_INPUT_BRAM_97_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_98_PORTS PARAM_VALUE.C_INPUT_BRAM_98_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_99_PORTS PARAM_VALUE.C_INPUT_BRAM_99_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_100_PORTS PARAM_VALUE.C_INPUT_BRAM_100_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_101_PORTS PARAM_VALUE.C_INPUT_BRAM_101_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_102_PORTS PARAM_VALUE.C_INPUT_BRAM_102_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_103_PORTS PARAM_VALUE.C_INPUT_BRAM_103_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_104_PORTS PARAM_VALUE.C_INPUT_BRAM_104_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_105_PORTS PARAM_VALUE.C_INPUT_BRAM_105_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_106_PORTS PARAM_VALUE.C_INPUT_BRAM_106_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_107_PORTS PARAM_VALUE.C_INPUT_BRAM_107_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_108_PORTS PARAM_VALUE.C_INPUT_BRAM_108_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_109_PORTS PARAM_VALUE.C_INPUT_BRAM_109_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_110_PORTS PARAM_VALUE.C_INPUT_BRAM_110_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_111_PORTS PARAM_VALUE.C_INPUT_BRAM_111_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_112_PORTS PARAM_VALUE.C_INPUT_BRAM_112_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_113_PORTS PARAM_VALUE.C_INPUT_BRAM_113_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_114_PORTS PARAM_VALUE.C_INPUT_BRAM_114_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_115_PORTS PARAM_VALUE.C_INPUT_BRAM_115_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_116_PORTS PARAM_VALUE.C_INPUT_BRAM_116_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_117_PORTS PARAM_VALUE.C_INPUT_BRAM_117_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_118_PORTS PARAM_VALUE.C_INPUT_BRAM_118_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_119_PORTS PARAM_VALUE.C_INPUT_BRAM_119_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_120_PORTS PARAM_VALUE.C_INPUT_BRAM_120_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_121_PORTS PARAM_VALUE.C_INPUT_BRAM_121_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_122_PORTS PARAM_VALUE.C_INPUT_BRAM_122_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_123_PORTS PARAM_VALUE.C_INPUT_BRAM_123_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_124_PORTS PARAM_VALUE.C_INPUT_BRAM_124_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_125_PORTS PARAM_VALUE.C_INPUT_BRAM_125_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_126_PORTS PARAM_VALUE.C_INPUT_BRAM_126_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_PORTS { MODELPARAM_VALUE.C_INPUT_BRAM_127_PORTS PARAM_VALUE.C_INPUT_BRAM_127_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_PORTS}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_PORTS}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_0_WIDTH PARAM_VALUE.C_INPUT_BRAM_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_1_WIDTH PARAM_VALUE.C_INPUT_BRAM_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_2_WIDTH PARAM_VALUE.C_INPUT_BRAM_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_3_WIDTH PARAM_VALUE.C_INPUT_BRAM_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_4_WIDTH PARAM_VALUE.C_INPUT_BRAM_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_5_WIDTH PARAM_VALUE.C_INPUT_BRAM_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_6_WIDTH PARAM_VALUE.C_INPUT_BRAM_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_7_WIDTH PARAM_VALUE.C_INPUT_BRAM_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_8_WIDTH PARAM_VALUE.C_INPUT_BRAM_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_9_WIDTH PARAM_VALUE.C_INPUT_BRAM_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_10_WIDTH PARAM_VALUE.C_INPUT_BRAM_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_11_WIDTH PARAM_VALUE.C_INPUT_BRAM_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_12_WIDTH PARAM_VALUE.C_INPUT_BRAM_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_13_WIDTH PARAM_VALUE.C_INPUT_BRAM_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_14_WIDTH PARAM_VALUE.C_INPUT_BRAM_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_15_WIDTH PARAM_VALUE.C_INPUT_BRAM_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_16_WIDTH PARAM_VALUE.C_INPUT_BRAM_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_17_WIDTH PARAM_VALUE.C_INPUT_BRAM_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_18_WIDTH PARAM_VALUE.C_INPUT_BRAM_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_19_WIDTH PARAM_VALUE.C_INPUT_BRAM_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_20_WIDTH PARAM_VALUE.C_INPUT_BRAM_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_21_WIDTH PARAM_VALUE.C_INPUT_BRAM_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_22_WIDTH PARAM_VALUE.C_INPUT_BRAM_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_23_WIDTH PARAM_VALUE.C_INPUT_BRAM_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_24_WIDTH PARAM_VALUE.C_INPUT_BRAM_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_25_WIDTH PARAM_VALUE.C_INPUT_BRAM_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_26_WIDTH PARAM_VALUE.C_INPUT_BRAM_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_27_WIDTH PARAM_VALUE.C_INPUT_BRAM_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_28_WIDTH PARAM_VALUE.C_INPUT_BRAM_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_29_WIDTH PARAM_VALUE.C_INPUT_BRAM_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_30_WIDTH PARAM_VALUE.C_INPUT_BRAM_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_31_WIDTH PARAM_VALUE.C_INPUT_BRAM_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_32_WIDTH PARAM_VALUE.C_INPUT_BRAM_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_33_WIDTH PARAM_VALUE.C_INPUT_BRAM_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_34_WIDTH PARAM_VALUE.C_INPUT_BRAM_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_35_WIDTH PARAM_VALUE.C_INPUT_BRAM_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_36_WIDTH PARAM_VALUE.C_INPUT_BRAM_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_37_WIDTH PARAM_VALUE.C_INPUT_BRAM_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_38_WIDTH PARAM_VALUE.C_INPUT_BRAM_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_39_WIDTH PARAM_VALUE.C_INPUT_BRAM_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_40_WIDTH PARAM_VALUE.C_INPUT_BRAM_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_41_WIDTH PARAM_VALUE.C_INPUT_BRAM_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_42_WIDTH PARAM_VALUE.C_INPUT_BRAM_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_43_WIDTH PARAM_VALUE.C_INPUT_BRAM_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_44_WIDTH PARAM_VALUE.C_INPUT_BRAM_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_45_WIDTH PARAM_VALUE.C_INPUT_BRAM_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_46_WIDTH PARAM_VALUE.C_INPUT_BRAM_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_47_WIDTH PARAM_VALUE.C_INPUT_BRAM_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_48_WIDTH PARAM_VALUE.C_INPUT_BRAM_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_49_WIDTH PARAM_VALUE.C_INPUT_BRAM_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_50_WIDTH PARAM_VALUE.C_INPUT_BRAM_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_51_WIDTH PARAM_VALUE.C_INPUT_BRAM_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_52_WIDTH PARAM_VALUE.C_INPUT_BRAM_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_53_WIDTH PARAM_VALUE.C_INPUT_BRAM_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_54_WIDTH PARAM_VALUE.C_INPUT_BRAM_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_55_WIDTH PARAM_VALUE.C_INPUT_BRAM_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_56_WIDTH PARAM_VALUE.C_INPUT_BRAM_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_57_WIDTH PARAM_VALUE.C_INPUT_BRAM_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_58_WIDTH PARAM_VALUE.C_INPUT_BRAM_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_59_WIDTH PARAM_VALUE.C_INPUT_BRAM_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_60_WIDTH PARAM_VALUE.C_INPUT_BRAM_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_61_WIDTH PARAM_VALUE.C_INPUT_BRAM_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_62_WIDTH PARAM_VALUE.C_INPUT_BRAM_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_63_WIDTH PARAM_VALUE.C_INPUT_BRAM_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_64_WIDTH PARAM_VALUE.C_INPUT_BRAM_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_65_WIDTH PARAM_VALUE.C_INPUT_BRAM_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_66_WIDTH PARAM_VALUE.C_INPUT_BRAM_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_67_WIDTH PARAM_VALUE.C_INPUT_BRAM_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_68_WIDTH PARAM_VALUE.C_INPUT_BRAM_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_69_WIDTH PARAM_VALUE.C_INPUT_BRAM_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_70_WIDTH PARAM_VALUE.C_INPUT_BRAM_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_71_WIDTH PARAM_VALUE.C_INPUT_BRAM_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_72_WIDTH PARAM_VALUE.C_INPUT_BRAM_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_73_WIDTH PARAM_VALUE.C_INPUT_BRAM_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_74_WIDTH PARAM_VALUE.C_INPUT_BRAM_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_75_WIDTH PARAM_VALUE.C_INPUT_BRAM_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_76_WIDTH PARAM_VALUE.C_INPUT_BRAM_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_77_WIDTH PARAM_VALUE.C_INPUT_BRAM_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_78_WIDTH PARAM_VALUE.C_INPUT_BRAM_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_79_WIDTH PARAM_VALUE.C_INPUT_BRAM_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_80_WIDTH PARAM_VALUE.C_INPUT_BRAM_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_81_WIDTH PARAM_VALUE.C_INPUT_BRAM_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_82_WIDTH PARAM_VALUE.C_INPUT_BRAM_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_83_WIDTH PARAM_VALUE.C_INPUT_BRAM_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_84_WIDTH PARAM_VALUE.C_INPUT_BRAM_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_85_WIDTH PARAM_VALUE.C_INPUT_BRAM_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_86_WIDTH PARAM_VALUE.C_INPUT_BRAM_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_87_WIDTH PARAM_VALUE.C_INPUT_BRAM_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_88_WIDTH PARAM_VALUE.C_INPUT_BRAM_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_89_WIDTH PARAM_VALUE.C_INPUT_BRAM_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_90_WIDTH PARAM_VALUE.C_INPUT_BRAM_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_91_WIDTH PARAM_VALUE.C_INPUT_BRAM_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_92_WIDTH PARAM_VALUE.C_INPUT_BRAM_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_93_WIDTH PARAM_VALUE.C_INPUT_BRAM_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_94_WIDTH PARAM_VALUE.C_INPUT_BRAM_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_95_WIDTH PARAM_VALUE.C_INPUT_BRAM_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_96_WIDTH PARAM_VALUE.C_INPUT_BRAM_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_97_WIDTH PARAM_VALUE.C_INPUT_BRAM_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_98_WIDTH PARAM_VALUE.C_INPUT_BRAM_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_99_WIDTH PARAM_VALUE.C_INPUT_BRAM_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_100_WIDTH PARAM_VALUE.C_INPUT_BRAM_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_101_WIDTH PARAM_VALUE.C_INPUT_BRAM_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_102_WIDTH PARAM_VALUE.C_INPUT_BRAM_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_103_WIDTH PARAM_VALUE.C_INPUT_BRAM_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_104_WIDTH PARAM_VALUE.C_INPUT_BRAM_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_105_WIDTH PARAM_VALUE.C_INPUT_BRAM_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_106_WIDTH PARAM_VALUE.C_INPUT_BRAM_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_107_WIDTH PARAM_VALUE.C_INPUT_BRAM_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_108_WIDTH PARAM_VALUE.C_INPUT_BRAM_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_109_WIDTH PARAM_VALUE.C_INPUT_BRAM_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_110_WIDTH PARAM_VALUE.C_INPUT_BRAM_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_111_WIDTH PARAM_VALUE.C_INPUT_BRAM_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_112_WIDTH PARAM_VALUE.C_INPUT_BRAM_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_113_WIDTH PARAM_VALUE.C_INPUT_BRAM_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_114_WIDTH PARAM_VALUE.C_INPUT_BRAM_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_115_WIDTH PARAM_VALUE.C_INPUT_BRAM_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_116_WIDTH PARAM_VALUE.C_INPUT_BRAM_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_117_WIDTH PARAM_VALUE.C_INPUT_BRAM_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_118_WIDTH PARAM_VALUE.C_INPUT_BRAM_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_119_WIDTH PARAM_VALUE.C_INPUT_BRAM_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_120_WIDTH PARAM_VALUE.C_INPUT_BRAM_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_121_WIDTH PARAM_VALUE.C_INPUT_BRAM_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_122_WIDTH PARAM_VALUE.C_INPUT_BRAM_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_123_WIDTH PARAM_VALUE.C_INPUT_BRAM_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_124_WIDTH PARAM_VALUE.C_INPUT_BRAM_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_125_WIDTH PARAM_VALUE.C_INPUT_BRAM_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_126_WIDTH PARAM_VALUE.C_INPUT_BRAM_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_127_WIDTH PARAM_VALUE.C_INPUT_BRAM_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_0_DEPTH PARAM_VALUE.C_INPUT_BRAM_0_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_1_DEPTH PARAM_VALUE.C_INPUT_BRAM_1_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_2_DEPTH PARAM_VALUE.C_INPUT_BRAM_2_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_3_DEPTH PARAM_VALUE.C_INPUT_BRAM_3_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_4_DEPTH PARAM_VALUE.C_INPUT_BRAM_4_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_5_DEPTH PARAM_VALUE.C_INPUT_BRAM_5_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_6_DEPTH PARAM_VALUE.C_INPUT_BRAM_6_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_7_DEPTH PARAM_VALUE.C_INPUT_BRAM_7_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_8_DEPTH PARAM_VALUE.C_INPUT_BRAM_8_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_9_DEPTH PARAM_VALUE.C_INPUT_BRAM_9_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_10_DEPTH PARAM_VALUE.C_INPUT_BRAM_10_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_11_DEPTH PARAM_VALUE.C_INPUT_BRAM_11_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_12_DEPTH PARAM_VALUE.C_INPUT_BRAM_12_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_13_DEPTH PARAM_VALUE.C_INPUT_BRAM_13_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_14_DEPTH PARAM_VALUE.C_INPUT_BRAM_14_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_15_DEPTH PARAM_VALUE.C_INPUT_BRAM_15_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_16_DEPTH PARAM_VALUE.C_INPUT_BRAM_16_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_17_DEPTH PARAM_VALUE.C_INPUT_BRAM_17_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_18_DEPTH PARAM_VALUE.C_INPUT_BRAM_18_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_19_DEPTH PARAM_VALUE.C_INPUT_BRAM_19_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_20_DEPTH PARAM_VALUE.C_INPUT_BRAM_20_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_21_DEPTH PARAM_VALUE.C_INPUT_BRAM_21_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_22_DEPTH PARAM_VALUE.C_INPUT_BRAM_22_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_23_DEPTH PARAM_VALUE.C_INPUT_BRAM_23_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_24_DEPTH PARAM_VALUE.C_INPUT_BRAM_24_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_25_DEPTH PARAM_VALUE.C_INPUT_BRAM_25_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_26_DEPTH PARAM_VALUE.C_INPUT_BRAM_26_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_27_DEPTH PARAM_VALUE.C_INPUT_BRAM_27_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_28_DEPTH PARAM_VALUE.C_INPUT_BRAM_28_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_29_DEPTH PARAM_VALUE.C_INPUT_BRAM_29_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_30_DEPTH PARAM_VALUE.C_INPUT_BRAM_30_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_31_DEPTH PARAM_VALUE.C_INPUT_BRAM_31_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_32_DEPTH PARAM_VALUE.C_INPUT_BRAM_32_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_33_DEPTH PARAM_VALUE.C_INPUT_BRAM_33_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_34_DEPTH PARAM_VALUE.C_INPUT_BRAM_34_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_35_DEPTH PARAM_VALUE.C_INPUT_BRAM_35_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_36_DEPTH PARAM_VALUE.C_INPUT_BRAM_36_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_37_DEPTH PARAM_VALUE.C_INPUT_BRAM_37_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_38_DEPTH PARAM_VALUE.C_INPUT_BRAM_38_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_39_DEPTH PARAM_VALUE.C_INPUT_BRAM_39_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_40_DEPTH PARAM_VALUE.C_INPUT_BRAM_40_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_41_DEPTH PARAM_VALUE.C_INPUT_BRAM_41_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_42_DEPTH PARAM_VALUE.C_INPUT_BRAM_42_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_43_DEPTH PARAM_VALUE.C_INPUT_BRAM_43_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_44_DEPTH PARAM_VALUE.C_INPUT_BRAM_44_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_45_DEPTH PARAM_VALUE.C_INPUT_BRAM_45_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_46_DEPTH PARAM_VALUE.C_INPUT_BRAM_46_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_47_DEPTH PARAM_VALUE.C_INPUT_BRAM_47_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_48_DEPTH PARAM_VALUE.C_INPUT_BRAM_48_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_49_DEPTH PARAM_VALUE.C_INPUT_BRAM_49_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_50_DEPTH PARAM_VALUE.C_INPUT_BRAM_50_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_51_DEPTH PARAM_VALUE.C_INPUT_BRAM_51_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_52_DEPTH PARAM_VALUE.C_INPUT_BRAM_52_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_53_DEPTH PARAM_VALUE.C_INPUT_BRAM_53_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_54_DEPTH PARAM_VALUE.C_INPUT_BRAM_54_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_55_DEPTH PARAM_VALUE.C_INPUT_BRAM_55_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_56_DEPTH PARAM_VALUE.C_INPUT_BRAM_56_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_57_DEPTH PARAM_VALUE.C_INPUT_BRAM_57_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_58_DEPTH PARAM_VALUE.C_INPUT_BRAM_58_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_59_DEPTH PARAM_VALUE.C_INPUT_BRAM_59_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_60_DEPTH PARAM_VALUE.C_INPUT_BRAM_60_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_61_DEPTH PARAM_VALUE.C_INPUT_BRAM_61_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_62_DEPTH PARAM_VALUE.C_INPUT_BRAM_62_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_63_DEPTH PARAM_VALUE.C_INPUT_BRAM_63_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_64_DEPTH PARAM_VALUE.C_INPUT_BRAM_64_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_65_DEPTH PARAM_VALUE.C_INPUT_BRAM_65_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_66_DEPTH PARAM_VALUE.C_INPUT_BRAM_66_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_67_DEPTH PARAM_VALUE.C_INPUT_BRAM_67_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_68_DEPTH PARAM_VALUE.C_INPUT_BRAM_68_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_69_DEPTH PARAM_VALUE.C_INPUT_BRAM_69_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_70_DEPTH PARAM_VALUE.C_INPUT_BRAM_70_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_71_DEPTH PARAM_VALUE.C_INPUT_BRAM_71_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_72_DEPTH PARAM_VALUE.C_INPUT_BRAM_72_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_73_DEPTH PARAM_VALUE.C_INPUT_BRAM_73_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_74_DEPTH PARAM_VALUE.C_INPUT_BRAM_74_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_75_DEPTH PARAM_VALUE.C_INPUT_BRAM_75_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_76_DEPTH PARAM_VALUE.C_INPUT_BRAM_76_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_77_DEPTH PARAM_VALUE.C_INPUT_BRAM_77_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_78_DEPTH PARAM_VALUE.C_INPUT_BRAM_78_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_79_DEPTH PARAM_VALUE.C_INPUT_BRAM_79_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_80_DEPTH PARAM_VALUE.C_INPUT_BRAM_80_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_81_DEPTH PARAM_VALUE.C_INPUT_BRAM_81_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_82_DEPTH PARAM_VALUE.C_INPUT_BRAM_82_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_83_DEPTH PARAM_VALUE.C_INPUT_BRAM_83_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_84_DEPTH PARAM_VALUE.C_INPUT_BRAM_84_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_85_DEPTH PARAM_VALUE.C_INPUT_BRAM_85_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_86_DEPTH PARAM_VALUE.C_INPUT_BRAM_86_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_87_DEPTH PARAM_VALUE.C_INPUT_BRAM_87_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_88_DEPTH PARAM_VALUE.C_INPUT_BRAM_88_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_89_DEPTH PARAM_VALUE.C_INPUT_BRAM_89_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_90_DEPTH PARAM_VALUE.C_INPUT_BRAM_90_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_91_DEPTH PARAM_VALUE.C_INPUT_BRAM_91_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_92_DEPTH PARAM_VALUE.C_INPUT_BRAM_92_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_93_DEPTH PARAM_VALUE.C_INPUT_BRAM_93_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_94_DEPTH PARAM_VALUE.C_INPUT_BRAM_94_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_95_DEPTH PARAM_VALUE.C_INPUT_BRAM_95_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_96_DEPTH PARAM_VALUE.C_INPUT_BRAM_96_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_97_DEPTH PARAM_VALUE.C_INPUT_BRAM_97_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_98_DEPTH PARAM_VALUE.C_INPUT_BRAM_98_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_99_DEPTH PARAM_VALUE.C_INPUT_BRAM_99_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_100_DEPTH PARAM_VALUE.C_INPUT_BRAM_100_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_101_DEPTH PARAM_VALUE.C_INPUT_BRAM_101_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_102_DEPTH PARAM_VALUE.C_INPUT_BRAM_102_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_103_DEPTH PARAM_VALUE.C_INPUT_BRAM_103_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_104_DEPTH PARAM_VALUE.C_INPUT_BRAM_104_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_105_DEPTH PARAM_VALUE.C_INPUT_BRAM_105_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_106_DEPTH PARAM_VALUE.C_INPUT_BRAM_106_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_107_DEPTH PARAM_VALUE.C_INPUT_BRAM_107_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_108_DEPTH PARAM_VALUE.C_INPUT_BRAM_108_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_109_DEPTH PARAM_VALUE.C_INPUT_BRAM_109_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_110_DEPTH PARAM_VALUE.C_INPUT_BRAM_110_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_111_DEPTH PARAM_VALUE.C_INPUT_BRAM_111_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_112_DEPTH PARAM_VALUE.C_INPUT_BRAM_112_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_113_DEPTH PARAM_VALUE.C_INPUT_BRAM_113_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_114_DEPTH PARAM_VALUE.C_INPUT_BRAM_114_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_115_DEPTH PARAM_VALUE.C_INPUT_BRAM_115_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_116_DEPTH PARAM_VALUE.C_INPUT_BRAM_116_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_117_DEPTH PARAM_VALUE.C_INPUT_BRAM_117_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_118_DEPTH PARAM_VALUE.C_INPUT_BRAM_118_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_119_DEPTH PARAM_VALUE.C_INPUT_BRAM_119_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_120_DEPTH PARAM_VALUE.C_INPUT_BRAM_120_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_121_DEPTH PARAM_VALUE.C_INPUT_BRAM_121_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_122_DEPTH PARAM_VALUE.C_INPUT_BRAM_122_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_123_DEPTH PARAM_VALUE.C_INPUT_BRAM_123_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_124_DEPTH PARAM_VALUE.C_INPUT_BRAM_124_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_125_DEPTH PARAM_VALUE.C_INPUT_BRAM_125_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_126_DEPTH PARAM_VALUE.C_INPUT_BRAM_126_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_127_DEPTH PARAM_VALUE.C_INPUT_BRAM_127_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_0_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_1_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_2_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_3_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_4_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_5_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_6_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_7_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_8_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_9_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_10_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_11_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_12_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_13_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_14_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_15_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_16_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_17_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_18_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_19_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_20_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_21_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_22_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_23_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_24_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_25_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_26_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_27_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_28_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_29_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_30_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_31_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_32_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_33_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_34_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_35_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_36_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_37_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_38_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_39_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_40_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_41_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_42_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_43_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_44_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_45_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_46_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_47_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_48_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_49_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_50_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_51_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_52_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_53_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_54_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_55_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_56_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_57_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_58_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_59_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_60_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_61_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_62_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_63_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_64_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_65_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_66_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_67_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_68_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_69_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_70_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_71_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_72_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_73_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_74_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_75_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_76_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_77_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_78_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_79_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_80_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_81_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_82_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_83_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_84_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_85_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_86_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_87_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_88_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_89_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_90_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_91_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_92_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_93_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_94_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_95_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_96_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_97_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_98_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_99_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_100_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_101_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_102_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_103_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_104_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_105_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_106_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_107_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_108_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_109_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_110_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_111_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_112_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_113_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_114_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_115_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_116_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_117_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_118_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_119_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_120_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_121_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_122_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_123_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_124_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_125_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_126_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH { MODELPARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH}] ${MODELPARAM_VALUE.C_INOUT_BRAM_127_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_BRAM_0_IS_INOUT { MODELPARAM_VALUE.C_BRAM_0_IS_INOUT PARAM_VALUE.C_BRAM_0_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_0_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_0_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_1_IS_INOUT { MODELPARAM_VALUE.C_BRAM_1_IS_INOUT PARAM_VALUE.C_BRAM_1_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_1_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_1_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_2_IS_INOUT { MODELPARAM_VALUE.C_BRAM_2_IS_INOUT PARAM_VALUE.C_BRAM_2_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_2_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_2_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_3_IS_INOUT { MODELPARAM_VALUE.C_BRAM_3_IS_INOUT PARAM_VALUE.C_BRAM_3_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_3_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_3_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_4_IS_INOUT { MODELPARAM_VALUE.C_BRAM_4_IS_INOUT PARAM_VALUE.C_BRAM_4_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_4_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_4_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_5_IS_INOUT { MODELPARAM_VALUE.C_BRAM_5_IS_INOUT PARAM_VALUE.C_BRAM_5_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_5_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_5_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_6_IS_INOUT { MODELPARAM_VALUE.C_BRAM_6_IS_INOUT PARAM_VALUE.C_BRAM_6_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_6_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_6_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_7_IS_INOUT { MODELPARAM_VALUE.C_BRAM_7_IS_INOUT PARAM_VALUE.C_BRAM_7_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_7_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_7_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_8_IS_INOUT { MODELPARAM_VALUE.C_BRAM_8_IS_INOUT PARAM_VALUE.C_BRAM_8_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_8_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_8_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_9_IS_INOUT { MODELPARAM_VALUE.C_BRAM_9_IS_INOUT PARAM_VALUE.C_BRAM_9_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_9_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_9_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_10_IS_INOUT { MODELPARAM_VALUE.C_BRAM_10_IS_INOUT PARAM_VALUE.C_BRAM_10_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_10_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_10_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_11_IS_INOUT { MODELPARAM_VALUE.C_BRAM_11_IS_INOUT PARAM_VALUE.C_BRAM_11_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_11_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_11_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_12_IS_INOUT { MODELPARAM_VALUE.C_BRAM_12_IS_INOUT PARAM_VALUE.C_BRAM_12_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_12_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_12_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_13_IS_INOUT { MODELPARAM_VALUE.C_BRAM_13_IS_INOUT PARAM_VALUE.C_BRAM_13_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_13_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_13_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_14_IS_INOUT { MODELPARAM_VALUE.C_BRAM_14_IS_INOUT PARAM_VALUE.C_BRAM_14_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_14_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_14_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_15_IS_INOUT { MODELPARAM_VALUE.C_BRAM_15_IS_INOUT PARAM_VALUE.C_BRAM_15_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_15_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_15_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_16_IS_INOUT { MODELPARAM_VALUE.C_BRAM_16_IS_INOUT PARAM_VALUE.C_BRAM_16_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_16_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_16_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_17_IS_INOUT { MODELPARAM_VALUE.C_BRAM_17_IS_INOUT PARAM_VALUE.C_BRAM_17_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_17_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_17_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_18_IS_INOUT { MODELPARAM_VALUE.C_BRAM_18_IS_INOUT PARAM_VALUE.C_BRAM_18_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_18_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_18_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_19_IS_INOUT { MODELPARAM_VALUE.C_BRAM_19_IS_INOUT PARAM_VALUE.C_BRAM_19_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_19_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_19_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_20_IS_INOUT { MODELPARAM_VALUE.C_BRAM_20_IS_INOUT PARAM_VALUE.C_BRAM_20_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_20_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_20_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_21_IS_INOUT { MODELPARAM_VALUE.C_BRAM_21_IS_INOUT PARAM_VALUE.C_BRAM_21_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_21_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_21_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_22_IS_INOUT { MODELPARAM_VALUE.C_BRAM_22_IS_INOUT PARAM_VALUE.C_BRAM_22_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_22_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_22_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_23_IS_INOUT { MODELPARAM_VALUE.C_BRAM_23_IS_INOUT PARAM_VALUE.C_BRAM_23_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_23_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_23_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_24_IS_INOUT { MODELPARAM_VALUE.C_BRAM_24_IS_INOUT PARAM_VALUE.C_BRAM_24_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_24_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_24_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_25_IS_INOUT { MODELPARAM_VALUE.C_BRAM_25_IS_INOUT PARAM_VALUE.C_BRAM_25_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_25_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_25_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_26_IS_INOUT { MODELPARAM_VALUE.C_BRAM_26_IS_INOUT PARAM_VALUE.C_BRAM_26_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_26_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_26_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_27_IS_INOUT { MODELPARAM_VALUE.C_BRAM_27_IS_INOUT PARAM_VALUE.C_BRAM_27_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_27_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_27_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_28_IS_INOUT { MODELPARAM_VALUE.C_BRAM_28_IS_INOUT PARAM_VALUE.C_BRAM_28_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_28_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_28_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_29_IS_INOUT { MODELPARAM_VALUE.C_BRAM_29_IS_INOUT PARAM_VALUE.C_BRAM_29_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_29_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_29_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_30_IS_INOUT { MODELPARAM_VALUE.C_BRAM_30_IS_INOUT PARAM_VALUE.C_BRAM_30_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_30_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_30_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_31_IS_INOUT { MODELPARAM_VALUE.C_BRAM_31_IS_INOUT PARAM_VALUE.C_BRAM_31_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_31_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_31_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_32_IS_INOUT { MODELPARAM_VALUE.C_BRAM_32_IS_INOUT PARAM_VALUE.C_BRAM_32_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_32_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_32_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_33_IS_INOUT { MODELPARAM_VALUE.C_BRAM_33_IS_INOUT PARAM_VALUE.C_BRAM_33_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_33_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_33_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_34_IS_INOUT { MODELPARAM_VALUE.C_BRAM_34_IS_INOUT PARAM_VALUE.C_BRAM_34_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_34_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_34_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_35_IS_INOUT { MODELPARAM_VALUE.C_BRAM_35_IS_INOUT PARAM_VALUE.C_BRAM_35_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_35_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_35_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_36_IS_INOUT { MODELPARAM_VALUE.C_BRAM_36_IS_INOUT PARAM_VALUE.C_BRAM_36_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_36_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_36_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_37_IS_INOUT { MODELPARAM_VALUE.C_BRAM_37_IS_INOUT PARAM_VALUE.C_BRAM_37_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_37_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_37_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_38_IS_INOUT { MODELPARAM_VALUE.C_BRAM_38_IS_INOUT PARAM_VALUE.C_BRAM_38_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_38_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_38_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_39_IS_INOUT { MODELPARAM_VALUE.C_BRAM_39_IS_INOUT PARAM_VALUE.C_BRAM_39_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_39_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_39_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_40_IS_INOUT { MODELPARAM_VALUE.C_BRAM_40_IS_INOUT PARAM_VALUE.C_BRAM_40_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_40_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_40_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_41_IS_INOUT { MODELPARAM_VALUE.C_BRAM_41_IS_INOUT PARAM_VALUE.C_BRAM_41_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_41_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_41_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_42_IS_INOUT { MODELPARAM_VALUE.C_BRAM_42_IS_INOUT PARAM_VALUE.C_BRAM_42_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_42_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_42_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_43_IS_INOUT { MODELPARAM_VALUE.C_BRAM_43_IS_INOUT PARAM_VALUE.C_BRAM_43_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_43_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_43_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_44_IS_INOUT { MODELPARAM_VALUE.C_BRAM_44_IS_INOUT PARAM_VALUE.C_BRAM_44_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_44_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_44_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_45_IS_INOUT { MODELPARAM_VALUE.C_BRAM_45_IS_INOUT PARAM_VALUE.C_BRAM_45_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_45_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_45_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_46_IS_INOUT { MODELPARAM_VALUE.C_BRAM_46_IS_INOUT PARAM_VALUE.C_BRAM_46_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_46_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_46_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_47_IS_INOUT { MODELPARAM_VALUE.C_BRAM_47_IS_INOUT PARAM_VALUE.C_BRAM_47_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_47_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_47_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_48_IS_INOUT { MODELPARAM_VALUE.C_BRAM_48_IS_INOUT PARAM_VALUE.C_BRAM_48_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_48_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_48_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_49_IS_INOUT { MODELPARAM_VALUE.C_BRAM_49_IS_INOUT PARAM_VALUE.C_BRAM_49_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_49_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_49_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_50_IS_INOUT { MODELPARAM_VALUE.C_BRAM_50_IS_INOUT PARAM_VALUE.C_BRAM_50_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_50_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_50_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_51_IS_INOUT { MODELPARAM_VALUE.C_BRAM_51_IS_INOUT PARAM_VALUE.C_BRAM_51_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_51_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_51_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_52_IS_INOUT { MODELPARAM_VALUE.C_BRAM_52_IS_INOUT PARAM_VALUE.C_BRAM_52_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_52_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_52_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_53_IS_INOUT { MODELPARAM_VALUE.C_BRAM_53_IS_INOUT PARAM_VALUE.C_BRAM_53_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_53_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_53_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_54_IS_INOUT { MODELPARAM_VALUE.C_BRAM_54_IS_INOUT PARAM_VALUE.C_BRAM_54_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_54_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_54_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_55_IS_INOUT { MODELPARAM_VALUE.C_BRAM_55_IS_INOUT PARAM_VALUE.C_BRAM_55_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_55_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_55_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_56_IS_INOUT { MODELPARAM_VALUE.C_BRAM_56_IS_INOUT PARAM_VALUE.C_BRAM_56_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_56_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_56_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_57_IS_INOUT { MODELPARAM_VALUE.C_BRAM_57_IS_INOUT PARAM_VALUE.C_BRAM_57_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_57_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_57_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_58_IS_INOUT { MODELPARAM_VALUE.C_BRAM_58_IS_INOUT PARAM_VALUE.C_BRAM_58_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_58_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_58_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_59_IS_INOUT { MODELPARAM_VALUE.C_BRAM_59_IS_INOUT PARAM_VALUE.C_BRAM_59_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_59_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_59_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_60_IS_INOUT { MODELPARAM_VALUE.C_BRAM_60_IS_INOUT PARAM_VALUE.C_BRAM_60_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_60_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_60_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_61_IS_INOUT { MODELPARAM_VALUE.C_BRAM_61_IS_INOUT PARAM_VALUE.C_BRAM_61_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_61_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_61_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_62_IS_INOUT { MODELPARAM_VALUE.C_BRAM_62_IS_INOUT PARAM_VALUE.C_BRAM_62_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_62_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_62_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_63_IS_INOUT { MODELPARAM_VALUE.C_BRAM_63_IS_INOUT PARAM_VALUE.C_BRAM_63_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_63_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_63_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_64_IS_INOUT { MODELPARAM_VALUE.C_BRAM_64_IS_INOUT PARAM_VALUE.C_BRAM_64_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_64_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_64_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_65_IS_INOUT { MODELPARAM_VALUE.C_BRAM_65_IS_INOUT PARAM_VALUE.C_BRAM_65_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_65_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_65_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_66_IS_INOUT { MODELPARAM_VALUE.C_BRAM_66_IS_INOUT PARAM_VALUE.C_BRAM_66_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_66_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_66_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_67_IS_INOUT { MODELPARAM_VALUE.C_BRAM_67_IS_INOUT PARAM_VALUE.C_BRAM_67_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_67_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_67_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_68_IS_INOUT { MODELPARAM_VALUE.C_BRAM_68_IS_INOUT PARAM_VALUE.C_BRAM_68_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_68_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_68_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_69_IS_INOUT { MODELPARAM_VALUE.C_BRAM_69_IS_INOUT PARAM_VALUE.C_BRAM_69_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_69_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_69_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_70_IS_INOUT { MODELPARAM_VALUE.C_BRAM_70_IS_INOUT PARAM_VALUE.C_BRAM_70_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_70_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_70_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_71_IS_INOUT { MODELPARAM_VALUE.C_BRAM_71_IS_INOUT PARAM_VALUE.C_BRAM_71_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_71_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_71_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_72_IS_INOUT { MODELPARAM_VALUE.C_BRAM_72_IS_INOUT PARAM_VALUE.C_BRAM_72_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_72_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_72_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_73_IS_INOUT { MODELPARAM_VALUE.C_BRAM_73_IS_INOUT PARAM_VALUE.C_BRAM_73_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_73_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_73_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_74_IS_INOUT { MODELPARAM_VALUE.C_BRAM_74_IS_INOUT PARAM_VALUE.C_BRAM_74_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_74_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_74_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_75_IS_INOUT { MODELPARAM_VALUE.C_BRAM_75_IS_INOUT PARAM_VALUE.C_BRAM_75_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_75_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_75_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_76_IS_INOUT { MODELPARAM_VALUE.C_BRAM_76_IS_INOUT PARAM_VALUE.C_BRAM_76_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_76_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_76_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_77_IS_INOUT { MODELPARAM_VALUE.C_BRAM_77_IS_INOUT PARAM_VALUE.C_BRAM_77_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_77_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_77_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_78_IS_INOUT { MODELPARAM_VALUE.C_BRAM_78_IS_INOUT PARAM_VALUE.C_BRAM_78_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_78_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_78_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_79_IS_INOUT { MODELPARAM_VALUE.C_BRAM_79_IS_INOUT PARAM_VALUE.C_BRAM_79_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_79_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_79_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_80_IS_INOUT { MODELPARAM_VALUE.C_BRAM_80_IS_INOUT PARAM_VALUE.C_BRAM_80_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_80_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_80_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_81_IS_INOUT { MODELPARAM_VALUE.C_BRAM_81_IS_INOUT PARAM_VALUE.C_BRAM_81_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_81_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_81_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_82_IS_INOUT { MODELPARAM_VALUE.C_BRAM_82_IS_INOUT PARAM_VALUE.C_BRAM_82_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_82_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_82_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_83_IS_INOUT { MODELPARAM_VALUE.C_BRAM_83_IS_INOUT PARAM_VALUE.C_BRAM_83_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_83_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_83_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_84_IS_INOUT { MODELPARAM_VALUE.C_BRAM_84_IS_INOUT PARAM_VALUE.C_BRAM_84_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_84_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_84_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_85_IS_INOUT { MODELPARAM_VALUE.C_BRAM_85_IS_INOUT PARAM_VALUE.C_BRAM_85_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_85_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_85_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_86_IS_INOUT { MODELPARAM_VALUE.C_BRAM_86_IS_INOUT PARAM_VALUE.C_BRAM_86_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_86_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_86_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_87_IS_INOUT { MODELPARAM_VALUE.C_BRAM_87_IS_INOUT PARAM_VALUE.C_BRAM_87_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_87_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_87_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_88_IS_INOUT { MODELPARAM_VALUE.C_BRAM_88_IS_INOUT PARAM_VALUE.C_BRAM_88_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_88_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_88_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_89_IS_INOUT { MODELPARAM_VALUE.C_BRAM_89_IS_INOUT PARAM_VALUE.C_BRAM_89_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_89_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_89_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_90_IS_INOUT { MODELPARAM_VALUE.C_BRAM_90_IS_INOUT PARAM_VALUE.C_BRAM_90_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_90_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_90_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_91_IS_INOUT { MODELPARAM_VALUE.C_BRAM_91_IS_INOUT PARAM_VALUE.C_BRAM_91_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_91_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_91_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_92_IS_INOUT { MODELPARAM_VALUE.C_BRAM_92_IS_INOUT PARAM_VALUE.C_BRAM_92_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_92_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_92_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_93_IS_INOUT { MODELPARAM_VALUE.C_BRAM_93_IS_INOUT PARAM_VALUE.C_BRAM_93_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_93_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_93_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_94_IS_INOUT { MODELPARAM_VALUE.C_BRAM_94_IS_INOUT PARAM_VALUE.C_BRAM_94_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_94_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_94_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_95_IS_INOUT { MODELPARAM_VALUE.C_BRAM_95_IS_INOUT PARAM_VALUE.C_BRAM_95_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_95_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_95_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_96_IS_INOUT { MODELPARAM_VALUE.C_BRAM_96_IS_INOUT PARAM_VALUE.C_BRAM_96_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_96_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_96_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_97_IS_INOUT { MODELPARAM_VALUE.C_BRAM_97_IS_INOUT PARAM_VALUE.C_BRAM_97_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_97_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_97_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_98_IS_INOUT { MODELPARAM_VALUE.C_BRAM_98_IS_INOUT PARAM_VALUE.C_BRAM_98_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_98_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_98_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_99_IS_INOUT { MODELPARAM_VALUE.C_BRAM_99_IS_INOUT PARAM_VALUE.C_BRAM_99_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_99_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_99_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_100_IS_INOUT { MODELPARAM_VALUE.C_BRAM_100_IS_INOUT PARAM_VALUE.C_BRAM_100_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_100_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_100_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_101_IS_INOUT { MODELPARAM_VALUE.C_BRAM_101_IS_INOUT PARAM_VALUE.C_BRAM_101_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_101_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_101_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_102_IS_INOUT { MODELPARAM_VALUE.C_BRAM_102_IS_INOUT PARAM_VALUE.C_BRAM_102_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_102_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_102_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_103_IS_INOUT { MODELPARAM_VALUE.C_BRAM_103_IS_INOUT PARAM_VALUE.C_BRAM_103_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_103_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_103_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_104_IS_INOUT { MODELPARAM_VALUE.C_BRAM_104_IS_INOUT PARAM_VALUE.C_BRAM_104_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_104_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_104_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_105_IS_INOUT { MODELPARAM_VALUE.C_BRAM_105_IS_INOUT PARAM_VALUE.C_BRAM_105_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_105_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_105_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_106_IS_INOUT { MODELPARAM_VALUE.C_BRAM_106_IS_INOUT PARAM_VALUE.C_BRAM_106_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_106_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_106_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_107_IS_INOUT { MODELPARAM_VALUE.C_BRAM_107_IS_INOUT PARAM_VALUE.C_BRAM_107_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_107_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_107_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_108_IS_INOUT { MODELPARAM_VALUE.C_BRAM_108_IS_INOUT PARAM_VALUE.C_BRAM_108_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_108_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_108_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_109_IS_INOUT { MODELPARAM_VALUE.C_BRAM_109_IS_INOUT PARAM_VALUE.C_BRAM_109_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_109_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_109_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_110_IS_INOUT { MODELPARAM_VALUE.C_BRAM_110_IS_INOUT PARAM_VALUE.C_BRAM_110_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_110_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_110_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_111_IS_INOUT { MODELPARAM_VALUE.C_BRAM_111_IS_INOUT PARAM_VALUE.C_BRAM_111_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_111_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_111_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_112_IS_INOUT { MODELPARAM_VALUE.C_BRAM_112_IS_INOUT PARAM_VALUE.C_BRAM_112_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_112_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_112_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_113_IS_INOUT { MODELPARAM_VALUE.C_BRAM_113_IS_INOUT PARAM_VALUE.C_BRAM_113_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_113_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_113_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_114_IS_INOUT { MODELPARAM_VALUE.C_BRAM_114_IS_INOUT PARAM_VALUE.C_BRAM_114_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_114_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_114_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_115_IS_INOUT { MODELPARAM_VALUE.C_BRAM_115_IS_INOUT PARAM_VALUE.C_BRAM_115_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_115_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_115_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_116_IS_INOUT { MODELPARAM_VALUE.C_BRAM_116_IS_INOUT PARAM_VALUE.C_BRAM_116_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_116_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_116_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_117_IS_INOUT { MODELPARAM_VALUE.C_BRAM_117_IS_INOUT PARAM_VALUE.C_BRAM_117_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_117_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_117_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_118_IS_INOUT { MODELPARAM_VALUE.C_BRAM_118_IS_INOUT PARAM_VALUE.C_BRAM_118_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_118_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_118_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_119_IS_INOUT { MODELPARAM_VALUE.C_BRAM_119_IS_INOUT PARAM_VALUE.C_BRAM_119_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_119_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_119_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_120_IS_INOUT { MODELPARAM_VALUE.C_BRAM_120_IS_INOUT PARAM_VALUE.C_BRAM_120_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_120_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_120_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_121_IS_INOUT { MODELPARAM_VALUE.C_BRAM_121_IS_INOUT PARAM_VALUE.C_BRAM_121_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_121_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_121_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_122_IS_INOUT { MODELPARAM_VALUE.C_BRAM_122_IS_INOUT PARAM_VALUE.C_BRAM_122_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_122_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_122_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_123_IS_INOUT { MODELPARAM_VALUE.C_BRAM_123_IS_INOUT PARAM_VALUE.C_BRAM_123_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_123_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_123_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_124_IS_INOUT { MODELPARAM_VALUE.C_BRAM_124_IS_INOUT PARAM_VALUE.C_BRAM_124_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_124_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_124_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_125_IS_INOUT { MODELPARAM_VALUE.C_BRAM_125_IS_INOUT PARAM_VALUE.C_BRAM_125_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_125_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_125_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_126_IS_INOUT { MODELPARAM_VALUE.C_BRAM_126_IS_INOUT PARAM_VALUE.C_BRAM_126_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_126_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_126_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_BRAM_127_IS_INOUT { MODELPARAM_VALUE.C_BRAM_127_IS_INOUT PARAM_VALUE.C_BRAM_127_IS_INOUT } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_BRAM_127_IS_INOUT}] ${MODELPARAM_VALUE.C_BRAM_127_IS_INOUT}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH { MODELPARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_PORTS PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_PORTS PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_PORTS PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_PORTS PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_PORTS PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_PORTS PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_PORTS PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_PORTS PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_PORTS PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_PORTS PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_PORTS PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_PORTS PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_PORTS PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_PORTS PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_PORTS PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_PORTS PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_PORTS PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_PORTS PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_PORTS PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_PORTS PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_PORTS PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_PORTS PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_PORTS PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_PORTS PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_PORTS PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_PORTS PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_PORTS PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_PORTS PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_PORTS PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_PORTS PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_PORTS PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_PORTS PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_PORTS PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_PORTS PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_PORTS PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_PORTS PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_PORTS PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_PORTS PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_PORTS PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_PORTS PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_PORTS PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_PORTS PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_PORTS PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_PORTS PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_PORTS PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_PORTS PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_PORTS PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_PORTS PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_PORTS PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_PORTS PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_PORTS PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_PORTS PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_PORTS PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_PORTS PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_PORTS PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_PORTS PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_PORTS PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_PORTS PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_PORTS PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_PORTS PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_PORTS PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_PORTS PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_PORTS PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_PORTS PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_PORTS PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_PORTS PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_PORTS PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_PORTS PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_PORTS PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_PORTS PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_PORTS PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_PORTS PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_PORTS PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_PORTS PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_PORTS PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_PORTS PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_PORTS PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_PORTS PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_PORTS PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_PORTS PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_PORTS PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_PORTS PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_PORTS PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_PORTS PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_PORTS PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_PORTS PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_PORTS PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_PORTS PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_PORTS PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_PORTS PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_PORTS PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_PORTS PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_PORTS PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_PORTS PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_PORTS PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_PORTS PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_PORTS PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_PORTS PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_PORTS PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_PORTS PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_PORTS PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_PORTS PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_PORTS PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_PORTS PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_PORTS PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_PORTS PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_PORTS PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_PORTS PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_PORTS PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_PORTS PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_PORTS PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_PORTS PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_PORTS PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_PORTS PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_PORTS PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_PORTS PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_PORTS PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_PORTS PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_PORTS PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_PORTS PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_PORTS PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_PORTS PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_PORTS PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_PORTS PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_PORTS PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_PORTS PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_PORTS PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_PORTS { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_PORTS PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_PORTS}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_PORTS}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_DMWIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_MB_DEPTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_0_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_1_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_2_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_3_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_4_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_5_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_6_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_7_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_8_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_9_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_10_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_11_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_12_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_13_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_14_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_15_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_16_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_17_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_18_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_19_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_20_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_21_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_22_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_23_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_24_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_25_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_26_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_27_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_28_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_29_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_30_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_31_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_32_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_33_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_34_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_35_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_36_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_37_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_38_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_39_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_40_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_41_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_42_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_43_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_44_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_45_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_46_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_47_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_48_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_49_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_50_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_51_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_52_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_53_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_54_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_55_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_56_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_57_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_58_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_59_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_60_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_61_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_62_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_63_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_64_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_65_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_66_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_67_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_68_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_69_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_70_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_71_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_72_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_73_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_74_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_75_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_76_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_77_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_78_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_79_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_80_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_81_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_82_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_83_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_84_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_85_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_86_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_87_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_88_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_89_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_90_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_91_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_92_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_93_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_94_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_95_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_96_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_97_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_98_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_99_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_100_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_101_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_102_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_103_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_104_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_105_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_106_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_107_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_108_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_109_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_110_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_111_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_112_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_113_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_114_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_115_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_116_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_117_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_118_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_119_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_120_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_121_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_122_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_123_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_124_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_125_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_126_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH { MODELPARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_INPUT_BRAM_127_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_0_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_1_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_2_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_3_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_4_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_5_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_6_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_7_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_8_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_9_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_10_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_11_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_12_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_13_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_14_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_15_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_16_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_17_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_18_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_19_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_20_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_21_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_22_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_23_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_24_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_25_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_26_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_27_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_28_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_29_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_30_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_31_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_32_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_33_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_34_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_35_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_36_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_37_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_38_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_39_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_40_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_41_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_42_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_43_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_44_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_45_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_46_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_47_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_48_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_49_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_50_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_51_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_52_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_53_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_54_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_55_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_56_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_57_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_58_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_59_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_60_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_61_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_62_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_63_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_64_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_65_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_66_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_67_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_68_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_69_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_70_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_71_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_72_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_73_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_74_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_75_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_76_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_77_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_78_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_79_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_80_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_81_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_82_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_83_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_84_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_85_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_86_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_87_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_88_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_89_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_90_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_91_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_92_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_93_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_94_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_95_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_96_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_97_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_98_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_99_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_100_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_101_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_102_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_103_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_104_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_105_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_106_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_107_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_108_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_109_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_110_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_111_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_112_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_113_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_114_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_115_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_116_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_117_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_118_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_119_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_120_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_121_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_122_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_123_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_124_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_125_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_126_ADDR_WIDTH}
}

proc update_MODELPARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH { MODELPARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH } {
	# Procedure called to set VHDL generic/Verilog parameter value(s) based on TCL parameter value
	set_property value [get_property value ${PARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH}] ${MODELPARAM_VALUE.C_OUTPUT_BRAM_127_ADDR_WIDTH}
}

